[{"/Users/allen/GitHub/casrep/client/src/index.js":"1","/Users/allen/GitHub/casrep/client/src/App.js":"2","/Users/allen/GitHub/casrep/client/src/reportWebVitals.js":"3","/Users/allen/GitHub/casrep/client/src/components/Login/Login.js":"4","/Users/allen/GitHub/casrep/client/src/pages/Signup.js":"5","/Users/allen/GitHub/casrep/client/src/utils/API.js":"6","/Users/allen/GitHub/casrep/client/src/pages/Home.js":"7","/Users/allen/GitHub/casrep/client/src/pages/Hospital.js":"8","/Users/allen/GitHub/casrep/client/src/pages/EMS.js":"9","/Users/allen/GitHub/casrep/client/src/components/NewPatient/NewPatient.js":"10","/Users/allen/GitHub/casrep/client/src/components/PreviousPatients/PreviousPatients.js":"11","/Users/allen/GitHub/casrep/client/src/components/NewPatient/PtInitForm.js":"12","/Users/allen/GitHub/casrep/client/src/pages/CurrentPatient.js":"13","/Users/allen/GitHub/casrep/client/src/components/Vitals/VitalsForm.js":"14","/Users/allen/GitHub/casrep/client/src/components/PatientCard/PatientCard.js":"15","/Users/allen/GitHub/casrep/client/src/components/Vitals/VitalsTable.js":"16","/Users/allen/GitHub/casrep/client/src/components/CriticalWarning/CritWarnSelect.js":"17","/Users/allen/GitHub/casrep/client/src/components/Navbar/Navbar.js":"18","/Users/allen/GitHub/casrep/client/src/components/EtaUpdate/EtaUpdate.js":"19","/Users/allen/GitHub/casrep/client/src/components/PatientInformation/PatientInformationForm.js":"20","/Users/allen/GitHub/casrep/client/src/components/PatientInformation/PatientInformationTable.js":"21","/Users/allen/GitHub/casrep/client/src/components/HomeButtonBase/HomeButtonBase.js":"22","/Users/allen/GitHub/casrep/client/src/components/EMSToolbar/EMSToolbar.js":"23","/Users/allen/GitHub/casrep/client/src/components/EMSPatientCard/EMSPatientCard.js":"24"},{"size":697,"mtime":1608071759065,"results":"25","hashOfConfig":"26"},{"size":1865,"mtime":1608229332774,"results":"27","hashOfConfig":"26"},{"size":362,"mtime":1606871342580,"results":"28","hashOfConfig":"26"},{"size":2226,"mtime":1606954155256,"results":"29","hashOfConfig":"26"},{"size":3732,"mtime":1606932760261,"results":"30","hashOfConfig":"26"},{"size":1468,"mtime":1608236185199,"results":"31","hashOfConfig":"26"},{"size":4709,"mtime":1608407292276,"results":"32","hashOfConfig":"26"},{"size":4552,"mtime":1608407289751,"results":"33","hashOfConfig":"26"},{"size":3730,"mtime":1608407293132,"results":"34","hashOfConfig":"26"},{"size":2483,"mtime":1608407293966,"results":"35","hashOfConfig":"26"},{"size":656,"mtime":1607052572852,"results":"36","hashOfConfig":"26"},{"size":4689,"mtime":1608407294779,"results":"37","hashOfConfig":"26"},{"size":14102,"mtime":1608495765651,"results":"38","hashOfConfig":"26"},{"size":8230,"mtime":1608495435158,"results":"39","hashOfConfig":"26"},{"size":12745,"mtime":1608443568780,"results":"40","hashOfConfig":"26"},{"size":2855,"mtime":1608428579733,"results":"41","hashOfConfig":"26"},{"size":9897,"mtime":1608494456627,"results":"42","hashOfConfig":"26"},{"size":2262,"mtime":1608407012938,"results":"43","hashOfConfig":"26"},{"size":3803,"mtime":1608495554663,"results":"44","hashOfConfig":"26"},{"size":7382,"mtime":1608495711050,"results":"45","hashOfConfig":"26"},{"size":2841,"mtime":1608407298797,"results":"46","hashOfConfig":"26"},{"size":3889,"mtime":1608321932831,"results":"47","hashOfConfig":"26"},{"size":5520,"mtime":1608492422856,"results":"48","hashOfConfig":"26"},{"size":9809,"mtime":1608495906616,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"12pzw6t",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/allen/GitHub/casrep/client/src/index.js",[],["104","105"],"/Users/allen/GitHub/casrep/client/src/App.js",[],"/Users/allen/GitHub/casrep/client/src/reportWebVitals.js",[],"/Users/allen/GitHub/casrep/client/src/components/Login/Login.js",[],["106","107"],"/Users/allen/GitHub/casrep/client/src/pages/Signup.js",[],"/Users/allen/GitHub/casrep/client/src/utils/API.js",["108"],"import axios from \"axios\"\n\nexport default {\n    // createUser: function(userData) {\n    //     return axios.post(\"/api/user/signup\", userData)\n    // },\n\n    // findUser: function(loginCredentials) {\n    //     // console.log(loginCredentials)\n    //     return axios.get(\"/api/user/login\", loginCredentials)\n    // },\n\n    createPatient: function (PtInitInfo) {\n        // if (navigator.onLine) {\n            return axios.post(\"/api/patients/new\", PtInitInfo)\n        // } else {console.log(\"offline here\")}\n    },\n\n    findById: function(id) {\n        // console.log(id)\n        // let idString = id.toString()\n        return axios.get(\"/api/patients/\" + id)\n        // return axios.get(\"/api/patients/id\", {params: {id}})\n    },\n\n    updateETA: function (id, time) {\n        return axios.put(\"/api/patients/eta/\" + id, time)\n    },\n\n    updateVitals: function(id, vitals) {\n        // console.log(\"here\")\n        return axios.put(\"/api/patients/vitals/\"+ id, vitals)\n    },\n\n    updateCriticalWarnings: function(id, criticals) {\n        // console.log(\"here\")\n        return axios.put(\"/api/patients/criticals/\"+ id, criticals)\n    },\n    \n    updatePtInformation: function (id, information) {\n        return axios.put(\"/api/patients/information/\" +id, information)\n    },\n\n    findSix: function () {\n        return axios.get(\"/api/patients\")\n    }\n\n    // findMostRecentPatient: function () {\n    //     return axios.get(\"/api/patients/recent\")\n        \n    // }\n}","/Users/allen/GitHub/casrep/client/src/pages/Home.js",["109"],"// import React from \"react\"\n// import { Card, Row, Col, Button, } from \"react-bootstrap\"\nimport \"./style.css\"\n\nimport React from 'react';\n// import CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport HomeButtonBases from \"../components/HomeButtonBase/HomeButtonBase\"\n\n\n\n\n// import ambulance from \"../assets/images/ambulance.jpg\"\n// import hospital from \"../assets/images/hospital.jpg\"\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow:1\n    },\n    header: {\n        padding: \"2rem 0 4rem 0\",\n        textAlign:\"center\",\n        borderBottom:\"5px solid #FFD400\",\n        marginBottom: \"3rem\"\n    },\n    subheader: {\n        textAlign:\"center\",\n        paddingBottom:\"3rem\"\n    }\n}))\n\nfunction Home() {\n    const classes=useStyles()\n    return (\n        <div className={classes.root}>\n        <Container>\n            <Grid container>\n                <Grid item xs={12} className={classes.header}>\n                    <Typography variant=\"h2\" style={{ color: \"#FFD400\" }}>Welcome to INREP</Typography>\n                    <Typography variant=\"h4\"style={{ color: \"#B7D5D4\" }}>A tool to help EMS providers reliably send reports to Hospitals without worrying about radio signal or cell service</Typography>\n                </Grid>\n                <Grid item xs={12} className={classes.subheader}>\n                    <Typography variant=\"h5\" style={{color:\"white\"}}>To begin, select what type of user you are:</Typography>\n                </Grid>\n                <Grid item xs={12}>\n                    <HomeButtonBases style={{width:\"80%\"}} />\n                </Grid>\n            </Grid>\n        </Container>\n        </div>\n\n        // <div className=\"container\" >\n        /* <div\n            style={{ disply: \"flex\", textAlign: \"center\", padding: \"1rem 0 2rem 0\", borderBottom: \"5px solid #FFD400\", marginBottom: \"3rem\" }}\n        // className=\"jumbotron\" \n        >\n            <h1 style={{ color: \"#FFD400\" }}>Welcome to INREP</h1>\n            <h4 style={{ color: \"#B7D5D4\" }}>A tool to help EMS providers reliably send reports to Hospitals without worrying about radio signal or cell service</h4>\n        </div>\n        <div>\n            <Row style={{ display: \"flex\", justifyContent: \"center\", color: \"white\", paddingBottom:\"3rem\"}}>\n                <h2>To begin, select what type of user you are:</h2>\n            </Row>\n            <Row>\n                <Col style={{ display: \"flex\", justifyContent: \"space-around\" }}>\n                    <a\n                        style={{ textAlign: \"center\", height: \"300px\", width: \"100%\", backgroundImage: `url(${ambulance})`, backgroundSize: \"contain\", backgroundRepeat: \"no-repeat\" }}\n                        href=\"/ems\"><span style={{ backgroundColor:\"rgb(119, 135, 139, 0.7)\",color: \"#FFD400\", fontSize: \"3rem\" }}>EMS PROVIDER</span></a>\n                    {/* {/* <Button href=\"/ems\">EMS Provider</Button>  \n                </Col>\n                <Col style={{ display: \"flex\", justifyContent: \"space-around\" }}>\n                    <a\n                        style={{  textAlign: \"center\", height: \"300px\", width: \"100%\", backgroundImage: `url(${hospital})`, backgroundSize: \"contain\", backgroundRepeat: \"no-repeat\" }}\n                        href=\"/hospital\"><span style={{ backgroundColor:\"rgb(119, 135, 139, 0.7)\",color: \"#FFD400\", fontSize: \"3rem\" }}>HOSPITAL</span></a>\n                    {/* // {/* <Button href=\"/hospital\">Hosipial</Button>  *\n                </Col>\n            </Row>\n        </div> */\n\n        // </div >\n    )\n}\n\nexport default Home\n\n{/* <Card >\n                <Card.Header><h2>To begin, select what type of user you are:</h2></Card.Header>\n                <Card.Body >\n                    <Card.Link\n                        className=\"btn btn-dark\"\n                        href=\"/ems\"\n                    >\n                        <h4>EMS Provider</h4>\n                    </Card.Link>\n                    <Card.Link\n                        className=\"btn btn-dark\"\n                        href=\"/hospital\"\n                    >\n                        <h4>Hospital</h4>\n                    </Card.Link>\n                    {/* <a\n                        className=\"btn btn-dark\"\n                        href=\"/ems\"\n                    ><h4>EMS Provider</h4></a>\n                    <a\n                        className=\"btn btn-dark\"\n                        href=\"/hospital\"\n                    ><h4>Hospital</h4>\n                    </a> \n                </Card.Body>\n            </Card> */}","/Users/allen/GitHub/casrep/client/src/pages/Hospital.js",[],"/Users/allen/GitHub/casrep/client/src/pages/EMS.js",[],"/Users/allen/GitHub/casrep/client/src/components/NewPatient/NewPatient.js",[],"/Users/allen/GitHub/casrep/client/src/components/PreviousPatients/PreviousPatients.js",[],["110","111"],"/Users/allen/GitHub/casrep/client/src/components/NewPatient/PtInitForm.js",["112"],"import React, { useState } from \"react\"\nimport API from \"../../utils/API\"\n// import Form from \"react-bootstrap/Form\"\n// import {Form} from \"@material-ui/core\"\nimport { useHistory } from \"react-router-dom\";\n\n\n// import Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\n// import Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\n// import { TextField } from \"@material-ui/core\";\n\nimport io from \"socket.io-client\"\nconst socket = io()\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& .MuiTextField-root': {\n            margin: \"0.5rem\",\n            width: '25ch',\n        },\n    },\n    inputContainer: {\n        // display:\"flex\",\n        // justifyItems:\"space-around\"\n        paddingBottom: \"2rem\",\n    },\n    form: {\n        backgroundColor: \"lightgray\",\n        padding: \"1rem\",\n        color: \"black\"\n    },\n    input: {\n        margin: \"0 0.5rem\"\n    },\n    buttonDiv: {\n        justifyItems: \"center\"\n    }\n}));\n\nfunction PtInitForm(props) {\n    const classes = useStyles()\n\n    const [ptInit, setPtInit] = useState({\n        respondingUnit: \"\",\n        ETA: \"\",\n        // criticalWarn: \"\"\n    })\n    const history = useHistory()\n    // const [ptId, setPtId] = useState(\"\")\n\n    function handleInputChange(event) {\n        // console.log(event.target.name)\n        const { name, value } = event.target\n        setPtInit({ ...ptInit, [name]: value })\n    }\n\n    function handleReroute(id) {\n        history.push(\"/patients/\" + id)\n    }\n\n    function handleSubmit(event) {\n        event.preventDefault()\n        // console.log(ptInit)\n\n        // if (navigator.onLine){\n\n        API.createPatient(ptInit).then((data) => {\n            // console.log(data)\n            handleReroute(data.data._id)\n        }).then(socket.emit(\"update\"))\n        // } else {console.log(\"offlineoffline\")}\n\n        // .then(API.findMostRecentPatient()\n        //     .then(setPtId()))\n        // .then(console.log(dbModel)))\n\n    }\n\n    return (\n        <Grid container justify=\"center\">\n            <form className={classes.root, classes.form} onSubmit={handleSubmit}>\n                <div className={classes.inputContainer}>\n                    <TextField\n                        className={classes.input}\n                        required\n                        variant=\"outlined\"\n                        label=\"Unit Responding\"\n                        placeholder=\"MS-21\"\n                        helperText=\"Required\"\n                        onChange={handleInputChange}\n                        type=\"text\"\n                        name=\"respondingUnit\"\n                    />\n                    <TextField\n                        className={classes.input}\n                        variant=\"outlined\"\n                        label=\"ETA\"\n                        helperText=\"Optional (Can update later)\"\n                        type=\"text\"\n                        name=\"ETA\"\n                        onChange={handleInputChange}\n                    />\n                </div>\n                <div className={classes.buttonDiv}>\n                    <Button size=\"large\" variant=\"contained\" color=\"primary\" onClick={handleSubmit}>Submit</Button>\n                </div>\n            </form>\n        </Grid>\n        // <Form onSubmit={handleSubmit}>\n        //     <Form.Group>\n        //         <Form.Label >Unit Responding</Form.Label>\n        //         <Form.Control\n        //             onChange={handleInputChange}\n        //             type=\"text\"\n        //             name=\"respondingUnit\"\n        //         />\n        //     </Form.Group>\n        //     {/* <Form.Group>\n        //         <Form.Label>ETA</Form.Label>\n        //         <Form.Control\n        //                 type=\"text\"\n        //                 name=\"ETA\"\n        //                 onChange={handleInputChange}\n        //             />\n        //     </Form.Group>\n        //     <Form.Group>\n        //         <Form.Label>Critical Warnings</Form.Label>\n        //         <Form.Control\n        //                 type=\"text\"\n        //                 name=\"criticalWarn\"\n        //                 onChange={handleInputChange} />\n        //     </Form.Group> */}\n        //     <Form.Control className=\"btn btn-primary\" type=\"submit\" value=\"Initiate Patient Report\"></Form.Control>\n        //     {/* <button \n        //     className=\"btn btn-warning\"\n        //     >\n        //         <h4>Open New Incident\n        //         </h4>\n        //     </button> */}\n        // </Form>\n    )\n}\n\nexport default PtInitForm","/Users/allen/GitHub/casrep/client/src/pages/CurrentPatient.js",["113","114","115","116"],"/Users/allen/GitHub/casrep/client/src/components/Vitals/VitalsForm.js",["117"],"/Users/allen/GitHub/casrep/client/src/components/PatientCard/PatientCard.js",[],"/Users/allen/GitHub/casrep/client/src/components/Vitals/VitalsTable.js",[],"/Users/allen/GitHub/casrep/client/src/components/CriticalWarning/CritWarnSelect.js",["118","119"],"/Users/allen/GitHub/casrep/client/src/components/Navbar/Navbar.js",[],"/Users/allen/GitHub/casrep/client/src/components/EtaUpdate/EtaUpdate.js",["120"],"/Users/allen/GitHub/casrep/client/src/components/PatientInformation/PatientInformationForm.js",[],"/Users/allen/GitHub/casrep/client/src/components/PatientInformation/PatientInformationTable.js",[],"/Users/allen/GitHub/casrep/client/src/components/HomeButtonBase/HomeButtonBase.js",[],"/Users/allen/GitHub/casrep/client/src/components/EMSToolbar/EMSToolbar.js",["121"],"/Users/allen/GitHub/casrep/client/src/components/EMSPatientCard/EMSPatientCard.js",[],{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"122","replacedBy":"126"},{"ruleId":"124","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":3,"column":1,"nodeType":"130","endLine":52,"endColumn":2},{"ruleId":"131","severity":1,"message":"132","line":91,"column":1,"nodeType":"133","messageId":"134","endLine":116,"endColumn":24},{"ruleId":"122","replacedBy":"135"},{"ruleId":"124","replacedBy":"136"},{"ruleId":"137","severity":1,"message":"138","line":85,"column":42,"nodeType":"139","messageId":"140","endLine":85,"endColumn":43},{"ruleId":"141","severity":1,"message":"142","line":17,"column":8,"nodeType":"143","messageId":"144","endLine":17,"endColumn":19},{"ruleId":"141","severity":1,"message":"145","line":24,"column":8,"nodeType":"143","messageId":"144","endLine":24,"endColumn":18},{"ruleId":"146","severity":1,"message":"147","line":106,"column":8,"nodeType":"148","endLine":106,"endColumn":10,"suggestions":"149"},{"ruleId":"141","severity":1,"message":"150","line":125,"column":14,"nodeType":"143","messageId":"144","endLine":125,"endColumn":23},{"ruleId":"141","severity":1,"message":"151","line":8,"column":10,"nodeType":"143","messageId":"144","endLine":8,"endColumn":20},{"ruleId":"141","severity":1,"message":"152","line":10,"column":8,"nodeType":"143","messageId":"144","endLine":10,"endColumn":12},{"ruleId":"141","severity":1,"message":"153","line":11,"column":10,"nodeType":"143","messageId":"144","endLine":11,"endColumn":14},{"ruleId":"137","severity":1,"message":"138","line":78,"column":38,"nodeType":"139","messageId":"140","endLine":78,"endColumn":39},{"ruleId":"154","severity":1,"message":"155","line":62,"column":9,"nodeType":"156","messageId":"157","endLine":62,"endColumn":24},"no-native-reassign",["158"],"no-negated-in-lhs",["159"],["158"],["159"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock",["158"],["159"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","no-unused-vars","'PatientCard' is defined but never used.","Identifier","unusedVar","'EMSToolbar' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["160"],"'clearForm' is defined but never used.","'Typography' is defined but never used.","'Grid' is defined but never used.","'Form' is defined but never used.","no-dupe-keys","Duplicate key 'backgroundColor'.","ObjectExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"161","fix":"162"},"Update the dependencies array to be: [id]",{"range":"163","text":"164"},[3239,3241],"[id]"]