[{"/Users/allen/GitHub/casrep/client/src/index.js":"1","/Users/allen/GitHub/casrep/client/src/App.js":"2","/Users/allen/GitHub/casrep/client/src/reportWebVitals.js":"3","/Users/allen/GitHub/casrep/client/src/components/Login/Login.js":"4","/Users/allen/GitHub/casrep/client/src/pages/Signup.js":"5","/Users/allen/GitHub/casrep/client/src/utils/API.js":"6","/Users/allen/GitHub/casrep/client/src/pages/Home.js":"7","/Users/allen/GitHub/casrep/client/src/pages/Hospital.js":"8","/Users/allen/GitHub/casrep/client/src/pages/EMS.js":"9","/Users/allen/GitHub/casrep/client/src/components/EmsLaunch/EmsLaunch.js":"10","/Users/allen/GitHub/casrep/client/src/components/NewPatient/NewPatient.js":"11","/Users/allen/GitHub/casrep/client/src/components/PreviousPatients/PreviousPatients.js":"12","/Users/allen/GitHub/casrep/client/src/components/NewPatient/NewPtButton.js":"13","/Users/allen/GitHub/casrep/client/src/components/NewPatient/PtInitForm.js":"14","/Users/allen/GitHub/casrep/client/src/components/Welcome/Welcome.js":"15","/Users/allen/GitHub/casrep/client/src/pages/CurrentPatient.js":"16","/Users/allen/GitHub/casrep/client/src/components/Vitals/NewVitals.js":"17","/Users/allen/GitHub/casrep/client/src/components/Vitals/VitalsForm.js":"18","/Users/allen/GitHub/casrep/client/src/components/PatientCard/PatientCard.js":"19","/Users/allen/GitHub/casrep/client/src/components/Vitals/VitalsTable.js":"20","/Users/allen/GitHub/casrep/client/src/components/CriticalWarning/CriticalWarnings.js":"21","/Users/allen/GitHub/casrep/client/src/components/CriticalWarning/CritWarnSelect.js":"22","/Users/allen/GitHub/casrep/client/src/components/Navbar/Navbar.js":"23","/Users/allen/GitHub/casrep/client/src/components/EtaUpdate/EtaUpdate.js":"24","/Users/allen/GitHub/casrep/client/src/components/EtaUpdate/EtaUpdateButton.js":"25","/Users/allen/GitHub/casrep/client/src/components/PatientInformation/UpdateInformation.js":"26","/Users/allen/GitHub/casrep/client/src/components/PatientInformation/PatientInformationForm.js":"27","/Users/allen/GitHub/casrep/client/src/components/PatientInformation/PatientInformationTable.js":"28","/Users/allen/GitHub/casrep/client/src/components/HomeButtonBase/HomeButtonBase.js":"29","/Users/allen/GitHub/casrep/client/src/components/EMSToolbar/EMSToolbar.js":"30"},{"size":697,"mtime":1608071759065,"results":"31","hashOfConfig":"32"},{"size":1865,"mtime":1608229332774,"results":"33","hashOfConfig":"32"},{"size":362,"mtime":1606871342580,"results":"34","hashOfConfig":"32"},{"size":2226,"mtime":1606954155256,"results":"35","hashOfConfig":"32"},{"size":3732,"mtime":1606932760261,"results":"36","hashOfConfig":"32"},{"size":1468,"mtime":1608236185199,"results":"37","hashOfConfig":"32"},{"size":4706,"mtime":1608327820833,"results":"38","hashOfConfig":"32"},{"size":3024,"mtime":1608262109998,"results":"39","hashOfConfig":"32"},{"size":3716,"mtime":1608337869998,"results":"40","hashOfConfig":"32"},{"size":984,"mtime":1608255809214,"results":"41","hashOfConfig":"32"},{"size":2474,"mtime":1608325352835,"results":"42","hashOfConfig":"32"},{"size":656,"mtime":1607052572852,"results":"43","hashOfConfig":"32"},{"size":349,"mtime":1607190961268,"results":"44","hashOfConfig":"32"},{"size":4683,"mtime":1608326866367,"results":"45","hashOfConfig":"32"},{"size":223,"mtime":1607556653404,"results":"46","hashOfConfig":"32"},{"size":10514,"mtime":1608391742240,"results":"47","hashOfConfig":"32"},{"size":272,"mtime":1607527395567,"results":"48","hashOfConfig":"32"},{"size":5684,"mtime":1608388123928,"results":"49","hashOfConfig":"32"},{"size":7696,"mtime":1608393054004,"results":"50","hashOfConfig":"32"},{"size":909,"mtime":1608137137846,"results":"51","hashOfConfig":"32"},{"size":1486,"mtime":1608260767659,"results":"52","hashOfConfig":"32"},{"size":4658,"mtime":1608336647898,"results":"53","hashOfConfig":"32"},{"size":2273,"mtime":1608318876615,"results":"54","hashOfConfig":"32"},{"size":709,"mtime":1608235731229,"results":"55","hashOfConfig":"32"},{"size":274,"mtime":1608231236008,"results":"56","hashOfConfig":"32"},{"size":284,"mtime":1608235545653,"results":"57","hashOfConfig":"32"},{"size":5965,"mtime":1608389603962,"results":"58","hashOfConfig":"32"},{"size":1361,"mtime":1608247507576,"results":"59","hashOfConfig":"32"},{"size":3889,"mtime":1608321932831,"results":"60","hashOfConfig":"32"},{"size":4932,"mtime":1608389203196,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"12pzw6t",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"64"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"64"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"64"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"64"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"64"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"64"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"64"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"64"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"64"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"64"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"64"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"64"},"/Users/allen/GitHub/casrep/client/src/index.js",[],["138","139"],"/Users/allen/GitHub/casrep/client/src/App.js",[],"/Users/allen/GitHub/casrep/client/src/reportWebVitals.js",[],"/Users/allen/GitHub/casrep/client/src/components/Login/Login.js",[],["140","141"],"/Users/allen/GitHub/casrep/client/src/pages/Signup.js",[],"/Users/allen/GitHub/casrep/client/src/utils/API.js",["142"],"import axios from \"axios\"\n\nexport default {\n    // createUser: function(userData) {\n    //     return axios.post(\"/api/user/signup\", userData)\n    // },\n\n    // findUser: function(loginCredentials) {\n    //     // console.log(loginCredentials)\n    //     return axios.get(\"/api/user/login\", loginCredentials)\n    // },\n\n    createPatient: function (PtInitInfo) {\n        // if (navigator.onLine) {\n            return axios.post(\"/api/patients/new\", PtInitInfo)\n        // } else {console.log(\"offline here\")}\n    },\n\n    findById: function(id) {\n        // console.log(id)\n        // let idString = id.toString()\n        return axios.get(\"/api/patients/\" + id)\n        // return axios.get(\"/api/patients/id\", {params: {id}})\n    },\n\n    updateETA: function (id, time) {\n        return axios.put(\"/api/patients/eta/\" + id, time)\n    },\n\n    updateVitals: function(id, vitals) {\n        // console.log(\"here\")\n        return axios.put(\"/api/patients/vitals/\"+ id, vitals)\n    },\n\n    updateCriticalWarnings: function(id, criticals) {\n        // console.log(\"here\")\n        return axios.put(\"/api/patients/criticals/\"+ id, criticals)\n    },\n    \n    updatePtInformation: function (id, information) {\n        return axios.put(\"/api/patients/information/\" +id, information)\n    },\n\n    findSix: function () {\n        return axios.get(\"/api/patients\")\n    }\n\n    // findMostRecentPatient: function () {\n    //     return axios.get(\"/api/patients/recent\")\n        \n    // }\n}","/Users/allen/GitHub/casrep/client/src/pages/Home.js",["143","144"],"// import React from \"react\"\n// import { Card, Row, Col, Button, } from \"react-bootstrap\"\nimport \"./style.css\"\n\nimport React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport HomeButtonBases from \"../components/HomeButtonBase/HomeButtonBase\"\n\n\n\n\n// import ambulance from \"../assets/images/ambulance.jpg\"\n// import hospital from \"../assets/images/hospital.jpg\"\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow:1\n    },\n    header: {\n        padding: \"2rem 0 4rem 0\",\n        textAlign:\"center\",\n        borderBottom:\"5px solid #FFD400\",\n        marginBottom: \"3rem\"\n    },\n    subheader: {\n        textAlign:\"center\",\n        paddingBottom:\"3rem\"\n    }\n}))\n\nfunction Home() {\n    const classes=useStyles()\n    return (\n        <div className={classes.root}>\n        <Container>\n            <Grid container>\n                <Grid item xs={12} className={classes.header}>\n                    <Typography variant=\"h2\" style={{ color: \"#FFD400\" }}>Welcome to INREP</Typography>\n                    <Typography variant=\"h4\"style={{ color: \"#B7D5D4\" }}>A tool to help EMS providers reliably send reports to Hospitals without worrying about radio signal or cell service</Typography>\n                </Grid>\n                <Grid item xs={12} className={classes.subheader}>\n                    <Typography variant=\"h5\" style={{color:\"white\"}}>To begin, select what type of user you are:</Typography>\n                </Grid>\n                <Grid item xs={12}>\n                    <HomeButtonBases style={{width:\"80%\"}} />\n                </Grid>\n            </Grid>\n        </Container>\n        </div>\n\n        // <div className=\"container\" >\n        /* <div\n            style={{ disply: \"flex\", textAlign: \"center\", padding: \"1rem 0 2rem 0\", borderBottom: \"5px solid #FFD400\", marginBottom: \"3rem\" }}\n        // className=\"jumbotron\" \n        >\n            <h1 style={{ color: \"#FFD400\" }}>Welcome to INREP</h1>\n            <h4 style={{ color: \"#B7D5D4\" }}>A tool to help EMS providers reliably send reports to Hospitals without worrying about radio signal or cell service</h4>\n        </div>\n        <div>\n            <Row style={{ display: \"flex\", justifyContent: \"center\", color: \"white\", paddingBottom:\"3rem\"}}>\n                <h2>To begin, select what type of user you are:</h2>\n            </Row>\n            <Row>\n                <Col style={{ display: \"flex\", justifyContent: \"space-around\" }}>\n                    <a\n                        style={{ textAlign: \"center\", height: \"300px\", width: \"100%\", backgroundImage: `url(${ambulance})`, backgroundSize: \"contain\", backgroundRepeat: \"no-repeat\" }}\n                        href=\"/ems\"><span style={{ backgroundColor:\"rgb(119, 135, 139, 0.7)\",color: \"#FFD400\", fontSize: \"3rem\" }}>EMS PROVIDER</span></a>\n                    {/* {/* <Button href=\"/ems\">EMS Provider</Button>  \n                </Col>\n                <Col style={{ display: \"flex\", justifyContent: \"space-around\" }}>\n                    <a\n                        style={{  textAlign: \"center\", height: \"300px\", width: \"100%\", backgroundImage: `url(${hospital})`, backgroundSize: \"contain\", backgroundRepeat: \"no-repeat\" }}\n                        href=\"/hospital\"><span style={{ backgroundColor:\"rgb(119, 135, 139, 0.7)\",color: \"#FFD400\", fontSize: \"3rem\" }}>HOSPITAL</span></a>\n                    {/* // {/* <Button href=\"/hospital\">Hosipial</Button>  *\n                </Col>\n            </Row>\n        </div> */\n\n        // </div >\n    )\n}\n\nexport default Home\n\n{/* <Card >\n                <Card.Header><h2>To begin, select what type of user you are:</h2></Card.Header>\n                <Card.Body >\n                    <Card.Link\n                        className=\"btn btn-dark\"\n                        href=\"/ems\"\n                    >\n                        <h4>EMS Provider</h4>\n                    </Card.Link>\n                    <Card.Link\n                        className=\"btn btn-dark\"\n                        href=\"/hospital\"\n                    >\n                        <h4>Hospital</h4>\n                    </Card.Link>\n                    {/* <a\n                        className=\"btn btn-dark\"\n                        href=\"/ems\"\n                    ><h4>EMS Provider</h4></a>\n                    <a\n                        className=\"btn btn-dark\"\n                        href=\"/hospital\"\n                    ><h4>Hospital</h4>\n                    </a> \n                </Card.Body>\n            </Card> */}","/Users/allen/GitHub/casrep/client/src/pages/Hospital.js",["145","146","147"],"import React, { Component, useEffect, useState } from \"react\"\nimport { Container, Row, Col } from \"react-bootstrap\"\nimport Welcome from \"../components/Welcome/Welcome\"\nimport PatientCard from \"../components/PatientCard/PatientCard\"\nimport API from \"../utils/API\"\n\n// import socketIOClient from \"socket.io-client\"\n// const socket = socketIOClient(\"http://localhost:3000/\")\n\nimport io from \"socket.io-client\"\nconst socket = io()\n\n\n// let socket\nfunction Hospital() {\n    // class Hospital extends Component {\n    //     constructor() {\n    //         super();\n    //         this.state = {\n    //             patients: []\n    //         }\n    //         socket = socketIOClient(\"http://localhost:3001/\")\n    //     }\n    const [patients, setPatients] = useState([])\n\n    function loadSix() {\n        API.findSix()\n            .then(res =>\n                // console.log(res.data),\n                // this.setState({patients: res.data}),\n                setPatients(res.data),\n                // console.log(this.state.patients)\n\n            )\n            .catch(err => console.log(err));\n    }\n    useEffect(() => {\n        // componentDidMount() {\n\n        // console.log(id)\n        loadSix()\n        // console.log(ptInfo)\n    }, [])\n    // socket.on('hello', ({ message }) => alert(message));\n\n    // socket.on('hello', () => {console.log(\"hello world\")});\n\n    socket.on(\"hello\", () => {\n        loadSix()\n    })\n\n    // function loadSix() {\n    //     API.findSix()\n    //         .then(res =>\n    //             // console.log(res.data),\n    //             setPatients(res.data),\n    //             console.log(patients)\n\n    //         )\n    //         .catch(err => console.log(err));\n    // }\n    // render() {\n    return (\n        <Container >\n            <div\n                style={{ disply: \"flex\", textAlign: \"center\", padding: \"1rem 0 2rem 0\", borderBottom: \"5px solid #FFD400\", marginBottom: \"3rem\" }}\n            >\n                <h1 style={{ color: \"#FFD400\" }}>Welcome Hospital User</h1>\n                <h4 style={{ color: \"#B7D5D4\" }}>Here are the most recent updates regarding your incoming patients from EMS</h4>\n            </div>\n            {/* <Row className=\"jumbotron\">\n                <Col>\n                    <Welcome userType=\"Hospital User\" />\n                </Col>\n            </Row> */}\n            {patients.length ? (\n                <div style={{ justifyContent: \"space-around\" }}>\n                    {patients.map(patient => (\n                        // console.log(patient)\n                        // <Row key={patient._id} style={{ justifyContent: \"center\" }}>\n                            <PatientCard key={patient._id} patient={patient} />\n                        // </Row>\n                    ))}\n                </div>\n            ) : (\n                    <Row>\n                        <h3>No Patients to display</h3>\n                    </Row>\n                )}\n        </Container>\n        // <h1>welcome to the Hospital page!</h1>\n    )\n    // }\n}\n\nexport default Hospital","/Users/allen/GitHub/casrep/client/src/pages/EMS.js",["148","149","150","151","152"],"import React from \"react\"\nimport { Row, Col } from \"react-bootstrap\"\n\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button'\nimport { makeStyles } from '@material-ui/core/styles';\n\n\n// import Card from \"react-bootstrap/Card\"\nimport \"./style.css\"\nimport EmsLaunch from \"../components/EmsLaunch/EmsLaunch\"\n// import NewPatient from \"../components/NewPatient/NewPatient\"\n// import PreviousPatients from \"../components/PreviousPatients/PreviousPatients\"\nimport Welcome from \"../components/Welcome/Welcome\"\nimport { Typography } from \"@material-ui/core\";\n\nconst links = [\n    {\n        title: \"New Patient\",\n        route: \"/new\"\n    },\n    {\n        title: \"Previous Patients\",\n        route: \"/previous\"\n    }\n]\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1\n    },\n    header: {\n        padding: \"2rem 0 4rem 0\",\n        textAlign: \"center\",\n        borderBottom: \"5px solid #FFD400\",\n        marginBottom: \"3rem\"\n    },\n    subheader: {\n        textAlign: \"center\",\n        paddingBottom: \"3rem\"\n    },\n    button: {\n        // size: \"large\",\n        // height: \"\"\n    }\n}))\n\nfunction EMS() {\n    const classes = useStyles()\n    return (\n        <Container>\n            <Grid container>\n                <Grid item xs={12} className={classes.header}>\n                    <Typography variant=\"h2\" style={{ color: \"#FFD400\" }}>Welcome EMS User</Typography>\n                    {/* <h4 style={{ color: \"#B7D5D4\" }}>A tool to help EMS providers reliably send reports to Hospitals without worrying about radio signal or cell service</h4> */}\n                </Grid>\n                <Grid item xs={12} className={classes.subheader}>\n                    <Typography variant=\"h5\" style={{ color: \"white\" }}>What would you like to do?</Typography>\n                </Grid>\n                <Grid item xs={12}>\n                    <Grid container justify=\"center\" spacing={3}>\n                        {links.map((link) => (\n                            <Grid item key={link.title}>\n                                <Button size=\"large\" variant=\"contained\" className={classes.button} href={link.route}>{link.title}</Button>\n                            </Grid>\n                        ))}\n                    </Grid>\n                </Grid>\n            </Grid>\n            {/* <Row className=\"justify-content-center\">\n                <EmsLaunch />\n            </Row> */}\n        </Container>\n\n        // const [disp, setDisp] = useState(\"\")\n        // let display\n\n        // function handleDisplayChange(newDisp) {\n        //     setDisp(newDisp)\n        // }\n\n        // switch (disp) {\n        //     case \"\":\n        //         display = <EmsLaunch onClick={handleDisplayChange} />\n        //         break\n        //     case \"newPatient\":\n        //         display = <NewPatient onClick={handleDisplayChange}/>\n        //         break\n        //     case \"previousPatients\":\n        //         display = <PreviousPatients onClick={handleDisplayChange}/>\n        //         break\n        //     default:\n        //         return\n        // }\n\n        // if (disp === \"\") {\n        //     display = <EmsLaunch onClick={handleDisplayChange} />\n        // }\n        // <UserContainer userType=\"EMS Provider\">\n        //     <EmsLaunch/>\n        // </UserContainer>\n\n        // <div className=\"container\">\n        //     <div className=\"jumbotron\">\n        //         <h1 style={{ color: \"#FFD400\" }}>Welcome EMS Provider</h1>\n        //     </div>\n        //     <div>\n        //         <EmsLaunch/>\n        //     </div>\n        // </div>\n    )\n}\n\nexport default EMS","/Users/allen/GitHub/casrep/client/src/components/EmsLaunch/EmsLaunch.js",[],"/Users/allen/GitHub/casrep/client/src/components/NewPatient/NewPatient.js",["153","154","155"],"import React from \"react\"\n// import { Card, Container, Row, Col } from \"react-bootstrap/\"\n// import { Card } from \"@material-ui/core\"\n// import API from \"../../utils/API\";\nimport Welcome from \"../../components/Welcome/Welcome\"\n// import NewPtButton from \"./NewPtButton\"\nimport PtInitForm from \"./PtInitForm\"\n\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\n// import Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\n// import { TextField } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1\n    },\n    header: {\n        padding: \"2rem 0 4rem 0\",\n        textAlign: \"center\",\n        borderBottom: \"5px solid #FFD400\",\n        marginBottom: \"3rem\"\n    },\n    subheader: {\n        textAlign: \"center\",\n        paddingBottom: \"3rem\"\n    },\n}))\n\n\nfunction NewPatient(props) {\n    const classes = useStyles()\n\n    return (\n        <Container>\n            <Grid container>\n                <Grid item xs={12} className={classes.header}>\n                    <h1 style={{ color: \"#FFD400\" }}>Welcome EMS User</h1>\n                    {/* <h4 style={{ color: \"#B7D5D4\" }}>A tool to help EMS providers reliably send reports to Hospitals without worrying about radio signal or cell service</h4> */}\n                </Grid>\n                <Grid item xs={12} className={classes.subheader}>\n                    <h2 style={{ color: \"white\" }}>What unit is responding to this incident?</h2>\n                </Grid>\n                <Grid item xs={12}>\n                    <PtInitForm />\n                </Grid>\n            </Grid>\n            {/* <Row className=\"jumbotron\">\n                <Col>\n                    <Welcome userType=\"EMS Provider\" />\n                </Col>\n            </Row>\n            <Row style={{ justifyContent: \"center\" }}>\n                <Card>\n                    <Card.Header>\n                        <h1>New patient</h1>\n                    </Card.Header>\n                    <Card.Body>\n                        <PtInitForm />\n                    </Card.Body>\n                    {/* <a\n                        className=\"btn btn-dark\"\n                        href=\"/ems\"\n                    ><h4>EMS HOME</h4></a> \n                </Card>\n            </Row> */}\n        </Container>\n    )\n}\n\nexport default NewPatient","/Users/allen/GitHub/casrep/client/src/components/PreviousPatients/PreviousPatients.js",[],["156","157"],"/Users/allen/GitHub/casrep/client/src/components/NewPatient/NewPtButton.js",[],["158","159"],"/Users/allen/GitHub/casrep/client/src/components/NewPatient/PtInitForm.js",["160","161","162"],"import React, { useState } from \"react\"\nimport API from \"../../utils/API\"\nimport Form from \"react-bootstrap/Form\"\n// import {Form} from \"@material-ui/core\"\nimport { useHistory } from \"react-router-dom\";\n\n\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\n// import Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\n// import { TextField } from \"@material-ui/core\";\n\nimport io from \"socket.io-client\"\nconst socket = io()\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& .MuiTextField-root': {\n            margin: \"0.5rem\",\n            width: '25ch',\n        },\n    },\n    inputContainer: {\n        // display:\"flex\",\n        // justifyItems:\"space-around\"\n        paddingBottom: \"2rem\",\n    },\n    form: {\n        backgroundColor: \"lightgray\",\n        padding: \"1rem\",\n        color: \"black\"\n    },\n    input: {\n        margin: \"0 0.5rem\"\n    },\n    buttonDiv: {\n        justifyItems: \"center\"\n    }\n}));\n\nfunction PtInitForm(props) {\n    const classes = useStyles()\n\n    const [ptInit, setPtInit] = useState({\n        respondingUnit: \"\",\n        ETA: \"\",\n        // criticalWarn: \"\"\n    })\n    const history = useHistory()\n    // const [ptId, setPtId] = useState(\"\")\n\n    function handleInputChange(event) {\n        // console.log(event.target.name)\n        const { name, value } = event.target\n        setPtInit({ ...ptInit, [name]: value })\n    }\n\n    function handleReroute(id) {\n        history.push(\"/patients/\" + id)\n    }\n\n    function handleSubmit(event) {\n        event.preventDefault()\n        // console.log(ptInit)\n\n        // if (navigator.onLine){\n\n        API.createPatient(ptInit).then((data) => {\n            // console.log(data)\n            handleReroute(data.data._id)\n        }).then(socket.emit(\"update\"))\n        // } else {console.log(\"offlineoffline\")}\n\n        // .then(API.findMostRecentPatient()\n        //     .then(setPtId()))\n        // .then(console.log(dbModel)))\n\n    }\n\n    return (\n        <Grid container justify=\"center\">\n            <form className={classes.root, classes.form} onSubmit={handleSubmit}>\n                <div className={classes.inputContainer}>\n                    <TextField\n                        className={classes.input}\n                        required\n                        variant=\"outlined\"\n                        label=\"Unit Responding\"\n                        placeholder=\"MS-21\"\n                        helperText=\"Required\"\n                        onChange={handleInputChange}\n                        type=\"text\"\n                        name=\"respondingUnit\"\n                    />\n                    <TextField\n                        className={classes.input}\n                        variant=\"outlined\"\n                        label=\"ETA\"\n                        helperText=\"Optional (Can update later)\"\n                        type=\"text\"\n                        name=\"ETA\"\n                        onChange={handleInputChange}\n                    />\n                </div>\n                <div className={classes.buttonDiv}>\n                    <Button size=\"large\" variant=\"contained\" color=\"primary\" onClick={handleSubmit}>Submit</Button>\n                </div>\n            </form>\n        </Grid>\n        // <Form onSubmit={handleSubmit}>\n        //     <Form.Group>\n        //         <Form.Label >Unit Responding</Form.Label>\n        //         <Form.Control\n        //             onChange={handleInputChange}\n        //             type=\"text\"\n        //             name=\"respondingUnit\"\n        //         />\n        //     </Form.Group>\n        //     {/* <Form.Group>\n        //         <Form.Label>ETA</Form.Label>\n        //         <Form.Control\n        //                 type=\"text\"\n        //                 name=\"ETA\"\n        //                 onChange={handleInputChange}\n        //             />\n        //     </Form.Group>\n        //     <Form.Group>\n        //         <Form.Label>Critical Warnings</Form.Label>\n        //         <Form.Control\n        //                 type=\"text\"\n        //                 name=\"criticalWarn\"\n        //                 onChange={handleInputChange} />\n        //     </Form.Group> */}\n        //     <Form.Control className=\"btn btn-primary\" type=\"submit\" value=\"Initiate Patient Report\"></Form.Control>\n        //     {/* <button \n        //     className=\"btn btn-warning\"\n        //     >\n        //         <h4>Open New Incident\n        //         </h4>\n        //     </button> */}\n        // </Form>\n    )\n}\n\nexport default PtInitForm","/Users/allen/GitHub/casrep/client/src/components/Welcome/Welcome.js",[],"/Users/allen/GitHub/casrep/client/src/pages/CurrentPatient.js",["163","164","165","166","167","168","169","170","171","172","173","174","175"],"import React, { useState, useEffect } from \"react\"\n// import { Component } from \"react\"\nimport {  Row, Col } from \"react-bootstrap\"\n// import Card from \"react-bootstrap/Card\"\n// import Moment from 'react-moment';\n// import 'moment-timezone';\n\n// import React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport EtaUpdateButton from \"../components/EtaUpdate/EtaUpdateButton\"\nimport EtaUpdate from \"../components/EtaUpdate/EtaUpdate\"\nimport PatientCard from \"../components/PatientCard/PatientCard\"\nimport VitalsForm from \"../components/Vitals/VitalsForm\"\nimport NewVitals from \"../components/Vitals/NewVitals\"\nimport CriticalWarnings from \"../components/CriticalWarning/CriticalWarnings\"\nimport CriticalWarnSelect from \"../components/CriticalWarning/CritWarnSelect\"\nimport UpdateInformation from \"../components/PatientInformation/UpdateInformation\"\nimport PatientInformationForm from \"../components/PatientInformation/PatientInformationForm\"\nimport EMSToolbar from \"../components/EMSToolbar/EMSToolbar\"\n\nimport { useParams } from \"react-router-dom\"\nimport API from \"../utils/API\"\n\n\nimport io from \"socket.io-client\"\nconst socket = io()\n\nconst dayjs = require(\"dayjs\")\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1\n    },\n    header: {\n        padding: \"2rem 0 4rem 0\",\n        textAlign: \"center\",\n        borderBottom: \"5px solid #FFD400\",\n        marginBottom: \"3rem\"\n    },\n    subheader: {\n        textAlign: \"center\",\n        paddingBottom: \"3rem\"\n    },\n    toolbar:{\n        marginBottom: \"3rem\"\n    }\n}))\n\nfunction CurrentPatient() {\n    const classes = useStyles()\n    // const [entries, setEntries] = useState(1)\n\n    const [ptInfo, setPtInfo] = useState({})\n\n    // const blankVitals = {\n    //     time: \"\",\n    //     HR: \"Not Reported\",\n    //     RR: \"Not Reported\",\n    //     BPs: \"Not Reported\",\n    //     BPd: \"Not Reported\",\n    //     oxygen: \"Not Reported\",\n    // }\n    // const [vitals, setVitals] = useState(blankVitals)\n\n\n    // const criticalsAllFalse = {\n    //     pending: false,\n    //     CPR: false,\n    //     stroke: false,\n    //     trauma1: false,\n    //     trauma2: false,\n    //     intubated: false,\n    //     fallWithThinners: false\n    // }\n    // const [criticalWarnings, setCriticalWarning] = useState(criticalsAllFalse)\n\n    const [eta, setEta] = useState({\n        pending: false,\n        time: \"\"\n    })\n\n    // const [patientInformation, setPatientInformation] = useState({\n    //     pending: false,\n    //     age: \"Not Reported\",\n    //     sex: \"Not Reported\",\n    //     chiefComplaint: \"Not Reported\",\n    //     moiHpi: \"Not Reported\",\n    //     oxygenTx: \"Not Reported\",\n    //     from: \"Not Reported\"\n    // })\n\n    const { id } = useParams()\n    // let idOnly = ({ id }.id).slice(3)\n\n    useEffect(() => {\n\n        // console.log(id)\n        loadById(id)\n        // console.log(ptInfo)\n    }, [])\n\n    function loadById(id) {\n        // console.log(id)\n        API.findById(id)\n            .then((ptData) => {\n                setPtInfo(ptData)\n            })\n    }\n\n    // function handleVitalsInput(event) {\n    //     const { name, value } = event.target;\n    //     setVitals({ ...vitals, [name]: value })\n    // };\n\n    // function initVitals() {\n    //     // console.log(ptInfo)\n    //     setVitals({ ...vitals, time: dayjs().format(\"HH:mm:ss\") })\n    // }\n\n    function handleVitalsSubmit(event, data) {\n        event.preventDefault();\n        console.log(data)\n        if (data.HR !== \"Not Reported\") {\n            API.updateVitals(id, data)\n                .then(socket.emit(\"update\"))\n                // .then(setVitals(blankVitals))\n                .then(loadById(id))\n        }\n        // .exec(loadById(id))\n        // console.log(vitals)\n        // console.log(\"here\")\n    }\n\n    // function initCriticals() {\n    //     setCriticalWarning({ ...criticalWarnings, pending: true })\n    // }\n\n    // function handleCriticalsInput(event) {\n    //     // console.log(event.target.checked)\n    //     const { name, checked } = event.target\n    //     setCriticalWarning({ ...criticalWarnings, [name]: checked })\n    // }\n\n    function handleCriticalsSubmit(event, data) {\n        event.preventDefault();\n        // console.log(data)\n        // setCriticalWarning({ ...criticalWarnings, pending: false })\n        // // console.log(criticalWarnings)\n        // // const warningsString = JSON.stringify(criticalWarnings)\n        // // console.log(warningsString)\n        API.updateCriticalWarnings(id, data)\n            // .then(setCriticalWarning(data))\n            // .then(setCriticalWarning({...criticalWarnings}))\n            .then(socket.emit(\"update\"))\n            // .then(event.target.parentElement.parentElement.reset())\n            .then(loadById(id))\n    }\n\n    // function initEtaUpdate() {\n    //     setEta({ ...eta, pending: true })\n    // }\n\n    function handleEtaInput(event) {\n        const { name, value } = event.target\n        setEta({ ...eta, [name]: value })\n        // console.log(eta.time)\n    }\n\n    function handleEtaSubmit(event) {\n        event.preventDefault()\n        // console.log(event.target.parentElement.parentElement)\n        API.updateETA(id, { time: eta.time })\n            .then(socket.emit(\"update\"))\n            .then(event.target.parentElement.parentElement.reset())\n            // .then(setEta({ pending: false }))\n            .then(loadById(id))\n    }\n\n    // function initPatientInformation() {\n    //     setPatientInformation({ ...patientInformation, pending: true })\n    // }\n\n    // function handlePtInformationChange(event) {\n    //     const { name, value } = event.target\n    //     setPatientInformation({ ...patientInformation, [name]: value })\n    // }\n\n    function handlePtInformationSubmit(event, data) {\n        event.preventDefault()\n        API.updatePtInformation(id, data)\n            .then(socket.emit(\"update\"))\n            // .then(setPatientInformation({ pending: false }))\n            .then(loadById(id))\n    }\n\n    return (\n        <Container style={{ paddingTop: \"2rem\" }}>\n            <Grid container>\n                <Grid item xs={12} className={classes.header}>\n                    <Typography variant=\"h2\" style={{ color: \"#FFD400\" }}>Welcome EMS User</Typography>\n                    <Typography variant=\"h4\" style={{ color: \"#B7D5D4\" }}>Enter updates below to keep the hospital informed about your patient</Typography>\n                </Grid>\n            </Grid>\n            <Grid container\n            className={classes.toolbar}>\n                <EMSToolbar \n                    etaInputChange={handleEtaInput}\n                    etaSubmit={handleEtaSubmit}\n                    criticalSubmit={handleCriticalsSubmit}\n                    vitalSubmit={handleVitalsSubmit}\n                    ptInfoSubmit ={handlePtInformationSubmit}\n                />\n            </Grid>\n            <Grid container>\n                <Grid item xs = {12}>\n                {ptInfo.data ? (\n                        <PatientCard patient={ptInfo.data} />\n\n                    ) : (\n                    <Typography variant=\"h4\">\n                        Loading patient information, please wait...\n                    </Typography>\n                    )\n                    }\n                </Grid>\n            </Grid>\n\n            {/* <Row>\n                <Col>\n                    <Card >\n                        <Card.Header>ETA:\n                                 {/* <span>{ptInfo.data.ETA ? (ptInfo.data.ETA):(\"pending\")}</span> \n                        </Card.Header>\n                        <Card.Body>\n                            {eta.pending ? (\n                                <EtaUpdate\n                                    onChange={handleEtaInput}\n                                    onSubmit={handleEtaSubmit}\n                                ></EtaUpdate>\n                            ) : (\n                                    <EtaUpdateButton onClick={initEtaUpdate} />\n                                )}\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col>\n                    {criticalWarnings.pending ? (\n                        <CriticalWarnSelect\n                            // style={{ width: \"80%\" }}\n                            onChange={handleCriticalsInput}\n                            onSubmit={handleCriticalsSubmit}\n                        />\n                    ) : (\n                            <CriticalWarnings\n                                // style={{ width: \"80%\" }}\n                                onClick={initCriticals}\n                            // loadPtInfo={loadById}\n                            // warnings={ptInfo}\n                            />\n                        )}\n                </Col>\n                <Col>\n                    <Card style={{ marginBottom: \"1rem\" }}>\n                        <Card.Header>New Vitals</Card.Header>\n                        <Card.Body>\n                            {vitals.time ? (\n                                <VitalsForm onChange={handleVitalsInput} onSubmit={handleVitalsSubmit} />\n                            ) : (\n                                    <NewVitals onClick={initVitals} />\n                                )}\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col>\n                    <Card>\n                        <Card.Header>Patient Information</Card.Header>\n                        <Card.Body>\n                            {patientInformation.pending ? (\n                                <PatientInformationForm onChange={handlePtInformationChange} onSubmit={handlePtInformationSubmit} />\n                            ) : (\n                                    <UpdateInformation onClick={initPatientInformation} />\n                                )}\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row> */}\n            {/* <Row className=\"justify-content-center\">\n                <Col>\n                    {ptInfo.data ? (\n                        <PatientCard patient={ptInfo.data} />\n\n                    ) : (<h3>Error</h3>)\n                    }\n                </Col>\n            </Row> */}\n        </Container>\n    )\n}\n\nexport default CurrentPatient","/Users/allen/GitHub/casrep/client/src/components/Vitals/NewVitals.js",[],"/Users/allen/GitHub/casrep/client/src/components/Vitals/VitalsForm.js",["176"],"import React, { useState } from \"react\"\nimport { Form, Button } from \"react-bootstrap\"\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid'\n\nconst dayjs = require(\"dayjs\")\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& > *': {\n            margin: theme.spacing(1),\n            width: '25ch',\n        },\n    },\n    formgroup: {\n        display: \"inline\"\n    },\n    input: {\n        marginBottom: \"0.3rem\",\n        marginRight: \"0.3rem\"\n    }\n}));\n\nconst blankVitals = {\n    time: \"\",\n    LOR: \"Not Reported\",\n    HR: \"Not Reported\",\n    RR: \"Not Reported\",\n    BPs: \"Not Reported\",\n    BPd: \"Not Reported\",\n    oxygen: \"Not Reported\",\n}\n\n// setVitals({ ...vitals, time: dayjs().format(\"HH:mm:ss\") })\n\n\n\nfunction VitalsForm(props) {\n    const classes = useStyles();\n\n    const [vitals, setVitals] = useState(blankVitals)\n\n    function handleVitalsInput(event) {\n        // console.log(vitals.LOR)\n        if (vitals.time === \"\") {\n            setVitals({ ...vitals, time: dayjs().format(\"HH:mm:ss\") })\n        } else {\n            const { name, value } = event.target;\n            setVitals({ ...vitals, [name]: value })\n        }\n    };\n\n    // function updateTime() {\n    // }\n\n    function handleSubmit(event, data) {\n        // console.log(data)\n        props.onSubmit(event, data)\n    }\n\n    return (\n        <form className={classes.root} noValidate autoComplete=\"off\">\n            <Grid container className={classes.formgroup}>\n                <Grid item xs={12}>\n                    <TextField\n                        className={classes.input}\n                        id=\"outlined-basic\"\n                        label=\"LOR\"\n                        variant=\"outlined\"\n                        name=\"LOR\"\n                        onChange={handleVitalsInput} />\n                    <TextField\n                        className={classes.input}\n                        id=\"outlined-basic\"\n                        label=\"Oxygen Sat\"\n                        variant=\"outlined\"\n                        name=\"oxygen\"\n                        onChange={handleVitalsInput} />\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                        className={classes.input}\n                        id=\"outlined-basic\"\n                        label=\"Heart Rate\"\n                        variant=\"outlined\"\n                        name=\"HR\"\n                        onChange={handleVitalsInput} />\n                    <TextField\n                        className={classes.input}\n                        id=\"outlined-basic\"\n                        label=\"Repiratory Rate\"\n                        variant=\"outlined\"\n                        name=\"RR\"\n                        onChange={handleVitalsInput} />\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                        className={classes.input}\n                        id=\"outlined-basic\"\n                        label=\"BP systolic\"\n                        variant=\"outlined\"\n                        name=\"BPs\"\n                        onChange={handleVitalsInput} />\n                    <TextField\n                        className={classes.input}\n                        id=\"outlined-basic\"\n                        label=\"BP diastolic\"\n                        variant=\"outlined\"\n                        name=\"BPd\"\n                        onChange={handleVitalsInput} />\n\n                </Grid>\n                <Button size=\"large\" variant=\"contained\" color=\"primary\" onClick={(event) => handleSubmit(event, vitals)}>Submit</Button>\n            </Grid>\n        </form >\n    );\n    // return (\n    //     <Form onSubmit={props.onSubmit}>\n    //         <Form.Group>\n    //             <Form.Label>Heart Rate</Form.Label>\n    //             <Form.Control\n    //                 name=\"HR\"\n    //                 placeholder=\"Heart Rate\"\n    //                 type=\"number\"\n    //                 onChange={props.onChange}></Form.Control>\n    //         </Form.Group>\n    //         <Form.Group>\n    //             <Form.Label>Respiratory Rate</Form.Label>\n    //             <Form.Control\n    //                 name=\"RR\"\n    //                 placeholder=\"Respiratory Rate\"\n    //                 type=\"number\"\n    //                 onChange={props.onChange}></Form.Control>\n    //         </Form.Group>\n    //         <Form.Group>\n    //             <Form.Label>BP Systolic</Form.Label>\n    //             <Form.Control\n    //                 name=\"BPs\"\n    //                 placeholder=\"Systolic\"\n    //                 type=\"number\"\n    //                 onChange={props.onChange}></Form.Control>\n    //         </Form.Group>\n    //         <Form.Group>\n    //             <Form.Label>BP Diastolic</Form.Label>\n    //             <Form.Control\n    //                 name=\"BPd\"\n    //                 placeholder=\"Diastolic\"\n    //                 type=\"number\"\n    //                 onChange={props.onChange}></Form.Control>\n    //         </Form.Group>\n    //         <Form.Group>\n    //             <Form.Label>Oxygen Saturation</Form.Label>\n    //             <Form.Control\n    //                 name=\"oxygen\"\n    //                 placeholder=\"O2 sat\"\n    //                 type=\"number\"\n    //                 onChange={props.onChange}></Form.Control>\n    //         </Form.Group>\n    //         <Button \n    //         onClick={props.onSubmit}\n    //         variant=\"primary\" \n    //         type=\"submit\">\n    //             Submit\n    //         </Button>\n    //     </Form>\n    // )\n}\n\nexport default VitalsForm","/Users/allen/GitHub/casrep/client/src/components/PatientCard/PatientCard.js",["177","178"],"/Users/allen/GitHub/casrep/client/src/components/Vitals/VitalsTable.js",[],"/Users/allen/GitHub/casrep/client/src/components/CriticalWarning/CriticalWarnings.js",[],"/Users/allen/GitHub/casrep/client/src/components/CriticalWarning/CritWarnSelect.js",[],"/Users/allen/GitHub/casrep/client/src/components/Navbar/Navbar.js",["179"],"// import React from \"react\"\n// import { Navbar, Nav, NavLink } from \"react-bootstrap\"\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Link from '@material-ui/core/Link'\nimport IconButton from '@material-ui/core/IconButton';\n// import { Link } from 'react-router-dom';\n// import MenuIcon from '@material-ui/icons/Menu';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n    },\n}));\n\nfunction Navigation(props) {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    {/* <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n                        <MenuIcon />\n                    </IconButton> */}\n                    <Typography variant=\"h6\" className={classes.title}>\n                        <Link href = \"#\" color=\"inherit\">INREP</Link>\n                    </Typography>\n                    <Button disabled color=\"inherit\">Account</Button>\n                    <Button disabled color=\"inherit\">Support</Button>\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n    // return (\n    //     // <Navbar bg=\"dark\" variant=\"dark\">\n    //     //     <Navbar.Brand>INREP</Navbar.Brand>\n    //     //     <Navbar.Collapse className=\"mr-auto justify-content-end\">\n    //     //         <NavLink disabled>Account</NavLink>\n    //     //         <NavLink disabled>Support</NavLink>\n    //     //         {/* <Navbar.Text disabled>Account</Navbar.Text>\n    //     //         <Navbar.Text disabled>Support</Navbar.Text> */}\n    //     //     </Navbar.Collapse>\n    //     //     {/* <Nav className=\"mr-auto justify-content-end\" >\n    //     //         <NavLink disabled>Account</NavLink>\n    //     //         <NavLink disabled>Support</NavLink>\n    //     //     </Nav> */}\n    //     // </Navbar>\n    // )\n}\n\nexport default Navigation","/Users/allen/GitHub/casrep/client/src/components/EtaUpdate/EtaUpdate.js",[],"/Users/allen/GitHub/casrep/client/src/components/EtaUpdate/EtaUpdateButton.js",[],"/Users/allen/GitHub/casrep/client/src/components/PatientInformation/UpdateInformation.js",[],"/Users/allen/GitHub/casrep/client/src/components/PatientInformation/PatientInformationForm.js",["180"],"import React, { useState } from \"react\"\nimport { Form, Button } from \"react-bootstrap\"\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& > *': {\n            margin: theme.spacing(1),\n            width: '25ch',\n        },\n    },\n    formgroup: {\n        display: \"inline\"\n    },\n    input: {\n        marginBottom: \"0.3rem\",\n        marginRight: \"0.3rem\"\n    }\n}));\n\nfunction PatientInformationForm(props) {\n    const classes = useStyles()\n\n    const [patientInformation, setPatientInformation] = useState({\n        age: \"Not Reported\",\n        sex: \"Not Reported\",\n        chiefComplaint: \"Not Reported\",\n        moiHpi: \"Not Reported\",\n        oxygenTx: \"Not Reported\",\n        from: \"Not Reported\"\n    })\n\n    function handlePtInformationChange(event) {\n        const { name, value } = event.target\n        setPatientInformation({ ...patientInformation, [name]: value })\n    }\n\n    function handleSubmit(event, data) {\n        // console.log(data)\n        props.onSubmit(event, data)\n    }\n\n    return (\n        <form className={classes.root} noValidate autoComplete=\"off\">\n            <Grid container className={classes.formgroup}>\n                <Grid item xs={12}>\n                    <TextField\n                        className={classes.input}\n                        id=\"outlined-basic\"\n                        label=\"Age\"\n                        variant=\"outlined\"\n                        name=\"age\"\n                        onChange={handlePtInformationChange} />\n                    <TextField\n                        className={classes.input}\n                        id=\"outlined-basic\"\n                        label=\"Sex\"\n                        variant=\"outlined\"\n                        name=\"sex\"\n                        onChange={handlePtInformationChange} />\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                        fullWidth\n                        className={classes.input}\n                        id=\"outlined-basic\"\n                        label=\"Chief Complaint\"\n                        variant=\"outlined\"\n                        name=\"chiefComplaint\"\n                        onChange={handlePtInformationChange} />\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                        fullWidth\n                        className={classes.input}\n                        id=\"outlined-basic\"\n                        label=\"MOI/ HPI\"\n                        variant=\"outlined\"\n                        name=\"moiHpi\"\n                        onChange={handlePtInformationChange} />\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                        className={classes.input}\n                        id=\"outlined-basic\"\n                        label=\"O2 Treatment\"\n                        variant=\"outlined\"\n                        name=\"oxygenTx\"\n                        onChange={handlePtInformationChange} />\n                    <TextField\n                        className={classes.input}\n                        id=\"outlined-basic\"\n                        label=\"Coming From\"\n                        variant=\"outlined\"\n                        name=\"from\"\n                        onChange={handlePtInformationChange} />\n                </Grid>\n            </Grid>\n            <Button size=\"large\" variant=\"contained\" color=\"primary\" onClick={(event) => handleSubmit(event, patientInformation)}>Submit</Button>\n        </form >\n    )\n\n    // return (\n    //     <Form onSubmit={props.onSubmit}>\n    //         <Form.Group>\n    //             <Form.Label>Age</Form.Label>\n    //             <Form.Control\n    //                 name=\"age\"\n    //                 placeholder=\"Age\"\n    //                 type=\"number\"\n    //                 onChange={props.onChange}></Form.Control>\n    //         </Form.Group>\n    //         <Form.Group>\n    //             <Form.Label>Sex</Form.Label>\n    //             <Form.Control\n    //                 name=\"sex\"\n    //                 placeholder=\"Sex\"\n    //                 type=\"string\"\n    //                 onChange={props.onChange}></Form.Control>\n    //         </Form.Group>\n    //         <Form.Group>\n    //             <Form.Label>Chief Complaint</Form.Label>\n    //             <Form.Control\n    //                 name=\"chiefComplaint\"\n    //                 placeholder=\"CC\"\n    //                 type=\"string\"\n    //                 onChange={props.onChange}></Form.Control>\n    //         </Form.Group>\n    //         <Form.Group>\n    //             <Form.Label>MOI/HPI</Form.Label>\n    //             <Form.Control\n    //                 name=\"moiHpi\"\n    //                 placeholder=\"MOI/ HPI\"\n    //                 type=\"string\"\n    //                 onChange={props.onChange}></Form.Control>\n    //         </Form.Group>\n    //         <Form.Group>\n    //             <Form.Label>Oxygen Treatment</Form.Label>\n    //             <Form.Control\n    //                 name=\"oxygenTx\"\n    //                 placeholder=\"O2 Treatment\"\n    //                 type=\"string\"\n    //                 onChange={props.onChange}></Form.Control>\n    //         </Form.Group>\n    //         <Form.Group>\n    //             <Form.Label>Pt coming From:</Form.Label>\n    //             <Form.Control\n    //                 name=\"from\"\n    //                 placeholder=\"Pickup Location\"\n    //                 type=\"string\"\n    //                 onChange={props.onChange}></Form.Control>\n    //         </Form.Group>\n    //         <Button\n    //             onClick={props.onSubmit}\n    //             variant=\"primary\"\n    //             type=\"submit\">\n    //             Submit\n    //         </Button>\n    //     </Form>\n    // )\n}\n\nexport default PatientInformationForm","/Users/allen/GitHub/casrep/client/src/components/PatientInformation/PatientInformationTable.js",["181"],"import React, { useEffect } from \"react\"\n// import { useEffect } from \"react\"\nimport { Table } from \"react-bootstrap\"\n\nfunction PatientInformationTable(props) {\n    let infoArray = []\n\n    // let patientInfoObject\n    // if(props.patientObj !== \"undefined\"){\n    //     patientInfoObject = JSON.parse(props.patientObj)\n    // }\n    function infoObjToArr(obj) {\n        const parsed = JSON.parse(obj)\n        for (const key in parsed) {\n            if (key !== \"pending\") {\n                infoArray.push(parsed[key])\n            }\n        }\n        console.log(infoArray)\n    }\n    // useEffect(()=> {\n\n    if (props.patientObj !== undefined) {\n        infoObjToArr(props.patientObj)\n    }\n\n    // })\n\n    // console.log(patientInfoObject)\n\n    return (\n        <Table striped bordered >\n            <thead>\n                <tr>\n                    <th>Age</th>\n                    <th>Sex</th>\n                    <th>Chief Complaint</th>\n                    <th>MOI/HPI</th>\n                    <th>O2 Treatment</th>\n                    <th>From</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr>\n                    {infoArray.map(info =>\n                        <td key={info}>{info}</td>\n                    )}\n                </tr>\n            </tbody>\n        </Table>\n    )\n}\n\nexport default PatientInformationTable","/Users/allen/GitHub/casrep/client/src/components/HomeButtonBase/HomeButtonBase.js",[],"/Users/allen/GitHub/casrep/client/src/components/EMSToolbar/EMSToolbar.js",["182","183","184","185","186"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\nimport FormGroup from '@material-ui/core/FormGroup'\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n// import CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\n// import CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport CriticalWarnSelect from '../CriticalWarning/CritWarnSelect';\nimport VitalsForm from \"../Vitals/VitalsForm\"\nimport PatientInformationForm from \"../PatientInformation/PatientInformationForm\"\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`vertical-tabpanel-${index}`}\n            aria-labelledby={`vertical-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box p={3}>\n                    <div>{children}</div>\n                </Box>\n            )}\n        </div>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `vertical-tab-${index}`,\n        'aria-controls': `vertical-tabpanel-${index}`,\n    };\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.paper,\n        display: 'flex',\n        height: 300,\n    },\n    tabs: {\n        borderRight: `1px solid ${theme.palette.divider}`,\n    },\n    tabpanel: {\n        display: \"block\",\n        overflow: \"auto\"\n    },\n    input: {\n        margin: \"0 0.5rem\"\n    },\n    inputContainer: {\n        marginBottom: \"1rem\"\n    }\n}));\n\nfunction EMSToolbar(props) {\n    const classes = useStyles();\n    const [value, setValue] = React.useState(0);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    return (\n        <div className={classes.root}>\n            <Tabs\n                orientation=\"vertical\"\n                variant=\"scrollable\"\n                value={value}\n                onChange={handleChange}\n                // aria-label=\"Vertical tabs example\"\n                className={classes.tabs}\n            >\n                <Tab label=\"Update ETA\" {...a11yProps(0)} />\n                <Tab label=\"Critical Warnings\" {...a11yProps(1)} />\n                <Tab label=\"Update Vitals\" {...a11yProps(2)} />\n                <Tab label=\"Patient Information\" {...a11yProps(3)} />\n                <Tab label=\"Interventions\" {...a11yProps(4)} />\n                <Tab label=\"History\" {...a11yProps(5)} />\n                <Tab label=\"Allerigies\" {...a11yProps(6)} />\n            </Tabs>\n            <TabPanel value={value} index={0} >\n                <form className={classes.root, classes.form} onSubmit={props.etaSubmit}>\n                    <div className={classes.inputContainer}>\n                        <TextField\n                            className={classes.input}\n                            required\n                            variant=\"outlined\"\n                            label=\"ETA\"\n                            // placeholder=\"MS-21\"\n                            // helperText=\"Required\"\n                            onChange={props.etaInputChange}\n                            type=\"text\"\n                            name=\"time\"\n                        />\n                    </div>\n                    <Button size=\"large\" variant=\"contained\" color=\"primary\" onClick={props.etaSubmit}>Submit</Button>\n                </form>\n            </TabPanel>\n            <TabPanel value={value} index={1} className={classes.tabpanel}>\n                {/* <FormGroup row> */}\n                <CriticalWarnSelect onSubmit={props.criticalSubmit} />\n                {/* </FormGroup> */}\n            </TabPanel>\n            <TabPanel value={value} index={2} className={classes.tabpanel}>\n                <VitalsForm onSubmit={props.vitalSubmit} />\n            </TabPanel>\n            <TabPanel value={value} index={3} className={classes.tabpanel}>\n                <PatientInformationForm onSubmit={props.ptInfoSubmit} />\n            </TabPanel>\n            <TabPanel value={value} index={4}>\n                This feature is coming soon...\n      </TabPanel>\n            <TabPanel value={value} index={5}>\n                This feature is coming soon...\n      </TabPanel>\n            <TabPanel value={value} index={6}>\n                This feature is coming soon...\n      </TabPanel>\n        </div>\n    );\n}\n\nexport default EMSToolbar",{"ruleId":"187","replacedBy":"188"},{"ruleId":"189","replacedBy":"190"},{"ruleId":"187","replacedBy":"191"},{"ruleId":"189","replacedBy":"192"},{"ruleId":"193","severity":1,"message":"194","line":3,"column":1,"nodeType":"195","endLine":52,"endColumn":2},{"ruleId":"196","severity":1,"message":"197","line":6,"column":8,"nodeType":"198","messageId":"199","endLine":6,"endColumn":19},{"ruleId":"200","severity":1,"message":"201","line":91,"column":1,"nodeType":"202","messageId":"203","endLine":116,"endColumn":24},{"ruleId":"196","severity":1,"message":"204","line":1,"column":17,"nodeType":"198","messageId":"199","endLine":1,"endColumn":26},{"ruleId":"196","severity":1,"message":"205","line":2,"column":26,"nodeType":"198","messageId":"199","endLine":2,"endColumn":29},{"ruleId":"196","severity":1,"message":"206","line":3,"column":8,"nodeType":"198","messageId":"199","endLine":3,"endColumn":15},{"ruleId":"196","severity":1,"message":"207","line":2,"column":10,"nodeType":"198","messageId":"199","endLine":2,"endColumn":13},{"ruleId":"196","severity":1,"message":"205","line":2,"column":15,"nodeType":"198","messageId":"199","endLine":2,"endColumn":18},{"ruleId":"196","severity":1,"message":"208","line":6,"column":8,"nodeType":"198","messageId":"199","endLine":6,"endColumn":13},{"ruleId":"196","severity":1,"message":"209","line":13,"column":8,"nodeType":"198","messageId":"199","endLine":13,"endColumn":17},{"ruleId":"196","severity":1,"message":"206","line":16,"column":8,"nodeType":"198","messageId":"199","endLine":16,"endColumn":15},{"ruleId":"196","severity":1,"message":"206","line":5,"column":8,"nodeType":"198","messageId":"199","endLine":5,"endColumn":15},{"ruleId":"196","severity":1,"message":"210","line":12,"column":8,"nodeType":"198","messageId":"199","endLine":12,"endColumn":14},{"ruleId":"196","severity":1,"message":"211","line":13,"column":8,"nodeType":"198","messageId":"199","endLine":13,"endColumn":17},{"ruleId":"187","replacedBy":"212"},{"ruleId":"189","replacedBy":"213"},{"ruleId":"187","replacedBy":"214"},{"ruleId":"189","replacedBy":"215"},{"ruleId":"196","severity":1,"message":"216","line":3,"column":8,"nodeType":"198","messageId":"199","endLine":3,"endColumn":12},{"ruleId":"196","severity":1,"message":"217","line":8,"column":8,"nodeType":"198","messageId":"199","endLine":8,"endColumn":17},{"ruleId":"218","severity":1,"message":"219","line":85,"column":42,"nodeType":"220","messageId":"221","endLine":85,"endColumn":43},{"ruleId":"196","severity":1,"message":"207","line":3,"column":11,"nodeType":"198","messageId":"199","endLine":3,"endColumn":14},{"ruleId":"196","severity":1,"message":"205","line":3,"column":16,"nodeType":"198","messageId":"199","endLine":3,"endColumn":19},{"ruleId":"196","severity":1,"message":"197","line":9,"column":8,"nodeType":"198","messageId":"199","endLine":9,"endColumn":19},{"ruleId":"196","severity":1,"message":"222","line":15,"column":8,"nodeType":"198","messageId":"199","endLine":15,"endColumn":23},{"ruleId":"196","severity":1,"message":"223","line":16,"column":8,"nodeType":"198","messageId":"199","endLine":16,"endColumn":17},{"ruleId":"196","severity":1,"message":"224","line":18,"column":8,"nodeType":"198","messageId":"199","endLine":18,"endColumn":18},{"ruleId":"196","severity":1,"message":"225","line":19,"column":8,"nodeType":"198","messageId":"199","endLine":19,"endColumn":17},{"ruleId":"196","severity":1,"message":"226","line":20,"column":8,"nodeType":"198","messageId":"199","endLine":20,"endColumn":24},{"ruleId":"196","severity":1,"message":"227","line":21,"column":8,"nodeType":"198","messageId":"199","endLine":21,"endColumn":26},{"ruleId":"196","severity":1,"message":"228","line":22,"column":8,"nodeType":"198","messageId":"199","endLine":22,"endColumn":25},{"ruleId":"196","severity":1,"message":"229","line":23,"column":8,"nodeType":"198","messageId":"199","endLine":23,"endColumn":30},{"ruleId":"196","severity":1,"message":"230","line":33,"column":7,"nodeType":"198","messageId":"199","endLine":33,"endColumn":12},{"ruleId":"231","severity":1,"message":"232","line":105,"column":8,"nodeType":"233","endLine":105,"endColumn":10,"suggestions":"234"},{"ruleId":"196","severity":1,"message":"216","line":2,"column":10,"nodeType":"198","messageId":"199","endLine":2,"endColumn":14},{"ruleId":"196","severity":1,"message":"235","line":7,"column":8,"nodeType":"198","messageId":"199","endLine":7,"endColumn":31},{"ruleId":"196","severity":1,"message":"208","line":12,"column":8,"nodeType":"198","messageId":"199","endLine":12,"endColumn":13},{"ruleId":"196","severity":1,"message":"236","line":11,"column":8,"nodeType":"198","messageId":"199","endLine":11,"endColumn":18},{"ruleId":"196","severity":1,"message":"216","line":2,"column":10,"nodeType":"198","messageId":"199","endLine":2,"endColumn":14},{"ruleId":"196","severity":1,"message":"237","line":1,"column":17,"nodeType":"198","messageId":"199","endLine":1,"endColumn":26},{"ruleId":"196","severity":1,"message":"238","line":6,"column":8,"nodeType":"198","messageId":"199","endLine":6,"endColumn":18},{"ruleId":"196","severity":1,"message":"239","line":10,"column":8,"nodeType":"198","messageId":"199","endLine":10,"endColumn":17},{"ruleId":"196","severity":1,"message":"240","line":11,"column":8,"nodeType":"198","messageId":"199","endLine":11,"endColumn":24},{"ruleId":"196","severity":1,"message":"241","line":12,"column":8,"nodeType":"198","messageId":"199","endLine":12,"endColumn":16},{"ruleId":"218","severity":1,"message":"219","line":101,"column":46,"nodeType":"220","messageId":"221","endLine":101,"endColumn":47},"no-native-reassign",["242"],"no-negated-in-lhs",["243"],["242"],["243"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'CssBaseline' is defined but never used.","Identifier","unusedVar","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'Component' is defined but never used.","'Col' is defined but never used.","'Welcome' is defined but never used.","'Row' is defined but never used.","'Paper' is defined but never used.","'EmsLaunch' is defined but never used.","'Button' is defined but never used.","'TextField' is defined but never used.",["242"],["243"],["242"],["243"],"'Form' is defined but never used.","'Container' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'EtaUpdateButton' is defined but never used.","'EtaUpdate' is defined but never used.","'VitalsForm' is defined but never used.","'NewVitals' is defined but never used.","'CriticalWarnings' is defined but never used.","'CriticalWarnSelect' is defined but never used.","'UpdateInformation' is defined but never used.","'PatientInformationForm' is defined but never used.","'dayjs' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["244"],"'PatientInformationTable' is defined but never used.","'IconButton' is defined but never used.","'useEffect' is defined but never used.","'Typography' is defined but never used.","'FormGroup' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"245","fix":"246"},"Update the dependencies array to be: [id]",{"range":"247","text":"248"},[3118,3120],"[id]"]