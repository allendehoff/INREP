[{"/Users/allen/GitHub/casrep/client/src/index.js":"1","/Users/allen/GitHub/casrep/client/src/App.js":"2","/Users/allen/GitHub/casrep/client/src/reportWebVitals.js":"3","/Users/allen/GitHub/casrep/client/src/components/Login/Login.js":"4","/Users/allen/GitHub/casrep/client/src/pages/Signup.js":"5","/Users/allen/GitHub/casrep/client/src/utils/API.js":"6","/Users/allen/GitHub/casrep/client/src/pages/Home.js":"7","/Users/allen/GitHub/casrep/client/src/pages/Hospital.js":"8","/Users/allen/GitHub/casrep/client/src/pages/EMS.js":"9","/Users/allen/GitHub/casrep/client/src/components/NewPatient/NewPatient.js":"10","/Users/allen/GitHub/casrep/client/src/components/PreviousPatients/PreviousPatients.js":"11","/Users/allen/GitHub/casrep/client/src/components/NewPatient/PtInitForm.js":"12","/Users/allen/GitHub/casrep/client/src/pages/CurrentPatient.js":"13","/Users/allen/GitHub/casrep/client/src/components/Vitals/VitalsForm.js":"14","/Users/allen/GitHub/casrep/client/src/components/PatientCard/PatientCard.js":"15","/Users/allen/GitHub/casrep/client/src/components/Vitals/VitalsTable.js":"16","/Users/allen/GitHub/casrep/client/src/components/CriticalWarning/CritWarnSelect.js":"17","/Users/allen/GitHub/casrep/client/src/components/Navbar/Navbar.js":"18","/Users/allen/GitHub/casrep/client/src/components/EtaUpdate/EtaUpdate.js":"19","/Users/allen/GitHub/casrep/client/src/components/PatientInformation/PatientInformationForm.js":"20","/Users/allen/GitHub/casrep/client/src/components/PatientInformation/PatientInformationTable.js":"21","/Users/allen/GitHub/casrep/client/src/components/HomeButtonBase/HomeButtonBase.js":"22","/Users/allen/GitHub/casrep/client/src/components/EMSToolbar/EMSToolbar.js":"23","/Users/allen/GitHub/casrep/client/src/components/EMSPatientCard/EMSPatientCard.js":"24"},{"size":697,"mtime":1608071759065,"results":"25","hashOfConfig":"26"},{"size":1868,"mtime":1608593241859,"results":"27","hashOfConfig":"26"},{"size":362,"mtime":1606871342580,"results":"28","hashOfConfig":"26"},{"size":2226,"mtime":1606954155256,"results":"29","hashOfConfig":"26"},{"size":3732,"mtime":1606932760261,"results":"30","hashOfConfig":"26"},{"size":1468,"mtime":1608236185199,"results":"31","hashOfConfig":"26"},{"size":4977,"mtime":1608594066528,"results":"32","hashOfConfig":"26"},{"size":4843,"mtime":1608594137389,"results":"33","hashOfConfig":"26"},{"size":3930,"mtime":1608595210997,"results":"34","hashOfConfig":"26"},{"size":2964,"mtime":1608594584817,"results":"35","hashOfConfig":"26"},{"size":656,"mtime":1607052572852,"results":"36","hashOfConfig":"26"},{"size":4820,"mtime":1608595913539,"results":"37","hashOfConfig":"26"},{"size":14299,"mtime":1608594939778,"results":"38","hashOfConfig":"26"},{"size":8230,"mtime":1608495435158,"results":"39","hashOfConfig":"26"},{"size":16427,"mtime":1608596425866,"results":"40","hashOfConfig":"26"},{"size":2855,"mtime":1608428579733,"results":"41","hashOfConfig":"26"},{"size":9853,"mtime":1608568197124,"results":"42","hashOfConfig":"26"},{"size":2262,"mtime":1608407012938,"results":"43","hashOfConfig":"26"},{"size":3803,"mtime":1608495554663,"results":"44","hashOfConfig":"26"},{"size":7382,"mtime":1608495711050,"results":"45","hashOfConfig":"26"},{"size":2841,"mtime":1608407298797,"results":"46","hashOfConfig":"26"},{"size":3889,"mtime":1608321932831,"results":"47","hashOfConfig":"26"},{"size":5515,"mtime":1608595662498,"results":"48","hashOfConfig":"26"},{"size":11187,"mtime":1608596297276,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"12pzw6t",{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/allen/GitHub/casrep/client/src/index.js",[],["104","105"],"/Users/allen/GitHub/casrep/client/src/App.js",["106"],"/Users/allen/GitHub/casrep/client/src/reportWebVitals.js",[],"/Users/allen/GitHub/casrep/client/src/components/Login/Login.js",[],["107","108"],"/Users/allen/GitHub/casrep/client/src/pages/Signup.js",[],"/Users/allen/GitHub/casrep/client/src/utils/API.js",["109"],"import axios from \"axios\"\n\nexport default {\n    // createUser: function(userData) {\n    //     return axios.post(\"/api/user/signup\", userData)\n    // },\n\n    // findUser: function(loginCredentials) {\n    //     // console.log(loginCredentials)\n    //     return axios.get(\"/api/user/login\", loginCredentials)\n    // },\n\n    createPatient: function (PtInitInfo) {\n        // if (navigator.onLine) {\n            return axios.post(\"/api/patients/new\", PtInitInfo)\n        // } else {console.log(\"offline here\")}\n    },\n\n    findById: function(id) {\n        // console.log(id)\n        // let idString = id.toString()\n        return axios.get(\"/api/patients/\" + id)\n        // return axios.get(\"/api/patients/id\", {params: {id}})\n    },\n\n    updateETA: function (id, time) {\n        return axios.put(\"/api/patients/eta/\" + id, time)\n    },\n\n    updateVitals: function(id, vitals) {\n        // console.log(\"here\")\n        return axios.put(\"/api/patients/vitals/\"+ id, vitals)\n    },\n\n    updateCriticalWarnings: function(id, criticals) {\n        // console.log(\"here\")\n        return axios.put(\"/api/patients/criticals/\"+ id, criticals)\n    },\n    \n    updatePtInformation: function (id, information) {\n        return axios.put(\"/api/patients/information/\" +id, information)\n    },\n\n    findSix: function () {\n        return axios.get(\"/api/patients\")\n    }\n\n    // findMostRecentPatient: function () {\n    //     return axios.get(\"/api/patients/recent\")\n        \n    // }\n}","/Users/allen/GitHub/casrep/client/src/pages/Home.js",["110"],"/Users/allen/GitHub/casrep/client/src/pages/Hospital.js",[],"/Users/allen/GitHub/casrep/client/src/pages/EMS.js",[],"/Users/allen/GitHub/casrep/client/src/components/NewPatient/NewPatient.js",[],"/Users/allen/GitHub/casrep/client/src/components/PreviousPatients/PreviousPatients.js",[],["111","112"],"/Users/allen/GitHub/casrep/client/src/components/NewPatient/PtInitForm.js",["113"],"/Users/allen/GitHub/casrep/client/src/pages/CurrentPatient.js",["114","115","116","117"],"/Users/allen/GitHub/casrep/client/src/components/Vitals/VitalsForm.js",["118"],"import React, { useState } from \"react\"\n// import { Form, Button } from \"react-bootstrap\"\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid'\nimport Button from '@material-ui/core/Button'\nimport { Typography } from \"@material-ui/core\";\n\nimport { useParams } from \"react-router-dom\"\nimport API from \"../../utils/API\"\n\nimport io from \"socket.io-client\"\nconst socket = io()\n\nconst dayjs = require(\"dayjs\")\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& > *': {\n            margin: theme.spacing(1),\n            width: '25ch',\n        },\n    },\n    formgroup: {\n        display: \"inline\"\n    },\n    input: {\n        marginBottom: \"0.3rem\",\n        marginRight: \"0.3rem\",\n        backgroundColor: \"white\",\n        borderRadius: \"4px\"\n    },\n    submitButton: {\n        padding: \"8px 22px\",\n        fontSize: \"0.9375rem\",\n        minWidth: \"64px\",\n        backgroundColor: \"blue\",\n        // transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,border 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n        /* font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif; */\n        /* font-weight: 500; */\n        lineHeight: \"1.75\",\n        borderRadius: \"4px\",\n    }\n}));\n\nconst blankVitals = {\n    time: \"\",\n    LOR: \"Not Reported\",\n    HR: \"Not Reported\",\n    RR: \"Not Reported\",\n    BPs: \"Not Reported\",\n    BPd: \"Not Reported\",\n    oxygen: \"Not Reported\",\n}\n\n// setVitals({ ...vitals, time: dayjs().format(\"HH:mm:ss\") })\n\n\n\nfunction VitalsForm(props) {\n    const classes = useStyles();\n    const { id } = useParams()\n\n    const [vitals, setVitals] = useState(blankVitals)\n\n    function handleVitalsInput(event) {\n        // console.log(vitals.LOR)\n        if (vitals.time === \"\") {\n            setVitals({ ...vitals, time: dayjs().format(\"HH:mm:ss\") })\n        } else {\n            const { name, value } = event.target;\n            setVitals({ ...vitals, [name]: value })\n        }\n    };\n\n    // function updateTime() {\n    // }\n\n    // function handleSubmit(event, data) {\n    //     // console.log(data)\n    //     props.onSubmit(event, data)\n    // }\n\n    function clearForm(target) {\n        let form\n        // let parent = \".parentElement\"\n        if (target.parentElement.nodeName === \"FORM\") {\n            form = target.parentElement\n        } else if (target.parentElement.parentElement.nodeName === \"FORM\") {\n            form = target.parentElement.parentElement\n        } else if (target.parentElement.parentElement.parentElement.nodeName === \"FORM\") {\n            form = target.parentElement.parentElement.parentElement\n        } else if (target.parentElement.parentElement.parentElement.parentElement.nodeName === \"FORM\") {\n            form = target.parentElement.parentElement.parentElement.parentElement\n        }\n        return form.reset()\n        // return form\n    }\n\n    function handleVitalsSubmit(event, data) {\n        // let form\n        event.preventDefault();\n        // if (event.target.parentElement.parentElement.parentElement === )\n        // console.log(event.target.parentElement.parentElement.nodeName)\n        // event.target.parentElement.parentElement.parentElement.reset()\n        // console.log(data)\n        if (data.HR !== \"Not Reported\") {\n            API.updateVitals(id, data)\n                .then(clearForm(event.target))\n                .then(socket.emit(\"update\"))\n                // .then(event.target.parentElement.parentElement.parentElement.reset())\n                // .then(console.log(event.target.parentElement.parentElement.parentElement))\n                .then(setVitals(blankVitals))\n            // .then(loadById(id))\n        }\n        // .exec(loadById(id))\n        // console.log(vitals)\n        // console.log(\"here\")\n    }\n\n    return (\n        <form className={classes.root} noValidate autoComplete=\"off\">\n            <Grid container className={classes.formgroup}>\n                <Grid item xs={12}>\n                    <TextField\n                        className={classes.input}\n                        id=\"outlined-basic\"\n                        label=\"LOR\"\n                        variant=\"outlined\"\n                        name=\"LOR\"\n                        onChange={handleVitalsInput} />\n                    <TextField\n                        className={classes.input}\n                        id=\"outlined-basic\"\n                        label=\"Oxygen Sat\"\n                        variant=\"outlined\"\n                        name=\"oxygen\"\n                        onChange={handleVitalsInput} />\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                        className={classes.input}\n                        id=\"outlined-basic\"\n                        label=\"Heart Rate\"\n                        variant=\"outlined\"\n                        name=\"HR\"\n                        onChange={handleVitalsInput} />\n                    <TextField\n                        className={classes.input}\n                        id=\"outlined-basic\"\n                        label=\"Repiratory Rate\"\n                        variant=\"outlined\"\n                        name=\"RR\"\n                        onChange={handleVitalsInput} />\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                        className={classes.input}\n                        id=\"outlined-basic\"\n                        label=\"BP systolic\"\n                        variant=\"outlined\"\n                        name=\"BPs\"\n                        onChange={handleVitalsInput} />\n                    <TextField\n                        className={classes.input}\n                        id=\"outlined-basic\"\n                        label=\"BP diastolic\"\n                        variant=\"outlined\"\n                        name=\"BPd\"\n                        onChange={handleVitalsInput} />\n\n                </Grid>\n                {/* <Typography className={classes.submitButton}>SUBMIT</Typography> */}\n                <Button size=\"large\" variant=\"contained\" color=\"primary\" onClick={(event) => handleVitalsSubmit(event, vitals)}>Submit</Button>\n            </Grid>\n        </form >\n    );\n    // return (\n    //     <Form onSubmit={props.onSubmit}>\n    //         <Form.Group>\n    //             <Form.Label>Heart Rate</Form.Label>\n    //             <Form.Control\n    //                 name=\"HR\"\n    //                 placeholder=\"Heart Rate\"\n    //                 type=\"number\"\n    //                 onChange={props.onChange}></Form.Control>\n    //         </Form.Group>\n    //         <Form.Group>\n    //             <Form.Label>Respiratory Rate</Form.Label>\n    //             <Form.Control\n    //                 name=\"RR\"\n    //                 placeholder=\"Respiratory Rate\"\n    //                 type=\"number\"\n    //                 onChange={props.onChange}></Form.Control>\n    //         </Form.Group>\n    //         <Form.Group>\n    //             <Form.Label>BP Systolic</Form.Label>\n    //             <Form.Control\n    //                 name=\"BPs\"\n    //                 placeholder=\"Systolic\"\n    //                 type=\"number\"\n    //                 onChange={props.onChange}></Form.Control>\n    //         </Form.Group>\n    //         <Form.Group>\n    //             <Form.Label>BP Diastolic</Form.Label>\n    //             <Form.Control\n    //                 name=\"BPd\"\n    //                 placeholder=\"Diastolic\"\n    //                 type=\"number\"\n    //                 onChange={props.onChange}></Form.Control>\n    //         </Form.Group>\n    //         <Form.Group>\n    //             <Form.Label>Oxygen Saturation</Form.Label>\n    //             <Form.Control\n    //                 name=\"oxygen\"\n    //                 placeholder=\"O2 sat\"\n    //                 type=\"number\"\n    //                 onChange={props.onChange}></Form.Control>\n    //         </Form.Group>\n    //         <Button \n    //         onClick={props.onSubmit}\n    //         variant=\"primary\" \n    //         type=\"submit\">\n    //             Submit\n    //         </Button>\n    //     </Form>\n    // )\n}\n\nexport default VitalsForm","/Users/allen/GitHub/casrep/client/src/components/PatientCard/PatientCard.js",["119","120","121","122","123","124","125","126","127"],"/Users/allen/GitHub/casrep/client/src/components/Vitals/VitalsTable.js",[],"/Users/allen/GitHub/casrep/client/src/components/CriticalWarning/CritWarnSelect.js",["128","129"],"/Users/allen/GitHub/casrep/client/src/components/Navbar/Navbar.js",[],"/Users/allen/GitHub/casrep/client/src/components/EtaUpdate/EtaUpdate.js",["130"],"import React, {useState} from \"react\"\n// import { Form, Button } from \"react-bootstrap\"\n// import { useState } from \"react\"\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button'\n// import Grid from '@material-ui/core/Grid'\n\nimport { useParams } from \"react-router-dom\"\nimport API from \"../../utils/API\"\n\nimport io from \"socket.io-client\"\nconst socket = io()\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& > *': {\n            margin: theme.spacing(1),\n            width: '25ch',\n        },\n    },\n    formgroup: {\n        display: \"inline\"\n    },\n    input: {\n        marginBottom: \"0.3rem\",\n        marginRight: \"0.3rem\",\n        backgroundColor:\"white\",\n        borderRadius: \"4px\"\n    }\n}));\n\nfunction EtaUpdate(props) {\n    const classes = useStyles()\n    const { id } = useParams()\n\n    const [eta, setEta] = useState({\n        time: \"\"\n    })\n\n    function handleEtaInput(event) {\n        const { name, value } = event.target\n        setEta({ ...eta, [name]: value })\n        // console.log(eta.time)\n    }\n\n    function handleEtaSubmit(event, data) {\n        // console.log(data)\n        event.preventDefault()\n        // findForm(event.target)\n        // console.log(event.target.parentElement)\n\n        API.updateETA(id, { time: data.time })\n            .then(clearForm(event.target))\n            // .then(event.target.parentElement.reset())\n            .then(socket.emit(\"update\"))\n        // .then(setEta({ pending: false }))\n        // .then(loadById(id))\n    }\n\n    function clearForm(target) {\n        let form\n        // let parent = \".parentElement\"\n        if (target.parentElement.nodeName === \"FORM\") {\n            form = target.parentElement\n        } else if (target.parentElement.parentElement.nodeName === \"FORM\") {\n            form = target.parentElement.parentElement\n        } else if (target.parentElement.parentElement.parentElement.nodeName === \"FORM\") {\n            form = target.parentElement.parentElement.parentElement\n        } else if (target.parentElement.parentElement.parentElement.parentElement.nodeName === \"FORM\") {\n            form = target.parentElement.parentElement.parentElement.parentElement\n        }\n        return form.reset()\n        // return form\n    }\n    return (\n        <form className={classes.root, classes.form} onSubmit={props.etaSubmit}>\n                    <div className={classes.inputContainer}>\n                        <TextField\n                            className={classes.input}\n                            required\n                            variant=\"outlined\"\n                            label=\"ETA\"\n                            // placeholder=\"MS-21\"\n                            // helperText=\"Required\"\n                            onChange={handleEtaInput}\n                            type=\"text\"\n                            name=\"time\"\n                        />\n                    </div>\n                    <Button size=\"large\" variant=\"contained\" color=\"primary\" onClick={(event) => handleEtaSubmit(event, eta)}>Submit</Button>\n                </form>\n        // <Form\n        //     onSubmit={props.onSubmit}\n        // >\n        //     <Form.Group>\n        //         <Form.Label>What is you ETA?</Form.Label>\n        //         <Form.Control\n        //             name=\"time\"\n        //             placeholder=\"0000\"\n        //             // type=\"number\"\n        //             onChange={props.onChange}\n        //         />\n        //     </Form.Group>\n        //     <Button\n        //         onClick={props.onSubmit}\n        //         variant=\"primary\"\n        //         type=\"submit\">\n        //         Submit\n        //     </Button>\n        // </Form>\n    )\n}\n\nexport default EtaUpdate","/Users/allen/GitHub/casrep/client/src/components/PatientInformation/PatientInformationForm.js",[],"/Users/allen/GitHub/casrep/client/src/components/PatientInformation/PatientInformationTable.js",[],"/Users/allen/GitHub/casrep/client/src/components/HomeButtonBase/HomeButtonBase.js",[],"/Users/allen/GitHub/casrep/client/src/components/EMSToolbar/EMSToolbar.js",[],"/Users/allen/GitHub/casrep/client/src/components/EMSPatientCard/EMSPatientCard.js",["131","132"],{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","severity":1,"message":"138","line":47,"column":16,"nodeType":"139","endLine":48,"endColumn":8},{"ruleId":"133","replacedBy":"140"},{"ruleId":"135","replacedBy":"141"},{"ruleId":"142","severity":1,"message":"143","line":3,"column":1,"nodeType":"144","endLine":52,"endColumn":2},{"ruleId":"145","severity":1,"message":"146","line":100,"column":1,"nodeType":"147","messageId":"148","endLine":125,"endColumn":24},{"ruleId":"133","replacedBy":"149"},{"ruleId":"135","replacedBy":"150"},{"ruleId":"151","severity":1,"message":"152","line":90,"column":42,"nodeType":"153","messageId":"154","endLine":90,"endColumn":43},{"ruleId":"155","severity":1,"message":"156","line":18,"column":8,"nodeType":"157","messageId":"158","endLine":18,"endColumn":19},{"ruleId":"155","severity":1,"message":"159","line":25,"column":8,"nodeType":"157","messageId":"158","endLine":25,"endColumn":18},{"ruleId":"160","severity":1,"message":"161","line":107,"column":8,"nodeType":"162","endLine":107,"endColumn":10,"suggestions":"163"},{"ruleId":"155","severity":1,"message":"164","line":126,"column":14,"nodeType":"157","messageId":"158","endLine":126,"endColumn":23},{"ruleId":"155","severity":1,"message":"165","line":8,"column":10,"nodeType":"157","messageId":"158","endLine":8,"endColumn":20},{"ruleId":"155","severity":1,"message":"166","line":1,"column":17,"nodeType":"157","messageId":"158","endLine":1,"endColumn":25},{"ruleId":"155","severity":1,"message":"167","line":1,"column":27,"nodeType":"157","messageId":"158","endLine":1,"endColumn":36},{"ruleId":"155","severity":1,"message":"168","line":21,"column":10,"nodeType":"157","messageId":"158","endLine":21,"endColumn":19},{"ruleId":"155","severity":1,"message":"169","line":109,"column":11,"nodeType":"157","messageId":"158","endLine":109,"endColumn":21},{"ruleId":"155","severity":1,"message":"170","line":110,"column":11,"nodeType":"157","messageId":"158","endLine":110,"endColumn":23},{"ruleId":"155","severity":1,"message":"171","line":114,"column":9,"nodeType":"157","messageId":"158","endLine":114,"endColumn":16},{"ruleId":"155","severity":1,"message":"172","line":115,"column":9,"nodeType":"157","messageId":"158","endLine":115,"endColumn":18},{"ruleId":"173","severity":1,"message":"174","line":177,"column":64,"nodeType":"175","messageId":"176","endLine":177,"endColumn":66},{"ruleId":"173","severity":1,"message":"174","line":184,"column":66,"nodeType":"175","messageId":"176","endLine":184,"endColumn":68},{"ruleId":"155","severity":1,"message":"177","line":10,"column":8,"nodeType":"157","messageId":"158","endLine":10,"endColumn":12},{"ruleId":"155","severity":1,"message":"178","line":11,"column":10,"nodeType":"157","messageId":"158","endLine":11,"endColumn":14},{"ruleId":"151","severity":1,"message":"152","line":78,"column":38,"nodeType":"153","messageId":"154","endLine":78,"endColumn":39},{"ruleId":"173","severity":1,"message":"174","line":145,"column":64,"nodeType":"175","messageId":"176","endLine":145,"endColumn":66},{"ruleId":"173","severity":1,"message":"174","line":152,"column":66,"nodeType":"175","messageId":"176","endLine":152,"endColumn":68},"no-native-reassign",["179"],"no-negated-in-lhs",["180"],"react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","Literal",["179"],["180"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock",["179"],["180"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","no-unused-vars","'PatientCard' is defined but never used.","Identifier","unusedVar","'EMSToolbar' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["181"],"'clearForm' is defined but never used.","'Typography' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'Component' is defined but never used.","'alertField' is assigned a value but never used.","'warningField' is assigned a value but never used.","'allKeys' is assigned a value but never used.","'alertKeys' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'Grid' is defined but never used.","'Form' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"182","fix":"183"},"Update the dependencies array to be: [id]",{"range":"184","text":"185"},[3263,3265],"[id]"]