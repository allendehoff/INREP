{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/allen/GitHub/casrep/client/src/components/PatientInformation/PatientInformationForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\"; // import { Form, Button } from \"react-bootstrap\"\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport { useParams } from \"react-router-dom\";\nimport API from \"../../utils/API\";\nimport io from \"socket.io-client\";\nconst socket = io();\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(2),\n      width: '25ch'\n    }\n  },\n  formgroup: {\n    display: \"inline\"\n  },\n  input: {\n    marginBottom: \"0.3rem\",\n    backgroundColor: \"white\",\n    borderRadius: \"4px\"\n  }\n}));\n\nfunction PatientInformationForm(props) {\n  _s();\n\n  const classes = useStyles();\n  const {\n    id\n  } = useParams();\n  const [patientInformation, setPatientInformation] = useState({\n    age: \"Not Reported\",\n    sex: \"Not Reported\",\n    chiefComplaint: \"Not Reported\",\n    moiHpi: \"Not Reported\",\n    oxygenTx: \"Not Reported\",\n    from: \"Not Reported\"\n  });\n\n  function handlePtInformationChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setPatientInformation({ ...patientInformation,\n      [name]: value\n    });\n  }\n\n  function handlePtInformationSubmit(event, data) {\n    event.preventDefault(); // console.log(event.target.parentElement.parentElement.parentElement)\n    // console.log(event.target.parentElement.parentElement)\n\n    API.updatePtInformation(id, data).then(socket.emit(\"update\")).then(clearForm(event.target)); // .then(event.target.parentElement.parentElement.parentElement.reset())\n    // .then(setPatientInformation({ pending: false }))\n    // .then(loadById(id))\n  }\n\n  function clearForm(target) {\n    let form; // let parent = \".parentElement\"\n\n    if (target.parentElement.nodeName === \"FORM\") {\n      form = target.parentElement;\n    } else if (target.parentElement.parentElement.nodeName === \"FORM\") {\n      form = target.parentElement.parentElement;\n    } else if (target.parentElement.parentElement.parentElement.nodeName === \"FORM\") {\n      form = target.parentElement.parentElement.parentElement;\n    } else if (target.parentElement.parentElement.parentElement.parentElement.nodeName === \"FORM\") {\n      form = target.parentElement.parentElement.parentElement.parentElement;\n    }\n\n    return form.reset(); // return form\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.root,\n    noValidate: true,\n    autoComplete: \"off\",\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      className: classes.formgroup,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          className: classes.input,\n          id: \"outlined-basic\",\n          label: \"Age\",\n          variant: \"outlined\",\n          name: \"age\",\n          onChange: handlePtInformationChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          className: classes.input,\n          id: \"outlined-basic\",\n          label: \"Sex\",\n          variant: \"outlined\",\n          name: \"sex\",\n          onChange: handlePtInformationChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          className: classes.input,\n          id: \"outlined-basic\",\n          label: \"Chief Complaint\",\n          variant: \"outlined\",\n          name: \"chiefComplaint\",\n          onChange: handlePtInformationChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          className: classes.input,\n          id: \"outlined-basic\",\n          label: \"MOI/ HPI\",\n          variant: \"outlined\",\n          name: \"moiHpi\",\n          onChange: handlePtInformationChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          className: classes.input,\n          id: \"outlined-basic\",\n          label: \"O2 Treatment\",\n          variant: \"outlined\",\n          name: \"oxygenTx\",\n          onChange: handlePtInformationChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          className: classes.input,\n          id: \"outlined-basic\",\n          label: \"Coming From\",\n          variant: \"outlined\",\n          name: \"from\",\n          onChange: handlePtInformationChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        size: \"large\",\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: event => handlePtInformationSubmit(event, patientInformation),\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this); // return (\n  //     <Form onSubmit={props.onSubmit}>\n  //         <Form.Group>\n  //             <Form.Label>Age</Form.Label>\n  //             <Form.Control\n  //                 name=\"age\"\n  //                 placeholder=\"Age\"\n  //                 type=\"number\"\n  //                 onChange={props.onChange}></Form.Control>\n  //         </Form.Group>\n  //         <Form.Group>\n  //             <Form.Label>Sex</Form.Label>\n  //             <Form.Control\n  //                 name=\"sex\"\n  //                 placeholder=\"Sex\"\n  //                 type=\"string\"\n  //                 onChange={props.onChange}></Form.Control>\n  //         </Form.Group>\n  //         <Form.Group>\n  //             <Form.Label>Chief Complaint</Form.Label>\n  //             <Form.Control\n  //                 name=\"chiefComplaint\"\n  //                 placeholder=\"CC\"\n  //                 type=\"string\"\n  //                 onChange={props.onChange}></Form.Control>\n  //         </Form.Group>\n  //         <Form.Group>\n  //             <Form.Label>MOI/HPI</Form.Label>\n  //             <Form.Control\n  //                 name=\"moiHpi\"\n  //                 placeholder=\"MOI/ HPI\"\n  //                 type=\"string\"\n  //                 onChange={props.onChange}></Form.Control>\n  //         </Form.Group>\n  //         <Form.Group>\n  //             <Form.Label>Oxygen Treatment</Form.Label>\n  //             <Form.Control\n  //                 name=\"oxygenTx\"\n  //                 placeholder=\"O2 Treatment\"\n  //                 type=\"string\"\n  //                 onChange={props.onChange}></Form.Control>\n  //         </Form.Group>\n  //         <Form.Group>\n  //             <Form.Label>Pt coming From:</Form.Label>\n  //             <Form.Control\n  //                 name=\"from\"\n  //                 placeholder=\"Pickup Location\"\n  //                 type=\"string\"\n  //                 onChange={props.onChange}></Form.Control>\n  //         </Form.Group>\n  //         <Button\n  //             onClick={props.onSubmit}\n  //             variant=\"primary\"\n  //             type=\"submit\">\n  //             Submit\n  //         </Button>\n  //     </Form>\n  // )\n}\n\n_s(PatientInformationForm, \"fIcHCI+Sw/tYB1cpETOrumVG0kI=\", false, function () {\n  return [useStyles, useParams];\n});\n\n_c = PatientInformationForm;\nexport default PatientInformationForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PatientInformationForm\");","map":{"version":3,"sources":["/Users/allen/GitHub/casrep/client/src/components/PatientInformation/PatientInformationForm.js"],"names":["React","useState","makeStyles","TextField","Grid","Button","useParams","API","io","socket","useStyles","theme","root","margin","spacing","width","formgroup","display","input","marginBottom","backgroundColor","borderRadius","PatientInformationForm","props","classes","id","patientInformation","setPatientInformation","age","sex","chiefComplaint","moiHpi","oxygenTx","from","handlePtInformationChange","event","name","value","target","handlePtInformationSubmit","data","preventDefault","updatePtInformation","then","emit","clearForm","form","parentElement","nodeName","reset"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\n// import { Form, Button } from \"react-bootstrap\"\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid'\nimport Button from '@material-ui/core/Button'\n\nimport { useParams } from \"react-router-dom\"\nimport API from \"../../utils/API\"\n\n\nimport io from \"socket.io-client\"\nconst socket = io()\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& > *': {\n            margin: theme.spacing(2),\n            width: '25ch',\n        },\n    },\n    formgroup: {\n        display: \"inline\"\n    },\n    input: {\n        marginBottom: \"0.3rem\",\n        backgroundColor:\"white\",\n        borderRadius: \"4px\"\n    }\n}));\n\nfunction PatientInformationForm(props) {\n    const classes = useStyles()\n    const { id } = useParams()\n\n    const [patientInformation, setPatientInformation] = useState({\n        age: \"Not Reported\",\n        sex: \"Not Reported\",\n        chiefComplaint: \"Not Reported\",\n        moiHpi: \"Not Reported\",\n        oxygenTx: \"Not Reported\",\n        from: \"Not Reported\"\n    })\n\n    function handlePtInformationChange(event) {\n        const { name, value } = event.target\n        setPatientInformation({ ...patientInformation, [name]: value })\n    }\n\n    function handlePtInformationSubmit(event, data) {\n        event.preventDefault()\n        // console.log(event.target.parentElement.parentElement.parentElement)\n        // console.log(event.target.parentElement.parentElement)\n        API.updatePtInformation(id, data)\n            .then(socket.emit(\"update\"))\n            .then(clearForm(event.target))\n        // .then(event.target.parentElement.parentElement.parentElement.reset())\n        // .then(setPatientInformation({ pending: false }))\n        // .then(loadById(id))\n    }\n\n    function clearForm(target) {\n        let form\n        // let parent = \".parentElement\"\n        if (target.parentElement.nodeName === \"FORM\") {\n            form = target.parentElement\n        } else if (target.parentElement.parentElement.nodeName === \"FORM\") {\n            form = target.parentElement.parentElement\n        } else if (target.parentElement.parentElement.parentElement.nodeName === \"FORM\") {\n            form = target.parentElement.parentElement.parentElement\n        } else if (target.parentElement.parentElement.parentElement.parentElement.nodeName === \"FORM\") {\n            form = target.parentElement.parentElement.parentElement.parentElement\n        }\n        return form.reset()\n        // return form\n    }\n\n    return (\n        <form className={classes.root} noValidate autoComplete=\"off\">\n            <Grid container className={classes.formgroup}>\n                <Grid item xs={12}>\n                    <TextField\n                        className={classes.input}\n                        id=\"outlined-basic\"\n                        label=\"Age\"\n                        variant=\"outlined\"\n                        name=\"age\"\n                        onChange={handlePtInformationChange} />\n                    <TextField\n                        className={classes.input}\n                        id=\"outlined-basic\"\n                        label=\"Sex\"\n                        variant=\"outlined\"\n                        name=\"sex\"\n                        onChange={handlePtInformationChange} />\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                        fullWidth\n                        className={classes.input}\n                        id=\"outlined-basic\"\n                        label=\"Chief Complaint\"\n                        variant=\"outlined\"\n                        name=\"chiefComplaint\"\n                        onChange={handlePtInformationChange} />\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                        fullWidth\n                        className={classes.input}\n                        id=\"outlined-basic\"\n                        label=\"MOI/ HPI\"\n                        variant=\"outlined\"\n                        name=\"moiHpi\"\n                        onChange={handlePtInformationChange} />\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                        className={classes.input}\n                        id=\"outlined-basic\"\n                        label=\"O2 Treatment\"\n                        variant=\"outlined\"\n                        name=\"oxygenTx\"\n                        onChange={handlePtInformationChange} />\n                    <TextField\n                        className={classes.input}\n                        id=\"outlined-basic\"\n                        label=\"Coming From\"\n                        variant=\"outlined\"\n                        name=\"from\"\n                        onChange={handlePtInformationChange} />\n                </Grid>\n                <Button size=\"large\" variant=\"contained\" color=\"primary\" onClick={(event) => handlePtInformationSubmit(event, patientInformation)}>Submit</Button>\n            </Grid>\n        </form >\n    )\n\n    // return (\n    //     <Form onSubmit={props.onSubmit}>\n    //         <Form.Group>\n    //             <Form.Label>Age</Form.Label>\n    //             <Form.Control\n    //                 name=\"age\"\n    //                 placeholder=\"Age\"\n    //                 type=\"number\"\n    //                 onChange={props.onChange}></Form.Control>\n    //         </Form.Group>\n    //         <Form.Group>\n    //             <Form.Label>Sex</Form.Label>\n    //             <Form.Control\n    //                 name=\"sex\"\n    //                 placeholder=\"Sex\"\n    //                 type=\"string\"\n    //                 onChange={props.onChange}></Form.Control>\n    //         </Form.Group>\n    //         <Form.Group>\n    //             <Form.Label>Chief Complaint</Form.Label>\n    //             <Form.Control\n    //                 name=\"chiefComplaint\"\n    //                 placeholder=\"CC\"\n    //                 type=\"string\"\n    //                 onChange={props.onChange}></Form.Control>\n    //         </Form.Group>\n    //         <Form.Group>\n    //             <Form.Label>MOI/HPI</Form.Label>\n    //             <Form.Control\n    //                 name=\"moiHpi\"\n    //                 placeholder=\"MOI/ HPI\"\n    //                 type=\"string\"\n    //                 onChange={props.onChange}></Form.Control>\n    //         </Form.Group>\n    //         <Form.Group>\n    //             <Form.Label>Oxygen Treatment</Form.Label>\n    //             <Form.Control\n    //                 name=\"oxygenTx\"\n    //                 placeholder=\"O2 Treatment\"\n    //                 type=\"string\"\n    //                 onChange={props.onChange}></Form.Control>\n    //         </Form.Group>\n    //         <Form.Group>\n    //             <Form.Label>Pt coming From:</Form.Label>\n    //             <Form.Control\n    //                 name=\"from\"\n    //                 placeholder=\"Pickup Location\"\n    //                 type=\"string\"\n    //                 onChange={props.onChange}></Form.Control>\n    //         </Form.Group>\n    //         <Button\n    //             onClick={props.onSubmit}\n    //             variant=\"primary\"\n    //             type=\"submit\">\n    //             Submit\n    //         </Button>\n    //     </Form>\n    // )\n}\n\nexport default PatientInformationForm"]},"metadata":{},"sourceType":"module"}