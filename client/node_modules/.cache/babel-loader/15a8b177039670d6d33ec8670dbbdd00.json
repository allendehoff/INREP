{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/allen/GitHub/casrep/client/src/components/PatientCard/PatientCard.js\";\nimport React, { useEffect } from \"react\";\nimport { Card, ListGroup, ListGroupItem, Accordion, Table } from \"react-bootstrap\";\nimport Moment from 'react-moment';\nimport 'moment-timezone';\nimport VitalsTable from \"../Vitals/VitalsTable\";\n\nfunction PatientCard(props) {\n  // useEffect(() => {\n  // }, [])\n  let warningKeys = [];\n\n  function fetchTrueWarnings(obj) {\n    // await loadById(id)\n    for (const property in obj) {\n      if (obj[property] === true) {\n        warningKeys.push(property);\n      } // return warningKeys\n\n    } // console.log(warningKeys)\n\n  }\n\n  fetchTrueWarnings(JSON.parse(props.patient.criticalWarn));\n  return /*#__PURE__*/_jsxDEV(Card, {\n    style: {\n      marginBottom: \"1rem\",\n      paddingBottom: \"1rem\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n      children: [\"Unit Responding: \", props.patient.respondingUnit, \" | ETA: \", props.patient.ETA]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n        children: [\"Critical Warnings:\", warningKeys.map(warning => {\n          if (warning != \"pending\") {\n            return /*#__PURE__*/_jsxDEV(\"p\", {\n              children: warning\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 54\n            }, this);\n          }\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Accordion, {\n        defaultActiveKey: \"0\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Accordion.Toggle, {\n            eventKey: \"vitals\",\n            children: \"Vitals\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Accordion.Collapse, {\n            eventKey: \"vitals\",\n            children: /*#__PURE__*/_jsxDEV(VitalsTable, {\n              patient: props.patient\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n\n_c = PatientCard;\nexport default PatientCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PatientCard\");","map":{"version":3,"sources":["/Users/allen/GitHub/casrep/client/src/components/PatientCard/PatientCard.js"],"names":["React","useEffect","Card","ListGroup","ListGroupItem","Accordion","Table","Moment","VitalsTable","PatientCard","props","warningKeys","fetchTrueWarnings","obj","property","push","JSON","parse","patient","criticalWarn","marginBottom","paddingBottom","respondingUnit","ETA","map","warning"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,SAAf,EAA0BC,aAA1B,EAAyCC,SAAzC,EAAoDC,KAApD,QAAiE,iBAAjE;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAO,iBAAP;AAEA,OAAOC,WAAP,MAAwB,uBAAxB;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AACxB;AAEA;AAEA,MAAIC,WAAW,GAAG,EAAlB;;AACA,WAASC,iBAAT,CAA2BC,GAA3B,EAAgC;AAC5B;AACA,SAAK,MAAMC,QAAX,IAAuBD,GAAvB,EAA4B;AACxB,UAAIA,GAAG,CAACC,QAAD,CAAH,KAAkB,IAAtB,EAA4B;AACxBH,QAAAA,WAAW,CAACI,IAAZ,CAAiBD,QAAjB;AACH,OAHuB,CAIxB;;AACH,KAP2B,CAQ5B;;AACH;;AACDF,EAAAA,iBAAiB,CAACI,IAAI,CAACC,KAAL,CAAWP,KAAK,CAACQ,OAAN,CAAcC,YAAzB,CAAD,CAAjB;AAEA,sBACI,QAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,YAAY,EAAE,MAAhB;AAAwBC,MAAAA,aAAa,EAAE;AAAvC,KAAb;AAAA,4BACI,QAAC,IAAD,CAAM,MAAN;AAAA,sCACsBX,KAAK,CAACQ,OAAN,CAAcI,cADpC,cAEUZ,KAAK,CAACQ,OAAN,CAAcK,GAFxB;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI,QAAC,IAAD,CAAM,IAAN;AAAA,8BACI,QAAC,IAAD,CAAM,KAAN;AAAA,yCACKZ,WAAW,CAACa,GAAZ,CAAgBC,OAAO,IAAI;AAC5B,cAAGA,OAAO,IAAI,SAAd,EAAyB;AAAC,gCAAO;AAAA,wBAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA,oBAAP;AAAwB;AACrD,SAFI,CADL;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAQI,QAAC,SAAD;AAAW,QAAA,gBAAgB,EAAC,GAA5B;AAAA,+BACI,QAAC,IAAD;AAAA,kCACI,QAAC,SAAD,CAAW,MAAX;AAAkB,YAAA,QAAQ,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,SAAD,CAAW,QAAX;AAAoB,YAAA,QAAQ,EAAC,QAA7B;AAAA,mCACI,QAAC,WAAD;AAAa,cAAA,OAAO,EAAEf,KAAK,CAACQ;AAA5B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA0BH;;KA5CQT,W;AA8CT,eAAeA,WAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { Card, ListGroup, ListGroupItem, Accordion, Table } from \"react-bootstrap\"\nimport Moment from 'react-moment';\nimport 'moment-timezone';\n\nimport VitalsTable from \"../Vitals/VitalsTable\"\n\nfunction PatientCard(props) {\n    // useEffect(() => {\n\n    // }, [])\n\n    let warningKeys = []\n    function fetchTrueWarnings(obj) {\n        // await loadById(id)\n        for (const property in obj) {\n            if (obj[property] === true) {\n                warningKeys.push(property)\n            }\n            // return warningKeys\n        }\n        // console.log(warningKeys)\n    }\n    fetchTrueWarnings(JSON.parse(props.patient.criticalWarn))\n\n    return (\n        <Card style={{ marginBottom: \"1rem\", paddingBottom: \"1rem\" }}>\n            <Card.Header>\n                Unit Responding: {props.patient.respondingUnit} |\n                ETA: {props.patient.ETA}\n            </Card.Header>\n            <Card.Body>\n                <Card.Title>Critical Warnings:\n                    {warningKeys.map(warning => {\n                    if(warning != \"pending\") {return <p>{warning}</p>}\n                }\n                )}\n                </Card.Title>\n                {/* <Card.Text>ETA: {props.patient.ETA}</Card.Text> */}\n                <Accordion defaultActiveKey=\"0\">\n                    <Card>\n                        <Accordion.Toggle eventKey=\"vitals\">Vitals</Accordion.Toggle>\n                        <Accordion.Collapse eventKey=\"vitals\">\n                            <VitalsTable patient={props.patient} />\n                        </Accordion.Collapse>\n                    </Card>\n                </Accordion>\n                \n            </Card.Body>\n        </Card>\n    )\n}\n\nexport default PatientCard"]},"metadata":{},"sourceType":"module"}