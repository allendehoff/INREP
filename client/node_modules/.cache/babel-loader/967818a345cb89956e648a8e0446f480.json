{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/allen/GitHub/casrep/client/src/components/CriticalWarning/CriticalWarnings.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Component } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport API from \"../../utils/API\";\nimport { Card, Button } from \"react-bootstrap\";\n\nfunction CriticalWarnings(props) {\n  // const [warnings, setWarnings] = useState({})\n  // const { id } = useParams()\n  // useEffect(() => {\n  //     fetchTrueWarnings(warnings)\n  //     // loadById(id)\n  // },[])\n  // function loadById(id) {\n  //     // console.log(id)\n  //     API.findById(id)\n  //         .then((ptData) => {\n  //             // console.log(ptData.data.criticalWarn)\n  //             const warningObject = JSON.parse(ptData.data.criticalWarn)\n  //             // console.log(warningObject)\n  //             setWarnings(warningObject)\n  //         })\n  //         // .then(console.log(warnings))\n  //         .then(fetchTrueWarnings(warnings))\n  // }\n  // let warningKeys = []\n  // async function fetchTrueWarnings(obj) {\n  //     await loadById(id)\n  //     for (const property in obj) {\n  //         if (obj[property] === true){\n  //             warningKeys.push(property)\n  //         }\n  //     }\n  //     console.log(warningKeys)\n  //     return\n  // }\n  // fetchTrueWarnings(warnings)\n  return /*#__PURE__*/_jsxDEV(Card, {\n    style: {\n      width: \"80%\",\n      marginBottom: \"1rem\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n      children: \"Critical Warnings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: props.onClick,\n        className: \"btn btn-danger\",\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n\n_c = CriticalWarnings;\nexport default CriticalWarnings;\n\nvar _c;\n\n$RefreshReg$(_c, \"CriticalWarnings\");","map":{"version":3,"sources":["/Users/allen/GitHub/casrep/client/src/components/CriticalWarning/CriticalWarnings.js"],"names":["React","useEffect","useState","Component","useParams","API","Card","Button","CriticalWarnings","props","width","marginBottom","onClick"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AAEA,SAASC,IAAT,EAAeC,MAAf,QAA6B,iBAA7B;;AAEA,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAC7B;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,sBACI,QAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACC,MAAAA,KAAK,EAAC,KAAP;AAAcC,MAAAA,YAAY,EAAC;AAA3B,KAAb;AAAA,4BACI,QAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAGI,QAAC,IAAD,CAAM,IAAN;AAAA,6BACI,QAAC,MAAD;AACA,QAAA,OAAO,EAAEF,KAAK,CAACG,OADf;AAEA,QAAA,SAAS,EAAC,gBAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH;;KA/CQJ,gB;AAiDT,eAAeA,gBAAf","sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport { Component } from \"react\"\nimport { useParams } from \"react-router-dom\"\nimport API from \"../../utils/API\"\n\nimport { Card, Button } from \"react-bootstrap\"\n\nfunction CriticalWarnings(props) {\n    // const [warnings, setWarnings] = useState({})\n    // const { id } = useParams()\n\n    // useEffect(() => {\n    //     fetchTrueWarnings(warnings)\n    //     // loadById(id)\n    // },[])\n    \n    // function loadById(id) {\n    //     // console.log(id)\n    //     API.findById(id)\n    //         .then((ptData) => {\n    //             // console.log(ptData.data.criticalWarn)\n    //             const warningObject = JSON.parse(ptData.data.criticalWarn)\n    //             // console.log(warningObject)\n    //             setWarnings(warningObject)\n    //         })\n    //         // .then(console.log(warnings))\n    //         .then(fetchTrueWarnings(warnings))\n    // }\n\n    // let warningKeys = []\n    // async function fetchTrueWarnings(obj) {\n    //     await loadById(id)\n    //     for (const property in obj) {\n    //         if (obj[property] === true){\n    //             warningKeys.push(property)\n    //         }\n    //     }\n    //     console.log(warningKeys)\n    //     return\n    // }\n    // fetchTrueWarnings(warnings)\n\n\n    return (\n        <Card style={{width:\"80%\", marginBottom:\"1rem\"}}>\n            <Card.Header>Critical Warnings \n                </Card.Header>\n            <Card.Body>\n                <Button\n                onClick={props.onClick}\n                className=\"btn btn-danger\">Update</Button >\n            </Card.Body>\n        </Card>\n    )\n}\n\nexport default CriticalWarnings"]},"metadata":{},"sourceType":"module"}