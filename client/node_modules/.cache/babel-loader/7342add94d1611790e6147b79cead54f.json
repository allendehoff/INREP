{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/allen/GitHub/casrep/client/src/components/Vitals/VitalsForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\"; // import { Form, Button } from \"react-bootstrap\"\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport { Typography } from \"@material-ui/core\";\nimport { useParams } from \"react-router-dom\";\nimport API from \"../../utils/API\";\nimport io from \"socket.io-client\";\nconst socket = io();\n\nconst dayjs = require(\"dayjs\");\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '25ch'\n    }\n  },\n  formgroup: {\n    display: \"inline\"\n  },\n  input: {\n    marginBottom: \"0.3rem\",\n    marginRight: \"0.3rem\",\n    backgroundColor: \"white\",\n    borderRadius: \"4px\"\n  },\n  submitButton: {\n    padding: \"8px 22px\",\n    fontSize: \"0.9375rem\",\n    minWidth: \"64px\",\n    backgroundColor: \"blue\",\n    // transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,border 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n\n    /* font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif; */\n\n    /* font-weight: 500; */\n    lineHeight: \"1.75\",\n    borderRadius: \"4px\"\n  }\n}));\nconst blankVitals = {\n  time: \"\",\n  LOR: \"Not Reported\",\n  HR: \"Not Reported\",\n  RR: \"Not Reported\",\n  BPs: \"Not Reported\",\n  BPd: \"Not Reported\",\n  oxygen: \"Not Reported\"\n}; // setVitals({ ...vitals, time: dayjs().format(\"HH:mm:ss\") })\n\nfunction VitalsForm(props) {\n  _s();\n\n  const classes = useStyles();\n  const {\n    id\n  } = useParams();\n  const [vitals, setVitals] = useState(blankVitals);\n\n  function handleVitalsInput(event) {\n    // console.log(vitals.LOR)\n    if (vitals.time === \"\") {\n      setVitals({ ...vitals,\n        time: dayjs().format(\"HH:mm:ss\")\n      });\n    } else {\n      const {\n        name,\n        value\n      } = event.target;\n      setVitals({ ...vitals,\n        [name]: value\n      });\n    }\n  }\n\n  ; // function updateTime() {\n  // }\n  // function handleSubmit(event, data) {\n  //     // console.log(data)\n  //     props.onSubmit(event, data)\n  // }\n\n  function clearForm(target) {\n    props.clearForm(target);\n  }\n\n  function handleVitalsSubmit(event, data) {\n    // let form\n    event.preventDefault(); // if (event.target.parentElement.parentElement.parentElement === )\n    // console.log(event.target.parentElement.parentElement.nodeName)\n    // event.target.parentElement.parentElement.parentElement.reset()\n    // console.log(data)\n\n    if (data.HR !== \"Not Reported\") {\n      API.updateVitals(id, data).then(clearForm(event.target)).then(socket.emit(\"update\")); // .then(event.target.parentElement.parentElement.parentElement.reset())\n      // .then(console.log(event.target.parentElement.parentElement.parentElement))\n      // .then(setVitals(blankVitals))\n      // .then(loadById(id))\n    } // .exec(loadById(id))\n    // console.log(vitals)\n    // console.log(\"here\")\n\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.root,\n    noValidate: true,\n    autoComplete: \"off\",\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      className: classes.formgroup,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          className: classes.input,\n          id: \"outlined-basic\",\n          label: \"LOR\",\n          variant: \"outlined\",\n          name: \"LOR\",\n          onChange: handleVitalsInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          className: classes.input,\n          id: \"outlined-basic\",\n          label: \"Oxygen Sat\",\n          variant: \"outlined\",\n          name: \"oxygen\",\n          onChange: handleVitalsInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          className: classes.input,\n          id: \"outlined-basic\",\n          label: \"Heart Rate\",\n          variant: \"outlined\",\n          name: \"HR\",\n          onChange: handleVitalsInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          className: classes.input,\n          id: \"outlined-basic\",\n          label: \"Repiratory Rate\",\n          variant: \"outlined\",\n          name: \"RR\",\n          onChange: handleVitalsInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          className: classes.input,\n          id: \"outlined-basic\",\n          label: \"BP systolic\",\n          variant: \"outlined\",\n          name: \"BPs\",\n          onChange: handleVitalsInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          className: classes.input,\n          id: \"outlined-basic\",\n          label: \"BP diastolic\",\n          variant: \"outlined\",\n          name: \"BPd\",\n          onChange: handleVitalsInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        size: \"large\",\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: event => handleVitalsSubmit(event, vitals),\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 9\n  }, this); // return (\n  //     <Form onSubmit={props.onSubmit}>\n  //         <Form.Group>\n  //             <Form.Label>Heart Rate</Form.Label>\n  //             <Form.Control\n  //                 name=\"HR\"\n  //                 placeholder=\"Heart Rate\"\n  //                 type=\"number\"\n  //                 onChange={props.onChange}></Form.Control>\n  //         </Form.Group>\n  //         <Form.Group>\n  //             <Form.Label>Respiratory Rate</Form.Label>\n  //             <Form.Control\n  //                 name=\"RR\"\n  //                 placeholder=\"Respiratory Rate\"\n  //                 type=\"number\"\n  //                 onChange={props.onChange}></Form.Control>\n  //         </Form.Group>\n  //         <Form.Group>\n  //             <Form.Label>BP Systolic</Form.Label>\n  //             <Form.Control\n  //                 name=\"BPs\"\n  //                 placeholder=\"Systolic\"\n  //                 type=\"number\"\n  //                 onChange={props.onChange}></Form.Control>\n  //         </Form.Group>\n  //         <Form.Group>\n  //             <Form.Label>BP Diastolic</Form.Label>\n  //             <Form.Control\n  //                 name=\"BPd\"\n  //                 placeholder=\"Diastolic\"\n  //                 type=\"number\"\n  //                 onChange={props.onChange}></Form.Control>\n  //         </Form.Group>\n  //         <Form.Group>\n  //             <Form.Label>Oxygen Saturation</Form.Label>\n  //             <Form.Control\n  //                 name=\"oxygen\"\n  //                 placeholder=\"O2 sat\"\n  //                 type=\"number\"\n  //                 onChange={props.onChange}></Form.Control>\n  //         </Form.Group>\n  //         <Button \n  //         onClick={props.onSubmit}\n  //         variant=\"primary\" \n  //         type=\"submit\">\n  //             Submit\n  //         </Button>\n  //     </Form>\n  // )\n}\n\n_s(VitalsForm, \"mDIaslZVeQQXTtkUEVDkLUEDWM0=\", false, function () {\n  return [useStyles, useParams];\n});\n\n_c = VitalsForm;\nexport default VitalsForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"VitalsForm\");","map":{"version":3,"sources":["/Users/allen/GitHub/casrep/client/src/components/Vitals/VitalsForm.js"],"names":["React","useState","makeStyles","TextField","Grid","Button","Typography","useParams","API","io","socket","dayjs","require","useStyles","theme","root","margin","spacing","width","formgroup","display","input","marginBottom","marginRight","backgroundColor","borderRadius","submitButton","padding","fontSize","minWidth","lineHeight","blankVitals","time","LOR","HR","RR","BPs","BPd","oxygen","VitalsForm","props","classes","id","vitals","setVitals","handleVitalsInput","event","format","name","value","target","clearForm","handleVitalsSubmit","data","preventDefault","updateVitals","then","emit"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\n// import { Form, Button } from \"react-bootstrap\"\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid'\nimport Button from '@material-ui/core/Button'\nimport { Typography } from \"@material-ui/core\";\n\nimport { useParams } from \"react-router-dom\"\nimport API from \"../../utils/API\"\n\nimport io from \"socket.io-client\"\nconst socket = io()\n\nconst dayjs = require(\"dayjs\")\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& > *': {\n            margin: theme.spacing(1),\n            width: '25ch',\n        },\n    },\n    formgroup: {\n        display: \"inline\"\n    },\n    input: {\n        marginBottom: \"0.3rem\",\n        marginRight: \"0.3rem\",\n        backgroundColor:\"white\",\n        borderRadius: \"4px\"\n    },\n    submitButton: {\n        padding: \"8px 22px\",\n        fontSize: \"0.9375rem\",\n        minWidth: \"64px\",\n        backgroundColor:\"blue\",\n        // transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,border 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n        /* font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif; */\n        /* font-weight: 500; */\n        lineHeight: \"1.75\",\n        borderRadius: \"4px\",\n    }\n}));\n\nconst blankVitals = {\n    time: \"\",\n    LOR: \"Not Reported\",\n    HR: \"Not Reported\",\n    RR: \"Not Reported\",\n    BPs: \"Not Reported\",\n    BPd: \"Not Reported\",\n    oxygen: \"Not Reported\",\n}\n\n// setVitals({ ...vitals, time: dayjs().format(\"HH:mm:ss\") })\n\n\n\nfunction VitalsForm(props) {\n    const classes = useStyles();\n    const { id } = useParams()\n\n    const [vitals, setVitals] = useState(blankVitals)\n\n    function handleVitalsInput(event) {\n        // console.log(vitals.LOR)\n        if (vitals.time === \"\") {\n            setVitals({ ...vitals, time: dayjs().format(\"HH:mm:ss\") })\n        } else {\n            const { name, value } = event.target;\n            setVitals({ ...vitals, [name]: value })\n        }\n    };\n\n    // function updateTime() {\n    // }\n\n    // function handleSubmit(event, data) {\n    //     // console.log(data)\n    //     props.onSubmit(event, data)\n    // }\n\n    function clearForm (target){\n        props.clearForm(target)\n    }\n    function handleVitalsSubmit(event, data) {\n        // let form\n        event.preventDefault();\n        // if (event.target.parentElement.parentElement.parentElement === )\n        // console.log(event.target.parentElement.parentElement.nodeName)\n        // event.target.parentElement.parentElement.parentElement.reset()\n        // console.log(data)\n        if (data.HR !== \"Not Reported\") {\n            API.updateVitals(id, data)\n                .then(clearForm(event.target))\n                .then(socket.emit(\"update\"))\n            // .then(event.target.parentElement.parentElement.parentElement.reset())\n            // .then(console.log(event.target.parentElement.parentElement.parentElement))\n            // .then(setVitals(blankVitals))\n            // .then(loadById(id))\n        }\n        // .exec(loadById(id))\n        // console.log(vitals)\n        // console.log(\"here\")\n    }\n\n    return (\n        <form className={classes.root} noValidate autoComplete=\"off\">\n            <Grid container className={classes.formgroup}>\n                <Grid item xs={12}>\n                    <TextField\n                        className={classes.input}\n                        id=\"outlined-basic\"\n                        label=\"LOR\"\n                        variant=\"outlined\"\n                        name=\"LOR\"\n                        onChange={handleVitalsInput} />\n                    <TextField\n                        className={classes.input}\n                        id=\"outlined-basic\"\n                        label=\"Oxygen Sat\"\n                        variant=\"outlined\"\n                        name=\"oxygen\"\n                        onChange={handleVitalsInput} />\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                        className={classes.input}\n                        id=\"outlined-basic\"\n                        label=\"Heart Rate\"\n                        variant=\"outlined\"\n                        name=\"HR\"\n                        onChange={handleVitalsInput} />\n                    <TextField\n                        className={classes.input}\n                        id=\"outlined-basic\"\n                        label=\"Repiratory Rate\"\n                        variant=\"outlined\"\n                        name=\"RR\"\n                        onChange={handleVitalsInput} />\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                        className={classes.input}\n                        id=\"outlined-basic\"\n                        label=\"BP systolic\"\n                        variant=\"outlined\"\n                        name=\"BPs\"\n                        onChange={handleVitalsInput} />\n                    <TextField\n                        className={classes.input}\n                        id=\"outlined-basic\"\n                        label=\"BP diastolic\"\n                        variant=\"outlined\"\n                        name=\"BPd\"\n                        onChange={handleVitalsInput} />\n\n                </Grid>\n                {/* <Typography className={classes.submitButton}>SUBMIT</Typography> */}\n                <Button size=\"large\" variant=\"contained\" color=\"primary\" onClick={(event) => handleVitalsSubmit(event, vitals)}>Submit</Button>\n            </Grid>\n        </form >\n    );\n    // return (\n    //     <Form onSubmit={props.onSubmit}>\n    //         <Form.Group>\n    //             <Form.Label>Heart Rate</Form.Label>\n    //             <Form.Control\n    //                 name=\"HR\"\n    //                 placeholder=\"Heart Rate\"\n    //                 type=\"number\"\n    //                 onChange={props.onChange}></Form.Control>\n    //         </Form.Group>\n    //         <Form.Group>\n    //             <Form.Label>Respiratory Rate</Form.Label>\n    //             <Form.Control\n    //                 name=\"RR\"\n    //                 placeholder=\"Respiratory Rate\"\n    //                 type=\"number\"\n    //                 onChange={props.onChange}></Form.Control>\n    //         </Form.Group>\n    //         <Form.Group>\n    //             <Form.Label>BP Systolic</Form.Label>\n    //             <Form.Control\n    //                 name=\"BPs\"\n    //                 placeholder=\"Systolic\"\n    //                 type=\"number\"\n    //                 onChange={props.onChange}></Form.Control>\n    //         </Form.Group>\n    //         <Form.Group>\n    //             <Form.Label>BP Diastolic</Form.Label>\n    //             <Form.Control\n    //                 name=\"BPd\"\n    //                 placeholder=\"Diastolic\"\n    //                 type=\"number\"\n    //                 onChange={props.onChange}></Form.Control>\n    //         </Form.Group>\n    //         <Form.Group>\n    //             <Form.Label>Oxygen Saturation</Form.Label>\n    //             <Form.Control\n    //                 name=\"oxygen\"\n    //                 placeholder=\"O2 sat\"\n    //                 type=\"number\"\n    //                 onChange={props.onChange}></Form.Control>\n    //         </Form.Group>\n    //         <Button \n    //         onClick={props.onSubmit}\n    //         variant=\"primary\" \n    //         type=\"submit\">\n    //             Submit\n    //         </Button>\n    //     </Form>\n    // )\n}\n\nexport default VitalsForm"]},"metadata":{},"sourceType":"module"}