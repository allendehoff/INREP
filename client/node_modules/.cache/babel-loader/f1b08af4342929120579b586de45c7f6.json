{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/allen/GitHub/casrep/client/src/pages/CurrentPatient.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\"; // import { Component } from \"react\"\n\nimport { Form, Container, Row, Col } from \"react-bootstrap\";\nimport Card from \"react-bootstrap/Card\";\nimport { useParams } from \"react-router-dom\";\nimport API from \"../utils/API\";\n\nfunction CurrentPatient() {\n  _s();\n\n  const [entries, setEntries] = useState(1);\n  const [ptInfo, setPtInfo] = useState({});\n  const [update, setUpdate] = useState(\"\");\n  const {\n    id\n  } = useParams();\n  let idOnly = {\n    id\n  }.id.slice(3);\n  useEffect(() => {\n    // console.log(id)\n    loadById(id); // console.log(ptInfo)\n  }, []); // componentDidMount\n\n  function loadById(id) {\n    // console.log(id)\n    API.findById(id).then(ptData => {\n      setPtInfo(ptData);\n    }); // .then(\n    //     console.log(ptInfo)\n    // )\n  }\n\n  function handleInputChange(event) {\n    // console.log(event.target)\n    const {\n      name,\n      value\n    } = event.target;\n    const updateNumber = `update${entries}`;\n    setUpdate({\n      [updateNumber]: value\n    }); // setUpdate({`update${entries}`: value})\n    // setPtInfo({ ...ptInfo, [`update${entries}`]: value })\n    // console.log(ptInfo)\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault(); // console.log(event.target.input)\n    // console.log(ptInfo.data._id)\n\n    API.updateById(id, update);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      className: \"jumbotron\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"this is the page for patient ID: \", id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        children: \"New Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Enter your message to update pt report:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            name: \"newMessage\",\n            type: \"text\",\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }, this), ptInfo.data ? /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        children: [\"Unit Responding: \", ptInfo.data.respondingUnit]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: [\"ETA: \", ptInfo.data.ETA]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [\"Last Update: \", ptInfo.data.updatedAt]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CurrentPatient, \"RsNwyK1imr57JJdGH2wD+V91swo=\", false, function () {\n  return [useParams];\n});\n\n_c = CurrentPatient;\nexport default CurrentPatient;\n\nvar _c;\n\n$RefreshReg$(_c, \"CurrentPatient\");","map":{"version":3,"sources":["/Users/allen/GitHub/casrep/client/src/pages/CurrentPatient.js"],"names":["React","useState","useEffect","Form","Container","Row","Col","Card","useParams","API","CurrentPatient","entries","setEntries","ptInfo","setPtInfo","update","setUpdate","id","idOnly","slice","loadById","findById","then","ptData","handleInputChange","event","name","value","target","updateNumber","handleSubmit","preventDefault","updateById","data","respondingUnit","ETA","updatedAt"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\"\n// import { Component } from \"react\"\nimport { Form, Container, Row, Col } from \"react-bootstrap\"\nimport Card from \"react-bootstrap/Card\"\n\n\nimport { useParams } from \"react-router-dom\"\nimport API from \"../utils/API\"\n\n\nfunction CurrentPatient() {\n    const [entries, setEntries] = useState(1)\n\n    const [ptInfo, setPtInfo] = useState({})\n\n    const [update, setUpdate] = useState(\"\")\n\n    const { id } = useParams()\n    let idOnly = ({ id }.id).slice(3)\n\n    useEffect(() => {\n\n        // console.log(id)\n        loadById(id)\n        // console.log(ptInfo)\n    }, [])\n\n    // componentDidMount\n\n    function loadById(id) {\n        // console.log(id)\n        API.findById(id)\n            .then((ptData) => {\n                setPtInfo(ptData)\n            })\n        // .then(\n        //     console.log(ptInfo)\n\n        // )\n    }\n\n    function handleInputChange(event) {\n        // console.log(event.target)\n        const { name, value } = event.target\n        const updateNumber = `update${entries}`\n        setUpdate({ [updateNumber]: value })\n        // setUpdate({`update${entries}`: value})\n        // setPtInfo({ ...ptInfo, [`update${entries}`]: value })\n        // console.log(ptInfo)\n    }\n    function handleSubmit(event) {\n        event.preventDefault()\n        // console.log(event.target.input)\n        // console.log(ptInfo.data._id)\n        API.updateById(id, update)\n    }\n    return (\n        <Container>\n            <Row className=\"jumbotron\">\n                <h1>this is the page for patient ID: {id}</h1>\n\n            </Row>\n            {/* <Row className=\"justify-content-center\"> */}\n                <Card>\n                    <Card.Header>New Message</Card.Header>\n                    <Form onSubmit={handleSubmit}>\n                        <Form.Group>\n                            <Form.Label>Enter your message to update pt report:</Form.Label>\n                            <Form.Control\n                                name=\"newMessage\"\n                                type=\"text\"\n                                onChange={handleInputChange} />\n                        </Form.Group>\n                    </Form>\n                </Card>\n            {/* </Row> */}\n            {/* <Row className=\"justify-content-center\" style={{ paddingTop: \"1rem\" }}> */}\n                {ptInfo.data ? (\n                    <Card>\n                        <Card.Header>\n                            Unit Responding: {ptInfo.data.respondingUnit}\n                        </Card.Header>\n                        <Card.Body>\n                            <Card.Title>ETA: {ptInfo.data.ETA}</Card.Title>\n                            <Card.Text>\n                                Last Update: {ptInfo.data.updatedAt}\n                            </Card.Text>\n                        </Card.Body>\n                    </Card>\n                ) : (<h3>Error</h3>)\n                }\n\n            {/* </Row> */}\n        </Container>\n    )\n}\n\nexport default CurrentPatient"]},"metadata":{},"sourceType":"module"}