{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/allen/GitHub/casrep/client/src/components/PatientCard/PatientCard.js\";\nimport React from \"react\";\nimport { Card, Accordion } from \"react-bootstrap\"; // import Moment from 'react-moment';\n// import 'moment-timezone';\n\nimport VitalsTable from \"../Vitals/VitalsTable\";\nimport PatientInformationTable from \"../PatientInformation/PatientInformationTable\";\nimport \"./ptCardStyle.css\";\n\nfunction PatientCard(props) {\n  // useEffect(() => {\n  // }, [])\n  let warningKeys = [];\n\n  function fetchTrueWarnings(obj) {\n    // await loadById(id)\n    for (const property in obj) {\n      if (obj[property] === true) {\n        warningKeys.push(property);\n      } // return warningKeys\n\n    } // console.log(warningKeys)\n\n  } // console.log(props.patient.criticalWarn)\n\n\n  if (props.patient.criticalWarn !== undefined) {\n    fetchTrueWarnings(JSON.parse(props.patient.criticalWarn));\n  } // const patientInfoObject = JSON.parse(props.patient.patientInformation)\n\n\n  return (\n    /*#__PURE__*/\n    // <div>\n    // </div>\n    _jsxDEV(Card, {\n      style: {\n        marginBottom: \"1rem\",\n        paddingBottom: \"1rem\",\n        minWidth: \"80%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        children: [\"Unit Responding: \", props.patient.respondingUnit, \" | ETA: \", props.patient.ETA]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: [\"Critical Warnings:\", /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              justifyContent: \"space-around\",\n              paddingTop: \"1rem\"\n            },\n            children: warningKeys.map(warning => {\n              if (warning !== \"pending\") {\n                return /*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    backgroundColor: \"red\",\n                    color: \"white\",\n                    borderRadius: \"2px\",\n                    padding: \"0.5rem\"\n                  },\n                  children: warning\n                }, warning, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 48,\n                  columnNumber: 40\n                }, this);\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Accordion, {\n          defaultActiveKey: \"0\",\n          children: [/*#__PURE__*/_jsxDEV(Accordion.Toggle, {\n            eventKey: \"vitals\",\n            className: \"accordionButton\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"accBtnSpan\",\n              children: [\"Vitals \", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \">\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 125\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 89\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Accordion.Collapse, {\n            eventKey: \"vitals\",\n            children: /*#__PURE__*/_jsxDEV(VitalsTable, {\n              patient: props.patient\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Accordion, {\n          defaultActiveKey: \"0\",\n          children: [/*#__PURE__*/_jsxDEV(Accordion.Toggle, {\n            eventKey: \"patientInformation\",\n            className: \"accordionButton\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"accBtnSpan\",\n              children: [\"Patient Information \", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \">\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 74\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Accordion.Collapse, {\n            eventKey: \"patientInformation\",\n            children: /*#__PURE__*/_jsxDEV(PatientInformationTable, {\n              patientObj: props.patient.patientInformation\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)\n  );\n}\n\n_c = PatientCard;\nexport default PatientCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PatientCard\");","map":{"version":3,"sources":["/Users/allen/GitHub/casrep/client/src/components/PatientCard/PatientCard.js"],"names":["React","Card","Accordion","VitalsTable","PatientInformationTable","PatientCard","props","warningKeys","fetchTrueWarnings","obj","property","push","patient","criticalWarn","undefined","JSON","parse","marginBottom","paddingBottom","minWidth","respondingUnit","ETA","display","justifyContent","paddingTop","map","warning","backgroundColor","color","borderRadius","padding","patientInformation"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Card, Accordion } from \"react-bootstrap\"\n// import Moment from 'react-moment';\n// import 'moment-timezone';\n\nimport VitalsTable from \"../Vitals/VitalsTable\"\nimport PatientInformationTable from \"../PatientInformation/PatientInformationTable\"\n\nimport \"./ptCardStyle.css\"\n\nfunction PatientCard(props) {\n    // useEffect(() => {\n\n    // }, [])\n\n    let warningKeys = []\n    function fetchTrueWarnings(obj) {\n        // await loadById(id)\n        for (const property in obj) {\n            if (obj[property] === true) {\n                warningKeys.push(property)\n            }\n            // return warningKeys\n        }\n        // console.log(warningKeys)\n    }\n    // console.log(props.patient.criticalWarn)\n    if (props.patient.criticalWarn !== undefined) {\n        fetchTrueWarnings(JSON.parse(props.patient.criticalWarn))\n    }\n\n    // const patientInfoObject = JSON.parse(props.patient.patientInformation)\n\n    return (\n        // <div>\n\n        // </div>\n        <Card style={{ marginBottom: \"1rem\", paddingBottom: \"1rem\", minWidth: \"80%\" }}>\n            <Card.Header>\n                Unit Responding: {props.patient.respondingUnit} |\n                ETA: {props.patient.ETA}\n            </Card.Header>\n            <Card.Body>\n                <Card.Title>Critical Warnings:\n                    <div style={{ display: \"flex\", justifyContent: \"space-around\", paddingTop: \"1rem\" }}>\n                        {warningKeys.map(warning => {\n                            if (warning !== \"pending\") {\n                                return <p key={warning} style={{ backgroundColor: \"red\", color: \"white\", borderRadius: \"2px\", padding: \"0.5rem\" }}>{warning}</p>\n                            }\n                        }\n                        )}\n                    </div>\n                </Card.Title>\n                {/* <Card.Text>ETA: {props.patient.ETA}</Card.Text> */}\n                <Accordion defaultActiveKey=\"0\">\n                        <Accordion.Toggle eventKey=\"vitals\" className=\"accordionButton\"><span className=\"accBtnSpan\">Vitals <span>&gt;</span></span></Accordion.Toggle>\n                        <Accordion.Collapse eventKey=\"vitals\">\n                            <VitalsTable patient={props.patient} />\n                        </Accordion.Collapse>\n                    {/* </Card> */}\n                </Accordion>\n                <Accordion defaultActiveKey=\"0\">\n                    <Accordion.Toggle eventKey=\"patientInformation\" className=\"accordionButton\">\n                        <span className=\"accBtnSpan\">Patient Information <span>&gt;</span></span>\n                    </Accordion.Toggle>\n                    <Accordion.Collapse eventKey=\"patientInformation\">\n                        <PatientInformationTable patientObj={props.patient.patientInformation} />\n                    </Accordion.Collapse>\n                </Accordion>\n            </Card.Body>\n        </Card>\n    )\n}\n\nexport default PatientCard"]},"metadata":{},"sourceType":"module"}