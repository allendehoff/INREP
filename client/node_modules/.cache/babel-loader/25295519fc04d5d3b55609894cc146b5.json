{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/allen/GitHub/casrep/client/src/pages/CurrentPatient.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\"; // import { Component } from \"react\"\n\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport Card from \"react-bootstrap/Card\"; // import Moment from 'react-moment';\n// import 'moment-timezone';\n\nimport EtaUpdateButton from \"../components/EtaUpdate/EtaUpdateButton\";\nimport EtaUpdate from \"../components/EtaUpdate/EtaUpdate\";\nimport PatientCard from \"../components/PatientCard/PatientCard\";\nimport VitalsForm from \"../components/Vitals/VitalsForm\";\nimport NewVitals from \"../components/Vitals/NewVitals\";\nimport CriticalWarnings from \"../components/CriticalWarning/CriticalWarnings\";\nimport CriticalWarnSelect from \"../components/CriticalWarning/CritWarnSelect\";\nimport UpdateInformation from \"../components/PatientInformation/UpdateInformation\";\nimport PatientInformationForm from \"../components/PatientInformation/PatientInformationForm\";\nimport { useParams } from \"react-router-dom\";\nimport API from \"../utils/API\";\nimport io from \"socket.io-client\";\nconst socket = io();\n\nconst dayjs = require(\"dayjs\");\n\nfunction CurrentPatient() {\n  _s();\n\n  // const [entries, setEntries] = useState(1)\n  const [ptInfo, setPtInfo] = useState({});\n  const blankVitals = {\n    time: \"\",\n    HR: \"Not Reported\",\n    RR: \"Not Reported\",\n    BPs: \"Not Reported\",\n    BPd: \"Not Reported\",\n    oxygen: \"Not Reported\"\n  };\n  const [vitals, setVitals] = useState(blankVitals);\n  const criticalsAllFalse = {\n    pending: false,\n    CPR: false,\n    stroke: false,\n    trauma1: false,\n    trauma2: false,\n    intubated: false,\n    fallWithThinners: false\n  };\n  const [criticalWarnings, setCriticalWarning] = useState(criticalsAllFalse);\n  const [eta, setEta] = useState({\n    pending: false,\n    time: \"\"\n  });\n  const [patientInformation, setPatientInformation] = useState({\n    pending: false,\n    age: \"Not Reported\",\n    sex: \"Not Reported\",\n    chiefComplaint: \"Not Reported\",\n    moiHpi: \"Not Reported\",\n    oxygenTx: \"Not Reported\",\n    from: \"Not Reported\"\n  });\n  const {\n    id\n  } = useParams(); // let idOnly = ({ id }.id).slice(3)\n\n  useEffect(() => {\n    // console.log(id)\n    loadById(id); // console.log(ptInfo)\n  }, []);\n\n  function loadById(id) {\n    // console.log(id)\n    API.findById(id).then(ptData => {\n      setPtInfo(ptData);\n    });\n  }\n\n  function handleVitalsInput(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setVitals({ ...vitals,\n      [name]: value\n    });\n  }\n\n  ;\n\n  function initVitals() {\n    // console.log(ptInfo)\n    setVitals({ ...vitals,\n      time: dayjs().format(\"HH:mm:ss\")\n    });\n  }\n\n  function handleVitalsSubmit(event) {\n    event.preventDefault();\n\n    if (vitals.HR !== \"Not Reported\") {\n      API.updateVitals(id, vitals).then(socket.emit(\"update\")).then(setVitals(blankVitals)).then(loadById(id));\n    } // .exec(loadById(id))\n    // console.log(vitals)\n    // console.log(\"here\")\n\n  }\n\n  function initCriticals() {\n    setCriticalWarning({ ...criticalWarnings,\n      pending: true\n    });\n  }\n\n  function handleCriticalsInput(event) {\n    // console.log(event.target.checked)\n    const {\n      name,\n      checked\n    } = event.target;\n    setCriticalWarning({ ...criticalWarnings,\n      [name]: checked\n    });\n  }\n\n  function handleCriticalsSubmit(event) {\n    event.preventDefault();\n    setCriticalWarning({ ...criticalWarnings,\n      pending: false\n    }); // console.log(criticalWarnings)\n    // const warningsString = JSON.stringify(criticalWarnings)\n    // console.log(warningsString)\n\n    API.updateCriticalWarnings(id, criticalWarnings) // .then(setCriticalWarning(criticalsAllFalse))\n    // .then(setCriticalWarning({...criticalWarnings}))\n    .then(socket.emit(\"update\")).then(loadById(id));\n  }\n\n  function initEtaUpdate() {\n    setEta({ ...eta,\n      pending: true\n    });\n  }\n\n  function handleEtaInput(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setEta({ ...eta,\n      [name]: value\n    });\n  }\n\n  function handleEtaSubmit(event) {\n    event.preventDefault();\n    API.updateETA(id, {\n      time: eta.time\n    }).then(socket.emit(\"update\")).then(setEta({\n      pending: false\n    })).then(loadById(id));\n  }\n\n  function initPatientInformation() {\n    setPatientInformation({ ...patientInformation,\n      pending: true\n    });\n  }\n\n  function handlePtInformationChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setPatientInformation({ ...patientInformation,\n      [name]: value\n    });\n  }\n\n  function handlePtInformationSubmit(event) {\n    event.preventDefault();\n    API.updatePtInformation(id, patientInformation).then(socket.emit(\"update\")).then(setPatientInformation({\n      pending: false\n    })).then(loadById(id));\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    style: {\n      paddingTop: \"2rem\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        disply: \"flex\",\n        textAlign: \"center\",\n        padding: \"1rem 0 2rem 0\",\n        borderBottom: \"5px solid #FFD400\",\n        marginBottom: \"3rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          color: \"#FFD400\"\n        },\n        children: \"Welcome EMS User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        style: {\n          color: \"#B7D5D4\"\n        },\n        children: \"Enter updates below to keep the hospital informed about youe patient\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: \"ETA:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: eta.pending ? /*#__PURE__*/_jsxDEV(EtaUpdate, {\n              onChange: handleEtaInput,\n              onSubmit: handleEtaSubmit\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 37\n            }, this) : /*#__PURE__*/_jsxDEV(EtaUpdateButton, {\n              onClick: initEtaUpdate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 25\n        }, this), criticalWarnings.pending ? /*#__PURE__*/_jsxDEV(CriticalWarnSelect // style={{ width: \"80%\" }}\n        , {\n          onChange: handleCriticalsInput,\n          onSubmit: handleCriticalsSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(CriticalWarnings // style={{ width: \"80%\" }}\n        , {\n          onClick: initCriticals // loadPtInfo={loadById}\n          // warnings={ptInfo}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            width: \"80%\",\n            marginBottom: \"1rem\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: \"New Vitals\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: vitals.time ? /*#__PURE__*/_jsxDEV(VitalsForm, {\n              onChange: handleVitalsInput,\n              onSubmit: handleVitalsSubmit\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 37\n            }, this) : /*#__PURE__*/_jsxDEV(NewVitals, {\n              onClick: initVitals\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: \"Patient Information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: patientInformation.pending ? /*#__PURE__*/_jsxDEV(PatientInformationForm, {\n              onChange: handlePtInformationChange,\n              onSubmit: handlePtInformationSubmit\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 37\n            }, this) : /*#__PURE__*/_jsxDEV(UpdateInformation, {\n              onClick: initPatientInformation\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: ptInfo.data ? /*#__PURE__*/_jsxDEV(PatientCard, {\n          patient: ptInfo.data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 26\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CurrentPatient, \"IM0KkfJm8QsoPFhPNksnn09wdUk=\", false, function () {\n  return [useParams];\n});\n\n_c = CurrentPatient;\nexport default CurrentPatient;\n\nvar _c;\n\n$RefreshReg$(_c, \"CurrentPatient\");","map":{"version":3,"sources":["/Users/allen/GitHub/casrep/client/src/pages/CurrentPatient.js"],"names":["React","useState","useEffect","Container","Row","Col","Card","EtaUpdateButton","EtaUpdate","PatientCard","VitalsForm","NewVitals","CriticalWarnings","CriticalWarnSelect","UpdateInformation","PatientInformationForm","useParams","API","io","socket","dayjs","require","CurrentPatient","ptInfo","setPtInfo","blankVitals","time","HR","RR","BPs","BPd","oxygen","vitals","setVitals","criticalsAllFalse","pending","CPR","stroke","trauma1","trauma2","intubated","fallWithThinners","criticalWarnings","setCriticalWarning","eta","setEta","patientInformation","setPatientInformation","age","sex","chiefComplaint","moiHpi","oxygenTx","from","id","loadById","findById","then","ptData","handleVitalsInput","event","name","value","target","initVitals","format","handleVitalsSubmit","preventDefault","updateVitals","emit","initCriticals","handleCriticalsInput","checked","handleCriticalsSubmit","updateCriticalWarnings","initEtaUpdate","handleEtaInput","handleEtaSubmit","updateETA","initPatientInformation","handlePtInformationChange","handlePtInformationSubmit","updatePtInformation","paddingTop","disply","textAlign","padding","borderBottom","marginBottom","color","width","data"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\"\n// import { Component } from \"react\"\nimport { Container, Row, Col } from \"react-bootstrap\"\nimport Card from \"react-bootstrap/Card\"\n// import Moment from 'react-moment';\n// import 'moment-timezone';\n\nimport EtaUpdateButton from \"../components/EtaUpdate/EtaUpdateButton\"\nimport EtaUpdate from \"../components/EtaUpdate/EtaUpdate\"\nimport PatientCard from \"../components/PatientCard/PatientCard\"\nimport VitalsForm from \"../components/Vitals/VitalsForm\"\nimport NewVitals from \"../components/Vitals/NewVitals\"\nimport CriticalWarnings from \"../components/CriticalWarning/CriticalWarnings\"\nimport CriticalWarnSelect from \"../components/CriticalWarning/CritWarnSelect\"\nimport UpdateInformation from \"../components/PatientInformation/UpdateInformation\"\nimport PatientInformationForm from \"../components/PatientInformation/PatientInformationForm\"\n\nimport { useParams } from \"react-router-dom\"\nimport API from \"../utils/API\"\n\n\nimport io from \"socket.io-client\"\nconst socket = io()\n\nconst dayjs = require(\"dayjs\")\n\nfunction CurrentPatient() {\n    // const [entries, setEntries] = useState(1)\n\n    const [ptInfo, setPtInfo] = useState({})\n\n    const blankVitals = {\n        time: \"\",\n        HR: \"Not Reported\",\n        RR: \"Not Reported\",\n        BPs: \"Not Reported\",\n        BPd: \"Not Reported\",\n        oxygen: \"Not Reported\",\n    }\n    const [vitals, setVitals] = useState(blankVitals)\n\n\n    const criticalsAllFalse = {\n        pending: false,\n        CPR: false,\n        stroke: false,\n        trauma1: false,\n        trauma2: false,\n        intubated: false,\n        fallWithThinners: false\n    }\n    const [criticalWarnings, setCriticalWarning] = useState(criticalsAllFalse)\n\n    const [eta, setEta] = useState({\n        pending: false,\n        time: \"\"\n    })\n\n    const [patientInformation, setPatientInformation] = useState({\n        pending: false,\n        age: \"Not Reported\",\n        sex: \"Not Reported\",\n        chiefComplaint: \"Not Reported\",\n        moiHpi: \"Not Reported\",\n        oxygenTx: \"Not Reported\",\n        from: \"Not Reported\"\n    })\n\n    const { id } = useParams()\n    // let idOnly = ({ id }.id).slice(3)\n\n    useEffect(() => {\n\n        // console.log(id)\n        loadById(id)\n        // console.log(ptInfo)\n    }, [])\n\n    function loadById(id) {\n        // console.log(id)\n        API.findById(id)\n            .then((ptData) => {\n                setPtInfo(ptData)\n            })\n    }\n\n    function handleVitalsInput(event) {\n        const { name, value } = event.target;\n        setVitals({ ...vitals, [name]: value })\n    };\n\n    function initVitals() {\n        // console.log(ptInfo)\n        setVitals({ ...vitals, time: dayjs().format(\"HH:mm:ss\") })\n    }\n\n    function handleVitalsSubmit(event) {\n        event.preventDefault();\n        if (vitals.HR !== \"Not Reported\") {\n            API.updateVitals(id, vitals)\n                .then(socket.emit(\"update\"))\n                .then(setVitals(blankVitals))\n                .then(loadById(id))\n        }\n        // .exec(loadById(id))\n        // console.log(vitals)\n        // console.log(\"here\")\n    }\n\n    function initCriticals() {\n        setCriticalWarning({ ...criticalWarnings, pending: true })\n    }\n\n    function handleCriticalsInput(event) {\n        // console.log(event.target.checked)\n        const { name, checked } = event.target\n        setCriticalWarning({ ...criticalWarnings, [name]: checked })\n    }\n\n    function handleCriticalsSubmit(event) {\n        event.preventDefault()\n        setCriticalWarning({ ...criticalWarnings, pending: false })\n        // console.log(criticalWarnings)\n        // const warningsString = JSON.stringify(criticalWarnings)\n        // console.log(warningsString)\n        API.updateCriticalWarnings(id, criticalWarnings)\n            // .then(setCriticalWarning(criticalsAllFalse))\n            // .then(setCriticalWarning({...criticalWarnings}))\n            .then(socket.emit(\"update\"))\n            .then(loadById(id))\n    }\n\n    function initEtaUpdate() {\n        setEta({ ...eta, pending: true })\n    }\n\n    function handleEtaInput(event) {\n        const { name, value } = event.target\n        setEta({ ...eta, [name]: value })\n    }\n\n    function handleEtaSubmit(event) {\n        event.preventDefault()\n        API.updateETA(id, { time: eta.time })\n            .then(socket.emit(\"update\"))\n            .then(setEta({ pending: false }))\n            .then(loadById(id))\n    }\n\n    function initPatientInformation() {\n        setPatientInformation({ ...patientInformation, pending: true })\n    }\n\n    function handlePtInformationChange(event) {\n        const { name, value } = event.target\n        setPatientInformation({ ...patientInformation, [name]: value })\n    }\n\n    function handlePtInformationSubmit(event) {\n        event.preventDefault()\n        API.updatePtInformation(id, patientInformation)\n            .then(socket.emit(\"update\"))\n            .then(setPatientInformation({ pending: false }))\n            .then(loadById(id))\n    }\n\n    return (\n        <Container style={{ paddingTop: \"2rem\" }}>\n            <div\n                style={{ disply: \"flex\", textAlign: \"center\", padding: \"1rem 0 2rem 0\", borderBottom: \"5px solid #FFD400\", marginBottom: \"3rem\" }}\n            >\n                <h1 style={{ color: \"#FFD400\" }}>Welcome EMS User</h1>\n                <h4 style={{ color: \"#B7D5D4\" }}>Enter updates below to keep the hospital informed about youe patient</h4>\n            </div>\n            \n            <Row>\n                <Col>\n                    {/* <Row className=\"justify-content-center\"> */}\n                        <Card>\n                            <Card.Header>ETA:\n                                 {/* <span>{ptInfo.data.ETA ? (ptInfo.data.ETA):(\"pending\")}</span> */}\n                            </Card.Header>\n                            <Card.Body>\n                                {eta.pending ? (\n                                    <EtaUpdate\n                                        onChange={handleEtaInput}\n                                        onSubmit={handleEtaSubmit}\n                                    ></EtaUpdate>\n                                ) : (\n                                        <EtaUpdateButton onClick={initEtaUpdate} />\n                                    )}\n                            </Card.Body>\n                        </Card>\n                    {/* </Row> */}\n                    {/* <Row className=\"justify-content-center\"> */}\n                        {criticalWarnings.pending ? (\n                            <CriticalWarnSelect\n                                // style={{ width: \"80%\" }}\n                                onChange={handleCriticalsInput}\n                                onSubmit={handleCriticalsSubmit}\n                            />\n                        ) : (\n                                <CriticalWarnings\n                                    // style={{ width: \"80%\" }}\n                                    onClick={initCriticals}\n                                // loadPtInfo={loadById}\n                                // warnings={ptInfo}\n                                />\n                            )}\n                    {/* </Row> */}\n                    {/* <Row className=\"justify-content-center\"> */}\n                        <Card style={{ width: \"80%\", marginBottom: \"1rem\" }}>\n                            <Card.Header>New Vitals</Card.Header>\n                            <Card.Body>\n                                {vitals.time ? (\n                                    <VitalsForm onChange={handleVitalsInput} onSubmit={handleVitalsSubmit} />\n                                ) : (\n                                        <NewVitals onClick={initVitals} />\n                                    )}\n                            </Card.Body>\n                        </Card>\n                    {/* </Row> */}\n                    {/* <Row> */}\n                        <Card>\n                            <Card.Header>Patient Information</Card.Header>\n                            <Card.Body>\n                                {patientInformation.pending ? (\n                                    <PatientInformationForm onChange={handlePtInformationChange} onSubmit={handlePtInformationSubmit} />\n                                ) : (\n                                        <UpdateInformation onClick={initPatientInformation} />\n                                    )}\n                            </Card.Body>\n                        </Card>\n                    {/* </Row> */}\n                </Col>\n            </Row>\n            <Row className=\"justify-content-center\">\n                <Col>\n                    {ptInfo.data ? (\n                        <PatientCard patient={ptInfo.data} />\n\n                    ) : (<h3>Error</h3>)\n                    }\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default CurrentPatient"]},"metadata":{},"sourceType":"module"}