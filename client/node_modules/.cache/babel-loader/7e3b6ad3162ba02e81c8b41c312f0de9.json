{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/allen/GitHub/casrep/client/src/components/NewPatient/PtInitForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport API from \"../../utils/API\";\nimport Form from \"react-bootstrap/Form\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction PtInitForm(props) {\n  _s();\n\n  const [ptInit, setPtInit] = useState({\n    respondingUnit: \"\",\n    ETA: \"\",\n    criticalWarn: \"\"\n  });\n  const history = useHistory(); // const [ptId, setPtId] = useState(\"\")\n\n  function handleInputChange(event) {\n    // console.log(event.target.name)\n    const {\n      name,\n      value\n    } = event.target;\n    setPtInit({ ...ptInit,\n      [name]: value\n    });\n  }\n\n  function handleReroute(id) {\n    history.push(\"/id:\" + id);\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault(); // console.log(ptInit)\n\n    API.createPatient(ptInit).then(data => {\n      console.log(data);\n      handleReroute(data.data._id);\n    }); // .then(API.findMostRecentPatient()\n    //     .then(setPtId()))\n    // .then(console.log(dbModel)))\n  }\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      children: /*#__PURE__*/_jsxDEV(Form.Label, {\n        children: [\"Unit Responding\", /*#__PURE__*/_jsxDEV(Form.Control, {\n          onChange: handleInputChange,\n          type: \"text\",\n          name: \"respondingUnit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      children: /*#__PURE__*/_jsxDEV(Form.Label, {\n        children: [\"ETA\", /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          name: \"ETA\",\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      children: /*#__PURE__*/_jsxDEV(Form.Label, {\n        children: [\"Critical Warnings\", /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          name: \"criticalWarn\",\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n      type: \"submit\",\n      value: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PtInitForm, \"+a3o8LDGTigbSd1CouVRfU7qGjo=\", false, function () {\n  return [useHistory];\n});\n\n_c = PtInitForm;\nexport default PtInitForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PtInitForm\");","map":{"version":3,"sources":["/Users/allen/GitHub/casrep/client/src/components/NewPatient/PtInitForm.js"],"names":["React","useState","API","Form","useHistory","PtInitForm","props","ptInit","setPtInit","respondingUnit","ETA","criticalWarn","history","handleInputChange","event","name","value","target","handleReroute","id","push","handleSubmit","preventDefault","createPatient","then","data","console","log","_id"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AACvB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC;AACjCQ,IAAAA,cAAc,EAAE,EADiB;AAEjCC,IAAAA,GAAG,EAAE,EAF4B;AAGjCC,IAAAA,YAAY,EAAE;AAHmB,GAAD,CAApC;AAKA,QAAMC,OAAO,GAAGR,UAAU,EAA1B,CANuB,CAOvB;;AAEA,WAASS,iBAAT,CAA2BC,KAA3B,EAAkC;AAC9B;AACA,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,KAAK,CAACG,MAA9B;AACAT,IAAAA,SAAS,CAAC,EAAE,GAAGD,MAAL;AAAa,OAACQ,IAAD,GAAQC;AAArB,KAAD,CAAT;AACH;;AAED,WAASE,aAAT,CAAuBC,EAAvB,EAA2B;AACvBP,IAAAA,OAAO,CAACQ,IAAR,CAAa,SAASD,EAAtB;AACH;;AAED,WAASE,YAAT,CAAsBP,KAAtB,EAA6B;AACzBA,IAAAA,KAAK,CAACQ,cAAN,GADyB,CAEzB;;AACApB,IAAAA,GAAG,CAACqB,aAAJ,CAAkBhB,MAAlB,EAA0BiB,IAA1B,CAAgCC,IAAD,IAAU;AACrCC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAP,MAAAA,aAAa,CAACO,IAAI,CAACA,IAAL,CAAUG,GAAX,CAAb;AACH,KAHD,EAHyB,CAOzB;AACA;AACA;AAEH;;AAED,sBACI,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAEP,YAAhB;AAAA,4BACI,QAAC,IAAD,CAAM,KAAN;AAAA,6BACI,QAAC,IAAD,CAAM,KAAN;AAAA,mDAEA,QAAC,IAAD,CAAM,OAAN;AACQ,UAAA,QAAQ,EAAER,iBADlB;AAEQ,UAAA,IAAI,EAAC,MAFb;AAGQ,UAAA,IAAI,EAAC;AAHb;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAWI,QAAC,IAAD,CAAM,KAAN;AAAA,6BACI,QAAC,IAAD,CAAM,KAAN;AAAA,uCAEA,QAAC,IAAD,CAAM,OAAN;AACQ,UAAA,IAAI,EAAC,MADb;AAEQ,UAAA,IAAI,EAAC,KAFb;AAGQ,UAAA,QAAQ,EAAEA;AAHlB;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAXJ,eAqBI,QAAC,IAAD,CAAM,KAAN;AAAA,6BACI,QAAC,IAAD,CAAM,KAAN;AAAA,qDAEA,QAAC,IAAD,CAAM,OAAN;AACQ,UAAA,IAAI,EAAC,MADb;AAEQ,UAAA,IAAI,EAAC,cAFb;AAGQ,UAAA,QAAQ,EAAEA;AAHlB;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YArBJ,eA8BI,QAAC,IAAD,CAAM,OAAN;AAAc,MAAA,IAAI,EAAC,QAAnB;AAA4B,MAAA,KAAK,EAAC;AAAlC;AAAA;AAAA;AAAA;AAAA,YA9BJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAwCH;;GAxEQR,U;UAMWD,U;;;KANXC,U;AA0ET,eAAeA,UAAf","sourcesContent":["import React, { useState } from \"react\"\nimport API from \"../../utils/API\"\nimport Form from \"react-bootstrap/Form\"\nimport { useHistory } from \"react-router-dom\";\n\nfunction PtInitForm(props) {\n    const [ptInit, setPtInit] = useState({\n        respondingUnit: \"\",\n        ETA: \"\",\n        criticalWarn: \"\"\n    })\n    const history = useHistory()\n    // const [ptId, setPtId] = useState(\"\")\n\n    function handleInputChange(event) {\n        // console.log(event.target.name)\n        const { name, value } = event.target\n        setPtInit({ ...ptInit, [name]: value })\n    }\n\n    function handleReroute(id) {\n        history.push(\"/id:\" + id)\n    }\n\n    function handleSubmit(event) {\n        event.preventDefault()\n        // console.log(ptInit)\n        API.createPatient(ptInit).then((data) => {\n            console.log(data)\n            handleReroute(data.data._id)\n        })\n        // .then(API.findMostRecentPatient()\n        //     .then(setPtId()))\n        // .then(console.log(dbModel)))\n\n    }\n\n    return (\n        <Form onSubmit={handleSubmit}>\n            <Form.Group>\n                <Form.Label >\n                    Unit Responding\n                <Form.Control\n                        onChange={handleInputChange}\n                        type=\"text\"\n                        name=\"respondingUnit\"\n                    />\n                </Form.Label>\n            </Form.Group>\n            <Form.Group>\n                <Form.Label>\n                    ETA\n                <Form.Control\n                        type=\"text\"\n                        name=\"ETA\"\n                        onChange={handleInputChange}\n                    />\n                </Form.Label>\n            </Form.Group>\n            <Form.Group>\n                <Form.Label>\n                    Critical Warnings\n                <Form.Control\n                        type=\"text\"\n                        name=\"criticalWarn\"\n                        onChange={handleInputChange} />\n                </Form.Label>\n            </Form.Group>\n            <Form.Control type=\"submit\" value=\"Submit\"></Form.Control>\n            {/* <button \n            className=\"btn btn-warning\"\n            >\n                <h4>Open New Incident\n                </h4>\n            </button> */}\n        </Form>\n    )\n}\n\nexport default PtInitForm"]},"metadata":{},"sourceType":"module"}