{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/allen/GitHub/casrep/client/src/components/Vitals/VitalsForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\"; // import { Form, Button } from \"react-bootstrap\"\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport { Typography } from \"@material-ui/core\";\n\nconst dayjs = require(\"dayjs\");\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '25ch'\n    }\n  },\n  formgroup: {\n    display: \"inline\"\n  },\n  input: {\n    marginBottom: \"0.3rem\",\n    marginRight: \"0.3rem\",\n    backgroundColor: \"white\",\n    borderRadius: \"4px\"\n  },\n  submitButton: {\n    padding: \"8px 22px\",\n    fontSize: \"0.9375rem\",\n    minWidth: \"64px\",\n    backgroundColor: \"blue\",\n    // transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,border 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n\n    /* font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif; */\n\n    /* font-weight: 500; */\n    lineHeight: \"1.75\",\n    borderRadius: \"4px\"\n  }\n}));\nconst blankVitals = {\n  time: \"\",\n  LOR: \"Not Reported\",\n  HR: \"Not Reported\",\n  RR: \"Not Reported\",\n  BPs: \"Not Reported\",\n  BPd: \"Not Reported\",\n  oxygen: \"Not Reported\"\n}; // setVitals({ ...vitals, time: dayjs().format(\"HH:mm:ss\") })\n\nfunction VitalsForm(props) {\n  _s();\n\n  const classes = useStyles();\n  const [vitals, setVitals] = useState(blankVitals);\n\n  function handleVitalsInput(event) {\n    // console.log(vitals.LOR)\n    if (vitals.time === \"\") {\n      setVitals({ ...vitals,\n        time: dayjs().format(\"HH:mm:ss\")\n      });\n    } else {\n      const {\n        name,\n        value\n      } = event.target;\n      setVitals({ ...vitals,\n        [name]: value\n      });\n    }\n  }\n\n  ; // function updateTime() {\n  // }\n\n  function handleSubmit(event, data) {\n    // console.log(data)\n    props.onSubmit(event, data);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.root,\n    noValidate: true,\n    autoComplete: \"off\",\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      className: classes.formgroup,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          className: classes.input,\n          id: \"outlined-basic\",\n          label: \"LOR\",\n          variant: \"outlined\",\n          name: \"LOR\",\n          onChange: handleVitalsInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          className: classes.input,\n          id: \"outlined-basic\",\n          label: \"Oxygen Sat\",\n          variant: \"outlined\",\n          name: \"oxygen\",\n          onChange: handleVitalsInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          className: classes.input,\n          id: \"outlined-basic\",\n          label: \"Heart Rate\",\n          variant: \"outlined\",\n          name: \"HR\",\n          onChange: handleVitalsInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          className: classes.input,\n          id: \"outlined-basic\",\n          label: \"Repiratory Rate\",\n          variant: \"outlined\",\n          name: \"RR\",\n          onChange: handleVitalsInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          className: classes.input,\n          id: \"outlined-basic\",\n          label: \"BP systolic\",\n          variant: \"outlined\",\n          name: \"BPs\",\n          onChange: handleVitalsInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          className: classes.input,\n          id: \"outlined-basic\",\n          label: \"BP diastolic\",\n          variant: \"outlined\",\n          name: \"BPd\",\n          onChange: handleVitalsInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        size: \"large\",\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: event => handleSubmit(event, vitals),\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this); // return (\n  //     <Form onSubmit={props.onSubmit}>\n  //         <Form.Group>\n  //             <Form.Label>Heart Rate</Form.Label>\n  //             <Form.Control\n  //                 name=\"HR\"\n  //                 placeholder=\"Heart Rate\"\n  //                 type=\"number\"\n  //                 onChange={props.onChange}></Form.Control>\n  //         </Form.Group>\n  //         <Form.Group>\n  //             <Form.Label>Respiratory Rate</Form.Label>\n  //             <Form.Control\n  //                 name=\"RR\"\n  //                 placeholder=\"Respiratory Rate\"\n  //                 type=\"number\"\n  //                 onChange={props.onChange}></Form.Control>\n  //         </Form.Group>\n  //         <Form.Group>\n  //             <Form.Label>BP Systolic</Form.Label>\n  //             <Form.Control\n  //                 name=\"BPs\"\n  //                 placeholder=\"Systolic\"\n  //                 type=\"number\"\n  //                 onChange={props.onChange}></Form.Control>\n  //         </Form.Group>\n  //         <Form.Group>\n  //             <Form.Label>BP Diastolic</Form.Label>\n  //             <Form.Control\n  //                 name=\"BPd\"\n  //                 placeholder=\"Diastolic\"\n  //                 type=\"number\"\n  //                 onChange={props.onChange}></Form.Control>\n  //         </Form.Group>\n  //         <Form.Group>\n  //             <Form.Label>Oxygen Saturation</Form.Label>\n  //             <Form.Control\n  //                 name=\"oxygen\"\n  //                 placeholder=\"O2 sat\"\n  //                 type=\"number\"\n  //                 onChange={props.onChange}></Form.Control>\n  //         </Form.Group>\n  //         <Button \n  //         onClick={props.onSubmit}\n  //         variant=\"primary\" \n  //         type=\"submit\">\n  //             Submit\n  //         </Button>\n  //     </Form>\n  // )\n}\n\n_s(VitalsForm, \"hLNKW+tAObIvzh/gjeUY6tfHmgI=\", false, function () {\n  return [useStyles];\n});\n\n_c = VitalsForm;\nexport default VitalsForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"VitalsForm\");","map":{"version":3,"sources":["/Users/allen/GitHub/casrep/client/src/components/Vitals/VitalsForm.js"],"names":["React","useState","makeStyles","TextField","Grid","Button","Typography","dayjs","require","useStyles","theme","root","margin","spacing","width","formgroup","display","input","marginBottom","marginRight","backgroundColor","borderRadius","submitButton","padding","fontSize","minWidth","lineHeight","blankVitals","time","LOR","HR","RR","BPs","BPd","oxygen","VitalsForm","props","classes","vitals","setVitals","handleVitalsInput","event","format","name","value","target","handleSubmit","data","onSubmit"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\n// import { Form, Button } from \"react-bootstrap\"\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid'\nimport Button from '@material-ui/core/Button'\nimport { Typography } from \"@material-ui/core\";\n\nconst dayjs = require(\"dayjs\")\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& > *': {\n            margin: theme.spacing(1),\n            width: '25ch',\n        },\n    },\n    formgroup: {\n        display: \"inline\"\n    },\n    input: {\n        marginBottom: \"0.3rem\",\n        marginRight: \"0.3rem\",\n        backgroundColor:\"white\",\n        borderRadius: \"4px\"\n    },\n    submitButton: {\n        padding: \"8px 22px\",\n        fontSize: \"0.9375rem\",\n        minWidth: \"64px\",\n        backgroundColor:\"blue\",\n        // transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,border 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n        /* font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif; */\n        /* font-weight: 500; */\n        lineHeight: \"1.75\",\n        borderRadius: \"4px\",\n    }\n}));\n\nconst blankVitals = {\n    time: \"\",\n    LOR: \"Not Reported\",\n    HR: \"Not Reported\",\n    RR: \"Not Reported\",\n    BPs: \"Not Reported\",\n    BPd: \"Not Reported\",\n    oxygen: \"Not Reported\",\n}\n\n// setVitals({ ...vitals, time: dayjs().format(\"HH:mm:ss\") })\n\n\n\nfunction VitalsForm(props) {\n    const classes = useStyles();\n\n    const [vitals, setVitals] = useState(blankVitals)\n\n    function handleVitalsInput(event) {\n        // console.log(vitals.LOR)\n        if (vitals.time === \"\") {\n            setVitals({ ...vitals, time: dayjs().format(\"HH:mm:ss\") })\n        } else {\n            const { name, value } = event.target;\n            setVitals({ ...vitals, [name]: value })\n        }\n    };\n\n    // function updateTime() {\n    // }\n\n    function handleSubmit(event, data) {\n        // console.log(data)\n        props.onSubmit(event, data)\n    }\n\n    return (\n        <form className={classes.root} noValidate autoComplete=\"off\">\n            <Grid container className={classes.formgroup}>\n                <Grid item xs={12}>\n                    <TextField\n                        className={classes.input}\n                        id=\"outlined-basic\"\n                        label=\"LOR\"\n                        variant=\"outlined\"\n                        name=\"LOR\"\n                        onChange={handleVitalsInput} />\n                    <TextField\n                        className={classes.input}\n                        id=\"outlined-basic\"\n                        label=\"Oxygen Sat\"\n                        variant=\"outlined\"\n                        name=\"oxygen\"\n                        onChange={handleVitalsInput} />\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                        className={classes.input}\n                        id=\"outlined-basic\"\n                        label=\"Heart Rate\"\n                        variant=\"outlined\"\n                        name=\"HR\"\n                        onChange={handleVitalsInput} />\n                    <TextField\n                        className={classes.input}\n                        id=\"outlined-basic\"\n                        label=\"Repiratory Rate\"\n                        variant=\"outlined\"\n                        name=\"RR\"\n                        onChange={handleVitalsInput} />\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                        className={classes.input}\n                        id=\"outlined-basic\"\n                        label=\"BP systolic\"\n                        variant=\"outlined\"\n                        name=\"BPs\"\n                        onChange={handleVitalsInput} />\n                    <TextField\n                        className={classes.input}\n                        id=\"outlined-basic\"\n                        label=\"BP diastolic\"\n                        variant=\"outlined\"\n                        name=\"BPd\"\n                        onChange={handleVitalsInput} />\n\n                </Grid>\n                {/* <Typography className={classes.submitButton}>SUBMIT</Typography> */}\n                <Button size=\"large\" variant=\"contained\" color=\"primary\" onClick={(event) => handleSubmit(event, vitals)}>Submit</Button>\n            </Grid>\n        </form >\n    );\n    // return (\n    //     <Form onSubmit={props.onSubmit}>\n    //         <Form.Group>\n    //             <Form.Label>Heart Rate</Form.Label>\n    //             <Form.Control\n    //                 name=\"HR\"\n    //                 placeholder=\"Heart Rate\"\n    //                 type=\"number\"\n    //                 onChange={props.onChange}></Form.Control>\n    //         </Form.Group>\n    //         <Form.Group>\n    //             <Form.Label>Respiratory Rate</Form.Label>\n    //             <Form.Control\n    //                 name=\"RR\"\n    //                 placeholder=\"Respiratory Rate\"\n    //                 type=\"number\"\n    //                 onChange={props.onChange}></Form.Control>\n    //         </Form.Group>\n    //         <Form.Group>\n    //             <Form.Label>BP Systolic</Form.Label>\n    //             <Form.Control\n    //                 name=\"BPs\"\n    //                 placeholder=\"Systolic\"\n    //                 type=\"number\"\n    //                 onChange={props.onChange}></Form.Control>\n    //         </Form.Group>\n    //         <Form.Group>\n    //             <Form.Label>BP Diastolic</Form.Label>\n    //             <Form.Control\n    //                 name=\"BPd\"\n    //                 placeholder=\"Diastolic\"\n    //                 type=\"number\"\n    //                 onChange={props.onChange}></Form.Control>\n    //         </Form.Group>\n    //         <Form.Group>\n    //             <Form.Label>Oxygen Saturation</Form.Label>\n    //             <Form.Control\n    //                 name=\"oxygen\"\n    //                 placeholder=\"O2 sat\"\n    //                 type=\"number\"\n    //                 onChange={props.onChange}></Form.Control>\n    //         </Form.Group>\n    //         <Button \n    //         onClick={props.onSubmit}\n    //         variant=\"primary\" \n    //         type=\"submit\">\n    //             Submit\n    //         </Button>\n    //     </Form>\n    // )\n}\n\nexport default VitalsForm"]},"metadata":{},"sourceType":"module"}