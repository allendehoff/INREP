{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/allen/GitHub/casrep/client/src/pages/CurrentPatient.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\"; // import { Component } from \"react\"\n\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport Card from \"react-bootstrap/Card\"; // import Moment from 'react-moment';\n// import 'moment-timezone';\n\nimport PatientCard from \"../components/PatientCard/PatientCard\";\nimport VitalsForm from \"../components/Vitals/VitalsForm\";\nimport NewVitals from \"../components/Vitals/NewVitals\";\nimport CriticalWarnings from \"../components/CriticalWarning/CriticalWarnings\";\nimport CriticalWarnSelect from \"../components/CriticalWarning/CritWarnSelect\";\nimport { useParams } from \"react-router-dom\";\nimport API from \"../utils/API\";\nimport io from \"socket.io-client\";\nconst socket = io();\n\nconst dayjs = require(\"dayjs\");\n\nfunction CurrentPatient() {\n  _s();\n\n  // const [entries, setEntries] = useState(1)\n  const [ptInfo, setPtInfo] = useState({});\n  const blankVitals = {\n    time: \"\",\n    HR: \"Not Reported\",\n    RR: \"Not Reported\",\n    BPs: \"Not Reported\",\n    BPd: \"Not Reported\",\n    oxygen: \"Not Reported\"\n  };\n  const [vitals, setVitals] = useState(blankVitals);\n  const criticalsAllFalse = {\n    pending: false,\n    CPR: false,\n    stroke: false,\n    trauma1: false,\n    trauma2: false,\n    intubated: false,\n    fallWithThinners: false\n  };\n  const [criticalWarnings, setCriticalWarning] = useState(criticalsAllFalse); // const [update, setUpdate] = useState(\"\")\n\n  const {\n    id\n  } = useParams(); // let idOnly = ({ id }.id).slice(3)\n\n  useEffect(() => {\n    // console.log(id)\n    loadById(id); // console.log(ptInfo)\n  }, []);\n\n  function loadById(id) {\n    // console.log(id)\n    API.findById(id).then(ptData => {\n      setPtInfo(ptData);\n    });\n  }\n\n  function handleVitalsInput(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setVitals({ ...vitals,\n      [name]: value\n    });\n  }\n\n  ;\n\n  function initVitals() {\n    // console.log(ptInfo)\n    setVitals({ ...vitals,\n      time: dayjs().format(\"HH:mm:ss\")\n    });\n  }\n\n  function handleVitalsSubmit(event) {\n    event.preventDefault();\n\n    if (vitals.HR !== \"Not Reported\") {\n      API.updateVitals(id, vitals).then(socket.emit(\"update\")).then(setVitals(blankVitals)).then(loadById(id));\n    } // .exec(loadById(id))\n    // console.log(vitals)\n    // console.log(\"here\")\n\n  }\n\n  function initCriticals() {\n    setCriticalWarning({ ...criticalWarnings,\n      pending: true\n    });\n  }\n\n  function handleCriticalsInput(event) {\n    // console.log(event.target.checked)\n    const {\n      name,\n      checked\n    } = event.target;\n    setCriticalWarning({ ...criticalWarnings,\n      [name]: checked\n    });\n  }\n\n  function handelCriticalsSubmit(event) {\n    event.preventDefault();\n    setCriticalWarning({ ...criticalWarnings,\n      pending: false\n    }); // console.log(criticalWarnings)\n    // const warningsString = JSON.stringify(criticalWarnings)\n    // console.log(warningsString)\n\n    API.updateCriticalWarnings(id, criticalWarnings) // .then(setCriticalWarning(criticalsAllFalse))\n    // .then(setCriticalWarning({...criticalWarnings}))\n    .then(socket.emit(\"update\")).then(loadById(id));\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    style: {\n      paddingTop: \"2rem\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-center\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        lg: 8,\n        children: ptInfo.data ? /*#__PURE__*/_jsxDEV(PatientCard, {\n          patient: ptInfo.data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 26\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        lg: 4,\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          className: \"justify-content-center\",\n          children: criticalWarnings.pending ? /*#__PURE__*/_jsxDEV(CriticalWarnSelect // style={{ width: \"80%\" }}\n          , {\n            onChange: handleCriticalsInput,\n            onSubmit: handelCriticalsSubmit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(CriticalWarnings // style={{ width: \"80%\" }}\n          , {\n            onClick: initCriticals // loadPtInfo={loadById}\n            // warnings={ptInfo}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"justify-content-center\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            style: {\n              width: \"80%\",\n              marginBottom: \"1rem\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n              children: \"New Vitals\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: vitals.time ? /*#__PURE__*/_jsxDEV(VitalsForm, {\n                onChange: handleVitalsInput,\n                onSubmit: handleVitalsSubmit\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 37\n              }, this) : /*#__PURE__*/_jsxDEV(NewVitals, {\n                onClick: initVitals\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CurrentPatient, \"t2KVmemxlTlQZJT81YnvbCaTVys=\", false, function () {\n  return [useParams];\n});\n\n_c = CurrentPatient;\nexport default CurrentPatient;\n\nvar _c;\n\n$RefreshReg$(_c, \"CurrentPatient\");","map":{"version":3,"sources":["/Users/allen/GitHub/casrep/client/src/pages/CurrentPatient.js"],"names":["React","useState","useEffect","Container","Row","Col","Card","PatientCard","VitalsForm","NewVitals","CriticalWarnings","CriticalWarnSelect","useParams","API","io","socket","dayjs","require","CurrentPatient","ptInfo","setPtInfo","blankVitals","time","HR","RR","BPs","BPd","oxygen","vitals","setVitals","criticalsAllFalse","pending","CPR","stroke","trauma1","trauma2","intubated","fallWithThinners","criticalWarnings","setCriticalWarning","id","loadById","findById","then","ptData","handleVitalsInput","event","name","value","target","initVitals","format","handleVitalsSubmit","preventDefault","updateVitals","emit","initCriticals","handleCriticalsInput","checked","handelCriticalsSubmit","updateCriticalWarnings","paddingTop","data","width","marginBottom"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\"\n// import { Component } from \"react\"\nimport { Container, Row, Col } from \"react-bootstrap\"\nimport Card from \"react-bootstrap/Card\"\n// import Moment from 'react-moment';\n// import 'moment-timezone';\n\nimport PatientCard from \"../components/PatientCard/PatientCard\"\nimport VitalsForm from \"../components/Vitals/VitalsForm\"\nimport NewVitals from \"../components/Vitals/NewVitals\"\nimport CriticalWarnings from \"../components/CriticalWarning/CriticalWarnings\"\nimport CriticalWarnSelect from \"../components/CriticalWarning/CritWarnSelect\"\n\nimport { useParams } from \"react-router-dom\"\nimport API from \"../utils/API\"\n\n\nimport io from \"socket.io-client\"\nconst socket = io()\n\nconst dayjs = require(\"dayjs\")\n\nfunction CurrentPatient() {\n    // const [entries, setEntries] = useState(1)\n\n    const [ptInfo, setPtInfo] = useState({})\n\n    const blankVitals = {\n        time: \"\",\n        HR: \"Not Reported\",\n        RR: \"Not Reported\",\n        BPs: \"Not Reported\",\n        BPd: \"Not Reported\",\n        oxygen: \"Not Reported\",\n    }\n    const [vitals, setVitals] = useState(blankVitals)\n\n\n    const criticalsAllFalse = {\n        pending: false,\n        CPR: false,\n        stroke: false,\n        trauma1: false,\n        trauma2: false,\n        intubated: false,\n        fallWithThinners: false\n    }\n    const [criticalWarnings, setCriticalWarning] = useState(criticalsAllFalse)\n\n    // const [update, setUpdate] = useState(\"\")\n\n    const { id } = useParams()\n    // let idOnly = ({ id }.id).slice(3)\n\n    useEffect(() => {\n\n        // console.log(id)\n        loadById(id)\n        // console.log(ptInfo)\n    }, [])\n\n    function loadById(id) {\n        // console.log(id)\n        API.findById(id)\n            .then((ptData) => {\n                setPtInfo(ptData)\n            })\n    }\n\n    function handleVitalsInput(event) {\n        const { name, value } = event.target;\n        setVitals({ ...vitals, [name]: value })\n    };\n\n    function initVitals() {\n        // console.log(ptInfo)\n        setVitals({ ...vitals, time: dayjs().format(\"HH:mm:ss\") })\n    }\n\n    function handleVitalsSubmit(event) {\n        event.preventDefault();\n        if (vitals.HR !== \"Not Reported\") {\n            API.updateVitals(id, vitals)\n                .then(socket.emit(\"update\"))\n                .then(setVitals(blankVitals))\n                .then(loadById(id))\n        }\n        // .exec(loadById(id))\n        // console.log(vitals)\n        // console.log(\"here\")\n    }\n\n    function initCriticals() {\n        setCriticalWarning({ ...criticalWarnings, pending: true })\n    }\n\n    function handleCriticalsInput(event) {\n        // console.log(event.target.checked)\n        const { name, checked } = event.target\n        setCriticalWarning({ ...criticalWarnings, [name]: checked })\n    }\n\n    function handelCriticalsSubmit(event) {\n        event.preventDefault()\n        setCriticalWarning({ ...criticalWarnings, pending: false })\n        // console.log(criticalWarnings)\n        // const warningsString = JSON.stringify(criticalWarnings)\n        // console.log(warningsString)\n        API.updateCriticalWarnings(id, criticalWarnings)\n            // .then(setCriticalWarning(criticalsAllFalse))\n            // .then(setCriticalWarning({...criticalWarnings}))\n            .then(socket.emit(\"update\"))\n            .then(loadById(id))\n    }\n\n    return (\n        <Container style={{ paddingTop: \"2rem\" }}>\n            {/* <Navbar>\n                <NavbarBrand>this is the page for patient ID: {id}</NavbarBrand>\n            </Navbar> */}\n            <Row className=\"justify-content-center\">\n                <Col lg={8}>\n                    {ptInfo.data ? (\n                        <PatientCard patient={ptInfo.data} />\n\n                    ) : (<h3>Error</h3>)\n                    }\n                </Col>\n                <Col lg={4}>\n                    <Row className=\"justify-content-center\">\n                        {criticalWarnings.pending ? (\n                            <CriticalWarnSelect\n                                // style={{ width: \"80%\" }}\n                                onChange={handleCriticalsInput}\n                                onSubmit={handelCriticalsSubmit}\n                            />\n                        ) : (\n                                <CriticalWarnings\n                                    // style={{ width: \"80%\" }}\n                                    onClick={initCriticals}\n                                // loadPtInfo={loadById}\n                                // warnings={ptInfo}\n                                />\n                            )}\n                    </Row>\n                    <Row className=\"justify-content-center\">\n                        <Card style={{ width: \"80%\", marginBottom: \"1rem\" }}>\n                            <Card.Header>New Vitals</Card.Header>\n                            <Card.Body>\n                                {vitals.time ? (\n                                    <VitalsForm onChange={handleVitalsInput} onSubmit={handleVitalsSubmit} />\n                                ) : (\n                                        <NewVitals onClick={initVitals} />\n                                    )}\n                            </Card.Body>\n                        </Card>\n                    </Row>\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default CurrentPatient"]},"metadata":{},"sourceType":"module"}