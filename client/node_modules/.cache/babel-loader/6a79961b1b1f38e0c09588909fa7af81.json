{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/allen/GitHub/casrep/client/src/components/EtaUpdate/EtaUpdate.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\"; // import { Form, Button } from \"react-bootstrap\"\n// import { useState } from \"react\"\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button'; // import Grid from '@material-ui/core/Grid'\n\nimport { useParams } from \"react-router-dom\";\nimport API from \"../../utils/API\";\nimport io from \"socket.io-client\";\nconst socket = io();\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '25ch'\n    }\n  },\n  formgroup: {\n    display: \"inline\"\n  },\n  input: {\n    marginBottom: \"0.3rem\",\n    marginRight: \"0.3rem\",\n    backgroundColor: \"white\",\n    borderRadius: \"4px\"\n  }\n}));\n\nfunction EtaUpdate(props) {\n  _s();\n\n  const classes = useStyles();\n  const {\n    id\n  } = useParams();\n  const [eta, setEta] = useState({\n    time: \"\"\n  });\n\n  function handleEtaInput(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setEta({ ...eta,\n      [name]: value\n    }); // console.log(eta.time)\n  }\n\n  function handleEtaSubmit(event, data) {\n    // console.log(data)\n    event.preventDefault(); // findForm(event.target)\n    // console.log(event.target.parentElement)\n\n    API.updateETA(id, {\n      time: data.time\n    }).then(clearForm(event.target)) // .then(event.target.parentElement.reset())\n    .then(socket.emit(\"update\")); // .then(setEta({ pending: false }))\n    // .then(loadById(id))\n  }\n\n  function clearForm(target) {\n    let form; // let parent = \".parentElement\"\n\n    if (target.parentElement.nodeName === \"FORM\") {\n      form = target.parentElement;\n    } else if (target.parentElement.parentElement.nodeName === \"FORM\") {\n      form = target.parentElement.parentElement;\n    } else if (target.parentElement.parentElement.parentElement.nodeName === \"FORM\") {\n      form = target.parentElement.parentElement.parentElement;\n    } else if (target.parentElement.parentElement.parentElement.parentElement.nodeName === \"FORM\") {\n      form = target.parentElement.parentElement.parentElement.parentElement;\n    }\n\n    return form.reset(); // return form\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: (classes.root, classes.form),\n    onSubmit: props.etaSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.inputContainer,\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        className: classes.input,\n        required: true,\n        variant: \"outlined\",\n        label: \"ETA\" // placeholder=\"MS-21\"\n        // helperText=\"Required\"\n        ,\n        onChange: handleEtaInput,\n        type: \"text\",\n        name: \"time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      size: \"large\",\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: event => handleEtaSubmit(event, eta),\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this) // <Form\n  //     onSubmit={props.onSubmit}\n  // >\n  //     <Form.Group>\n  //         <Form.Label>What is you ETA?</Form.Label>\n  //         <Form.Control\n  //             name=\"time\"\n  //             placeholder=\"0000\"\n  //             // type=\"number\"\n  //             onChange={props.onChange}\n  //         />\n  //     </Form.Group>\n  //     <Button\n  //         onClick={props.onSubmit}\n  //         variant=\"primary\"\n  //         type=\"submit\">\n  //         Submit\n  //     </Button>\n  // </Form>\n  ;\n}\n\n_s(EtaUpdate, \"hebvTidjVZpMEx/ORMIVmSbcXl8=\", false, function () {\n  return [useStyles, useParams];\n});\n\n_c = EtaUpdate;\nexport default EtaUpdate;\n\nvar _c;\n\n$RefreshReg$(_c, \"EtaUpdate\");","map":{"version":3,"sources":["/Users/allen/GitHub/casrep/client/src/components/EtaUpdate/EtaUpdate.js"],"names":["React","useState","makeStyles","TextField","Button","useParams","API","io","socket","useStyles","theme","root","margin","spacing","width","formgroup","display","input","marginBottom","marginRight","backgroundColor","borderRadius","EtaUpdate","props","classes","id","eta","setEta","time","handleEtaInput","event","name","value","target","handleEtaSubmit","data","preventDefault","updateETA","then","clearForm","emit","form","parentElement","nodeName","reset","etaSubmit","inputContainer"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\"\n// import { Form, Button } from \"react-bootstrap\"\n// import { useState } from \"react\"\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button'\n// import Grid from '@material-ui/core/Grid'\n\nimport { useParams } from \"react-router-dom\"\nimport API from \"../../utils/API\"\n\nimport io from \"socket.io-client\"\nconst socket = io()\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& > *': {\n            margin: theme.spacing(1),\n            width: '25ch',\n        },\n    },\n    formgroup: {\n        display: \"inline\"\n    },\n    input: {\n        marginBottom: \"0.3rem\",\n        marginRight: \"0.3rem\",\n        backgroundColor:\"white\",\n        borderRadius: \"4px\"\n    }\n}));\n\nfunction EtaUpdate(props) {\n    const classes = useStyles()\n    const { id } = useParams()\n\n    const [eta, setEta] = useState({\n        time: \"\"\n    })\n\n    function handleEtaInput(event) {\n        const { name, value } = event.target\n        setEta({ ...eta, [name]: value })\n        // console.log(eta.time)\n    }\n\n    function handleEtaSubmit(event, data) {\n        // console.log(data)\n        event.preventDefault()\n        // findForm(event.target)\n        // console.log(event.target.parentElement)\n\n        API.updateETA(id, { time: data.time })\n            .then(clearForm(event.target))\n            // .then(event.target.parentElement.reset())\n            .then(socket.emit(\"update\"))\n        // .then(setEta({ pending: false }))\n        // .then(loadById(id))\n    }\n\n    function clearForm(target) {\n        let form\n        // let parent = \".parentElement\"\n        if (target.parentElement.nodeName === \"FORM\") {\n            form = target.parentElement\n        } else if (target.parentElement.parentElement.nodeName === \"FORM\") {\n            form = target.parentElement.parentElement\n        } else if (target.parentElement.parentElement.parentElement.nodeName === \"FORM\") {\n            form = target.parentElement.parentElement.parentElement\n        } else if (target.parentElement.parentElement.parentElement.parentElement.nodeName === \"FORM\") {\n            form = target.parentElement.parentElement.parentElement.parentElement\n        }\n        return form.reset()\n        // return form\n    }\n    return (\n        <form className={classes.root, classes.form} onSubmit={props.etaSubmit}>\n                    <div className={classes.inputContainer}>\n                        <TextField\n                            className={classes.input}\n                            required\n                            variant=\"outlined\"\n                            label=\"ETA\"\n                            // placeholder=\"MS-21\"\n                            // helperText=\"Required\"\n                            onChange={handleEtaInput}\n                            type=\"text\"\n                            name=\"time\"\n                        />\n                    </div>\n                    <Button size=\"large\" variant=\"contained\" color=\"primary\" onClick={(event) => handleEtaSubmit(event, eta)}>Submit</Button>\n                </form>\n        // <Form\n        //     onSubmit={props.onSubmit}\n        // >\n        //     <Form.Group>\n        //         <Form.Label>What is you ETA?</Form.Label>\n        //         <Form.Control\n        //             name=\"time\"\n        //             placeholder=\"0000\"\n        //             // type=\"number\"\n        //             onChange={props.onChange}\n        //         />\n        //     </Form.Group>\n        //     <Button\n        //         onClick={props.onSubmit}\n        //         variant=\"primary\"\n        //         type=\"submit\">\n        //         Submit\n        //     </Button>\n        // </Form>\n    )\n}\n\nexport default EtaUpdate"]},"metadata":{},"sourceType":"module"}