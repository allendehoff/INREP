{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/allen/GitHub/casrep/client/src/pages/CurrentPatient.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\"; // import { Component } from \"react\"\n\nimport { Form, Container, Row, Col, Button, ListGroup, ListGroupItem } from \"react-bootstrap\";\nimport Card from \"react-bootstrap/Card\";\nimport Moment from 'react-moment';\nimport 'moment-timezone';\nimport PatientCard from \"../components/PatientCard/PatientCard\";\nimport VitalsForm from \"../components/Vitals/VitalsForm\";\nimport NewVitals from \"../components/Vitals/NewVitals\";\nimport CriticalWarnings from \"../components/CriticalWarning/CriticalWarnings\";\nimport CriticalWarnSelect from \"../components/CriticalWarning/CritWarnSelect\";\nimport { useParams } from \"react-router-dom\";\nimport API from \"../utils/API\";\n\nconst dayjs = require(\"dayjs\");\n\nfunction CurrentPatient() {\n  _s();\n\n  // const [entries, setEntries] = useState(1)\n  const [ptInfo, setPtInfo] = useState({});\n  const blankVitals = {\n    time: \"\",\n    HR: \"Not Reported\",\n    RR: \"Not Reported\",\n    BPs: \"Not Reported\",\n    BPd: \"Not Reported\",\n    oxygen: \"Not Reported\"\n  };\n  const [vitals, setVitals] = useState(blankVitals);\n  const criticalsAllFalse = {\n    pending: false,\n    CPR: false,\n    stroke: false,\n    trauma1: false,\n    trauma2: false,\n    intubated: false,\n    fallWithThinners: false\n  };\n  const [criticalWarnings, setCriticalWarning] = useState(criticalsAllFalse); // const [update, setUpdate] = useState(\"\")\n\n  const {\n    id\n  } = useParams(); // let idOnly = ({ id }.id).slice(3)\n\n  useEffect(() => {\n    // console.log(id)\n    loadById(id); // console.log(ptInfo)\n  }, []); // componentDidMount\n\n  function loadById(id) {\n    // console.log(id)\n    API.findById(id).then(ptData => {\n      setPtInfo(ptData);\n    }).then(console.log(ptInfo));\n  } // function handleInputChange(event) {\n  //     // console.log(event.target)\n  //     const { name, value } = event.target\n  //     const updateNumber = `update${entries}`\n  //     setUpdate({ [updateNumber]: value })\n  //     // setUpdate({`update${entries}`: value})\n  //     // setPtInfo({ ...ptInfo, [`update${entries}`]: value })\n  //     // console.log(ptInfo)\n  // }\n  // function handleSubmit(event) {\n  //     event.preventDefault()\n  //     // console.log(event.target.input)\n  //     // console.log(ptInfo.data._id)\n  //     API.updateById(id, update)\n  // }\n\n\n  function handleVitalsInput(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setVitals({ ...vitals,\n      [name]: value\n    });\n  }\n\n  ;\n\n  function initVitals() {\n    // console.log(ptInfo)\n    setVitals({ ...vitals,\n      time: dayjs().format(\"HH:mm:ss\")\n    });\n  }\n\n  function handleVitalsSubmit(event) {\n    event.preventDefault();\n\n    if (vitals.HR) {\n      API.updateVitals(id, vitals).then(setVitals(blankVitals)).then(loadById(id));\n    } // .exec(loadById(id))\n    // console.log(vitals)\n    // console.log(\"here\")\n\n  }\n\n  function initCriticals() {\n    setCriticalWarning({ ...criticalWarnings,\n      pending: true\n    });\n  }\n\n  function handleCriticalsInput(event) {\n    // console.log(event.target.checked)\n    const {\n      name,\n      checked\n    } = event.target;\n    setCriticalWarning({ ...criticalWarnings,\n      [name]: checked\n    });\n  }\n\n  function handelCriticalsSubmit(event) {\n    event.preventDefault(); // console.log(criticalWarnings)\n\n    const warningsString = JSON.stringify(criticalWarnings); // console.log(warningsString)\n\n    API.updateCriticalWarnings(id, criticalWarnings);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      className: \"jumbotron\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"this is the page for patient ID: \", id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-center\",\n      children: criticalWarnings.pending ? /*#__PURE__*/_jsxDEV(CriticalWarnSelect, {\n        onChange: handleCriticalsInput,\n        onSubmit: handelCriticalsSubmit,\n        warnings: [criticalWarnings]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(CriticalWarnings, {\n        onClick: initCriticals\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-center\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        children: ptInfo.data ? /*#__PURE__*/_jsxDEV(PatientCard, {\n          patient: ptInfo.data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 26\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: \"New Vitals\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: vitals.time ? /*#__PURE__*/_jsxDEV(VitalsForm, {\n              onChange: handleVitalsInput,\n              onSubmit: handleVitalsSubmit\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(NewVitals, {\n              onClick: initVitals\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CurrentPatient, \"t2KVmemxlTlQZJT81YnvbCaTVys=\", false, function () {\n  return [useParams];\n});\n\n_c = CurrentPatient;\nexport default CurrentPatient;\n\nvar _c;\n\n$RefreshReg$(_c, \"CurrentPatient\");","map":{"version":3,"sources":["/Users/allen/GitHub/casrep/client/src/pages/CurrentPatient.js"],"names":["React","useState","useEffect","Form","Container","Row","Col","Button","ListGroup","ListGroupItem","Card","Moment","PatientCard","VitalsForm","NewVitals","CriticalWarnings","CriticalWarnSelect","useParams","API","dayjs","require","CurrentPatient","ptInfo","setPtInfo","blankVitals","time","HR","RR","BPs","BPd","oxygen","vitals","setVitals","criticalsAllFalse","pending","CPR","stroke","trauma1","trauma2","intubated","fallWithThinners","criticalWarnings","setCriticalWarning","id","loadById","findById","then","ptData","console","log","handleVitalsInput","event","name","value","target","initVitals","format","handleVitalsSubmit","preventDefault","updateVitals","initCriticals","handleCriticalsInput","checked","handelCriticalsSubmit","warningsString","JSON","stringify","updateCriticalWarnings","data"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\"\n// import { Component } from \"react\"\nimport { Form, Container, Row, Col, Button, ListGroup, ListGroupItem } from \"react-bootstrap\"\nimport Card from \"react-bootstrap/Card\"\nimport Moment from 'react-moment';\nimport 'moment-timezone';\n\nimport PatientCard from \"../components/PatientCard/PatientCard\"\nimport VitalsForm from \"../components/Vitals/VitalsForm\"\nimport NewVitals from \"../components/Vitals/NewVitals\"\nimport CriticalWarnings from \"../components/CriticalWarning/CriticalWarnings\"\nimport CriticalWarnSelect from \"../components/CriticalWarning/CritWarnSelect\"\n\nimport { useParams } from \"react-router-dom\"\nimport API from \"../utils/API\"\n\nconst dayjs = require(\"dayjs\")\n\n\nfunction CurrentPatient() {\n    // const [entries, setEntries] = useState(1)\n\n    const [ptInfo, setPtInfo] = useState({})\n\n    const blankVitals = {\n        time: \"\",\n        HR: \"Not Reported\",\n        RR: \"Not Reported\",\n        BPs: \"Not Reported\",\n        BPd: \"Not Reported\",\n        oxygen: \"Not Reported\",\n    }\n    const [vitals, setVitals] = useState(blankVitals)\n\n\n    const criticalsAllFalse = {\n        pending:false,\n        CPR:false,\n        stroke:false,\n        trauma1:false,\n        trauma2:false,\n        intubated:false,\n        fallWithThinners:false\n    }\n    const [criticalWarnings, setCriticalWarning] = useState(criticalsAllFalse)\n\n    // const [update, setUpdate] = useState(\"\")\n\n    const { id } = useParams()\n    // let idOnly = ({ id }.id).slice(3)\n\n    useEffect(() => {\n\n        // console.log(id)\n        loadById(id)\n        // console.log(ptInfo)\n    }, [])\n\n    // componentDidMount\n\n    function loadById(id) {\n        // console.log(id)\n        API.findById(id)\n            .then((ptData) => {\n                setPtInfo(ptData)\n            })\n            .then(\n                console.log(ptInfo)\n            )\n    }\n\n    // function handleInputChange(event) {\n    //     // console.log(event.target)\n    //     const { name, value } = event.target\n    //     const updateNumber = `update${entries}`\n    //     setUpdate({ [updateNumber]: value })\n    //     // setUpdate({`update${entries}`: value})\n    //     // setPtInfo({ ...ptInfo, [`update${entries}`]: value })\n    //     // console.log(ptInfo)\n    // }\n\n    // function handleSubmit(event) {\n    //     event.preventDefault()\n    //     // console.log(event.target.input)\n    //     // console.log(ptInfo.data._id)\n    //     API.updateById(id, update)\n    // }\n\n    function handleVitalsInput(event) {\n        const { name, value } = event.target;\n        setVitals({ ...vitals, [name]: value })\n    };\n\n    function initVitals() {\n        // console.log(ptInfo)\n        setVitals({ ...vitals, time: dayjs().format(\"HH:mm:ss\") })\n    }\n\n    function handleVitalsSubmit(event) {\n        event.preventDefault();\n        if (vitals.HR) {\n            API.updateVitals(id, vitals)\n                .then(setVitals(blankVitals))\n                .then(loadById(id))\n        }\n        // .exec(loadById(id))\n        // console.log(vitals)\n        // console.log(\"here\")\n    }\n\n    function initCriticals() {\n        setCriticalWarning({...criticalWarnings, pending:true})\n    }\n\n    function handleCriticalsInput(event) {\n        // console.log(event.target.checked)\n        const {name, checked} = event.target\n        setCriticalWarning({...criticalWarnings, [name]:checked})\n    }\n\n    function handelCriticalsSubmit(event) {\n        event.preventDefault()\n        // console.log(criticalWarnings)\n        const warningsString = JSON.stringify(criticalWarnings)\n        // console.log(warningsString)\n        API.updateCriticalWarnings(id, criticalWarnings)\n    }\n\n    return (\n        <Container>\n            <Row className=\"jumbotron\">\n                <h1>this is the page for patient ID: {id}</h1>\n\n            </Row>\n            <Row className=\"justify-content-center\">\n                {criticalWarnings.pending ?(\n                    <CriticalWarnSelect \n                    onChange={handleCriticalsInput} \n                    onSubmit={handelCriticalsSubmit}\n                    warnings={[criticalWarnings]}/>\n                ): (\n                    <CriticalWarnings onClick={initCriticals}/>\n                )}\n            </Row>\n            <Row className=\"justify-content-center\">\n                <Col>\n                    {ptInfo.data ? (\n                        <PatientCard patient={ptInfo.data} />\n                        \n                    ) : (<h3>Error</h3>)\n                    }\n                </Col>\n                <Col>\n                    <Card>\n                        <Card.Header>New Vitals</Card.Header>\n                        <Card.Body>\n                            {vitals.time ? (\n                                <VitalsForm onChange={handleVitalsInput} onSubmit={handleVitalsSubmit} />\n                            ) : (\n                                    <NewVitals onClick={initVitals} />\n                                )}\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default CurrentPatient"]},"metadata":{},"sourceType":"module"}