{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/allen/GitHub/casrep/client/src/pages/CurrentPatient.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\"; // import { Component } from \"react\"\n\nimport { Form, Container, Row, Col, Button, ListGroup, ListGroupItem } from \"react-bootstrap\";\nimport Card from \"react-bootstrap/Card\";\nimport Moment from 'react-moment';\nimport 'moment-timezone';\nimport { useParams } from \"react-router-dom\";\nimport API from \"../utils/API\";\n\nfunction CurrentPatient() {\n  _s();\n\n  const [entries, setEntries] = useState(1);\n  const [ptInfo, setPtInfo] = useState({});\n  const blankVitals = {\n    HR: \"\",\n    RR: \"\",\n    BPs: \"\",\n    BPd: \"\",\n    oxygen: \"\"\n  };\n  const [vitals, setVitals] = useState({}); // const [update, setUpdate] = useState(\"\")\n\n  const {\n    id\n  } = useParams();\n  let idOnly = {\n    id\n  }.id.slice(3);\n  useEffect(() => {\n    // console.log(id)\n    loadById(id); // console.log(ptInfo)\n  }, []); // componentDidMount\n\n  function loadById(id) {\n    // console.log(id)\n    API.findById(id).then(ptData => {\n      setPtInfo(ptData);\n    }); // .then(\n    //     console.log(ptInfo)\n    // )\n  } // function handleInputChange(event) {\n  //     // console.log(event.target)\n  //     const { name, value } = event.target\n  //     const updateNumber = `update${entries}`\n  //     setUpdate({ [updateNumber]: value })\n  //     // setUpdate({`update${entries}`: value})\n  //     // setPtInfo({ ...ptInfo, [`update${entries}`]: value })\n  //     // console.log(ptInfo)\n  // }\n  // function handleSubmit(event) {\n  //     event.preventDefault()\n  //     // console.log(event.target.input)\n  //     // console.log(ptInfo.data._id)\n  //     API.updateById(id, update)\n  // }\n\n\n  function handleVitalsInput(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setVitals({ ...vitals,\n      [name]: value\n    });\n  }\n\n  ;\n\n  function handleVitalsSubmit(event) {\n    event.preventDefault();\n    if (vitals.HR) API.updateById(id, vitals).then(setVitals(blankVitals)).exec(loadById(id)); // console.log(vitals)\n    // console.log(\"here\")\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      className: \"jumbotron\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"this is the page for patient ID: \", id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          children: \"New Vitals\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: handleVitalsSubmit,\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Heart Rate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                name: \"HR\",\n                placeholder: \"Heart Rate\",\n                type: \"number\",\n                onChange: handleVitalsInput\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Respiratory Rate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                name: \"RR\",\n                placeholder: \"Respiratory Rate\",\n                type: \"number\",\n                onChange: handleVitalsInput\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"BP Systolic\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                name: \"BPs\",\n                placeholder: \"Systolic\",\n                type: \"number\",\n                onChange: handleVitalsInput\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"BP Diastolic\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                name: \"BPd\",\n                placeholder: \"Diastolic\",\n                type: \"number\",\n                onChange: handleVitalsInput\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Oxygen Saturation\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                name: \"oxygen\",\n                placeholder: \"O2 sat\",\n                type: \"number\",\n                onChange: handleVitalsInput\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              type: \"submit\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-center\",\n      style: {\n        paddingTop: \"1rem\"\n      },\n      children: ptInfo.data ? /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          children: [\"Unit Responding: \", ptInfo.data.respondingUnit]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n            children: [\"ETA: \", ptInfo.data.ETA]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n            className: \"list-group-flush\",\n            children: /*#__PURE__*/_jsxDEV(ListGroupItem, {\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Last Update: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 48\n              }, this), /*#__PURE__*/_jsxDEV(Moment, {\n                tz: \"America/Denver\",\n                format: \"HH:mm:ss MM/DD/YYYY\",\n                children: ptInfo.data.updatedAt\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 22\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CurrentPatient, \"UkowLB4nW6lCwtd/yyXMVxQdf6I=\", false, function () {\n  return [useParams];\n});\n\n_c = CurrentPatient;\nexport default CurrentPatient;\n\nvar _c;\n\n$RefreshReg$(_c, \"CurrentPatient\");","map":{"version":3,"sources":["/Users/allen/GitHub/casrep/client/src/pages/CurrentPatient.js"],"names":["React","useState","useEffect","Form","Container","Row","Col","Button","ListGroup","ListGroupItem","Card","Moment","useParams","API","CurrentPatient","entries","setEntries","ptInfo","setPtInfo","blankVitals","HR","RR","BPs","BPd","oxygen","vitals","setVitals","id","idOnly","slice","loadById","findById","then","ptData","handleVitalsInput","event","name","value","target","handleVitalsSubmit","preventDefault","updateById","exec","paddingTop","data","respondingUnit","ETA","updatedAt"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\"\n// import { Component } from \"react\"\nimport { Form, Container, Row, Col, Button, ListGroup, ListGroupItem } from \"react-bootstrap\"\nimport Card from \"react-bootstrap/Card\"\nimport Moment from 'react-moment';\nimport 'moment-timezone';\n\n\nimport { useParams } from \"react-router-dom\"\nimport API from \"../utils/API\"\n\n\nfunction CurrentPatient() {\n    const [entries, setEntries] = useState(1)\n\n    const [ptInfo, setPtInfo] = useState({})\n\n    const blankVitals = {\n        HR: \"\",\n        RR: \"\",\n        BPs: \"\",\n        BPd: \"\",\n        oxygen: \"\",\n    }\n\n    const [vitals, setVitals] = useState({})\n\n    // const [update, setUpdate] = useState(\"\")\n\n    const { id } = useParams()\n    let idOnly = ({ id }.id).slice(3)\n\n    useEffect(() => {\n\n        // console.log(id)\n        loadById(id)\n        // console.log(ptInfo)\n    }, [])\n\n    // componentDidMount\n\n    function loadById(id) {\n        // console.log(id)\n        API.findById(id)\n            .then((ptData) => {\n                setPtInfo(ptData)\n            })\n        // .then(\n        //     console.log(ptInfo)\n\n        // )\n    }\n\n    // function handleInputChange(event) {\n    //     // console.log(event.target)\n    //     const { name, value } = event.target\n    //     const updateNumber = `update${entries}`\n    //     setUpdate({ [updateNumber]: value })\n    //     // setUpdate({`update${entries}`: value})\n    //     // setPtInfo({ ...ptInfo, [`update${entries}`]: value })\n    //     // console.log(ptInfo)\n    // }\n\n    // function handleSubmit(event) {\n    //     event.preventDefault()\n    //     // console.log(event.target.input)\n    //     // console.log(ptInfo.data._id)\n    //     API.updateById(id, update)\n    // }\n\n    function handleVitalsInput(event) {\n        const { name, value } = event.target;\n        setVitals({ ...vitals, [name]: value })\n    };\n\n    function handleVitalsSubmit(event) {\n        event.preventDefault();\n        if(vitals.HR)\n        API.updateById(id, vitals)\n            .then(setVitals(blankVitals))\n            .exec(loadById(id))\n        // console.log(vitals)\n        // console.log(\"here\")\n    }\n\n\n    return (\n        <Container>\n            <Row className=\"jumbotron\">\n                <h1>this is the page for patient ID: {id}</h1>\n\n            </Row>\n            <Row className=\"justify-content-center\">\n                <Card>\n                    <Card.Header>New Vitals</Card.Header>\n                    <Card.Body>\n                        <Form onSubmit={handleVitalsSubmit}>\n                            <Form.Group>\n                                <Form.Label>Heart Rate</Form.Label>\n                                <Form.Control\n                                    name=\"HR\"\n                                    placeholder=\"Heart Rate\"\n                                    type=\"number\"\n                                    onChange={handleVitalsInput}></Form.Control>\n                            </Form.Group>\n                            <Form.Group>\n                                <Form.Label>Respiratory Rate</Form.Label>\n                                <Form.Control\n                                    name=\"RR\"\n                                    placeholder=\"Respiratory Rate\"\n                                    type=\"number\"\n                                    onChange={handleVitalsInput}></Form.Control>\n                            </Form.Group>\n                            <Form.Group>\n                                <Form.Label>BP Systolic</Form.Label>\n                                <Form.Control\n                                    name=\"BPs\"\n                                    placeholder=\"Systolic\"\n                                    type=\"number\"\n                                    onChange={handleVitalsInput}></Form.Control>\n                            </Form.Group>\n                            <Form.Group>\n                                <Form.Label>BP Diastolic</Form.Label>\n                                <Form.Control\n                                    name=\"BPd\"\n                                    placeholder=\"Diastolic\"\n                                    type=\"number\"\n                                    onChange={handleVitalsInput}></Form.Control>\n                            </Form.Group>\n                            <Form.Group>\n                                <Form.Label>Oxygen Saturation</Form.Label>\n                                <Form.Control\n                                    name=\"oxygen\"\n                                    placeholder=\"O2 sat\"\n                                    type=\"number\"\n                                    onChange={handleVitalsInput}></Form.Control>\n                            </Form.Group>\n                            <Button variant=\"primary\" type=\"submit\">\n                                Submit\n                            </Button>\n                        </Form>\n                    </Card.Body>\n                </Card>\n                {/* <Card>\n                    <Card.Header>New Message</Card.Header>\n                    <Form onSubmit={handleSubmit}>\n                        <Form.Group>\n                            <Form.Label>Enter your message to update pt report:</Form.Label>\n                            <Form.Control\n                                name=\"newMessage\"\n                                type=\"text\"\n                                onChange={handleInputChange} />\n                        </Form.Group>\n                    </Form>\n                </Card> */}\n            </Row>\n            <Row className=\"justify-content-center\" style={{ paddingTop: \"1rem\" }}>\n                {ptInfo.data ? (\n                    <Card>\n                        <Card.Header>\n                            Unit Responding: {ptInfo.data.respondingUnit}\n                        </Card.Header>\n                        <Card.Body>\n                            <Card.Title>ETA: {ptInfo.data.ETA}</Card.Title>\n                            <ListGroup className=\"list-group-flush\">\n                                <ListGroupItem><b>Last Update: </b>\n                                    <Moment tz=\"America/Denver\" format=\"HH:mm:ss MM/DD/YYYY\">\n                                        {ptInfo.data.updatedAt}\n                                    </Moment>\n                                </ListGroupItem>\n                            </ListGroup>\n                            {/* <Card.Text>\n                                Last Update: {ptInfo.data.updatedAt}\n                            </Card.Text> */}\n                        </Card.Body>\n                    </Card>\n                ) : (<h3>Error</h3>)\n                }\n\n            </Row>\n        </Container>\n    )\n}\n\nexport default CurrentPatient"]},"metadata":{},"sourceType":"module"}