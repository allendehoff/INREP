{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/allen/GitHub/casrep/client/src/pages/CurrentPatient.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\"; // import { Component } from \"react\"\n// import {  Row, Col } from \"react-bootstrap\"\n// import Card from \"react-bootstrap/Card\"\n// import Moment from 'react-moment';\n// import 'moment-timezone';\n// import React from 'react';\n// import CssBaseline from '@material-ui/core/CssBaseline';\n\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles'; // import EtaUpdateButton from \"../components/EtaUpdate/##EtaUpdateButton\"\n// import EtaUpdate from \"../components/EtaUpdate/EtaUpdate\"\n\nimport PatientCard from \"../components/PatientCard/PatientCard\"; // import VitalsForm from \"../components/Vitals/VitalsForm\"\n// import NewVitals from \"../components/Vitals/NewVitals\"\n// import CriticalWarnings from \"../components/CriticalWarning/CriticalWarnings\"\n// import CriticalWarnSelect from \"../components/CriticalWarning/CritWarnSelect\"\n// import UpdateInformation from \"../components/PatientInformation/UpdateInformation\"\n// import PatientInformationForm from \"../components/PatientInformation/PatientInformationForm\"\n\nimport EMSToolbar from \"../components/EMSToolbar/EMSToolbar\";\nimport { useParams } from \"react-router-dom\";\nimport API from \"../utils/API\";\nimport io from \"socket.io-client\";\nconst socket = io(); // const dayjs = require(\"dayjs\")\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  header: {\n    padding: \"2rem 0 4rem 0\",\n    textAlign: \"center\",\n    borderBottom: \"5px solid #FFD400\",\n    marginBottom: \"3rem\"\n  },\n  subheader: {\n    textAlign: \"center\",\n    paddingBottom: \"3rem\"\n  },\n  toolbar: {\n    marginBottom: \"3rem\"\n  }\n}));\n\nfunction CurrentPatient() {\n  _s();\n\n  const classes = useStyles(); // const [entries, setEntries] = useState(1)\n\n  const [ptInfo, setPtInfo] = useState({}); // const blankVitals = {\n  //     time: \"\",\n  //     HR: \"Not Reported\",\n  //     RR: \"Not Reported\",\n  //     BPs: \"Not Reported\",\n  //     BPd: \"Not Reported\",\n  //     oxygen: \"Not Reported\",\n  // }\n  // const [vitals, setVitals] = useState(blankVitals)\n  // const criticalsAllFalse = {\n  //     pending: false,\n  //     CPR: false,\n  //     stroke: false,\n  //     trauma1: false,\n  //     trauma2: false,\n  //     intubated: false,\n  //     fallWithThinners: false\n  // }\n  // const [criticalWarnings, setCriticalWarning] = useState(criticalsAllFalse)\n  // const [eta, setEta] = useState({\n  //     pending: false,\n  //     time: \"\"\n  // })\n  // const [patientInformation, setPatientInformation] = useState({\n  //     pending: false,\n  //     age: \"Not Reported\",\n  //     sex: \"Not Reported\",\n  //     chiefComplaint: \"Not Reported\",\n  //     moiHpi: \"Not Reported\",\n  //     oxygenTx: \"Not Reported\",\n  //     from: \"Not Reported\"\n  // })\n\n  const {\n    id\n  } = useParams(); // let idOnly = ({ id }.id).slice(3)\n\n  useEffect(() => {\n    // console.log(id)\n    loadById(id); // console.log(ptInfo)\n  }, []);\n\n  function loadById(id) {\n    // console.log(id)\n    API.findById(id).then(ptData => {\n      setPtInfo(ptData);\n    });\n  } // function handleVitalsInput(event) {\n  //     const { name, value } = event.target;\n  //     setVitals({ ...vitals, [name]: value })\n  // };\n  // function initVitals() {\n  //     // console.log(ptInfo)\n  //     setVitals({ ...vitals, time: dayjs().format(\"HH:mm:ss\") })\n  // }\n\n\n  function handleVitalsSubmit(event, data) {\n    // console.log(event.target.parentElement.parentElement)\n    event.preventDefault(); // console.log(data)\n\n    if (data.HR !== \"Not Reported\") {\n      API.updateVitals(id, data).then(socket.emit(\"update\")).then(event.target.parentElement.parentElement.reset()) // .then(setVitals(blankVitals))\n      .then(loadById(id));\n    } // .exec(loadById(id))\n    // console.log(vitals)\n    // console.log(\"here\")\n\n  } // function initCriticals() {\n  //     setCriticalWarning({ ...criticalWarnings, pending: true })\n  // }\n  // function handleCriticalsInput(event) {\n  //     // console.log(event.target.checked)\n  //     const { name, checked } = event.target\n  //     setCriticalWarning({ ...criticalWarnings, [name]: checked })\n  // }\n\n\n  function handleCriticalsSubmit(event, data) {\n    event.preventDefault(); // console.log(event.target.parentElement.parentElement.parentElement)\n    // console.log(data)\n    // setCriticalWarning({ ...criticalWarnings, pending: false })\n    // // console.log(criticalWarnings)\n    // // const warningsString = JSON.stringify(criticalWarnings)\n    // // console.log(warningsString)\n\n    API.updateCriticalWarnings(id, data) // .then(setCriticalWarning(data))\n    // .then(setCriticalWarning({...criticalWarnings}))\n    .then(socket.emit(\"update\")).then(event.target.parentElement.parentElement.reset()) // .then(event.target.parentElement.parentElement.reset())\n    .then(loadById(id));\n  } // function initEtaUpdate() {\n  //     setEta({ ...eta, pending: true })\n  // }\n  // function handleEtaInput(event) {\n  //     const { name, value } = event.target\n  //     setEta({ ...eta, [name]: value })\n  //     // console.log(eta.time)\n  // }\n\n\n  function handleEtaSubmit(event, data) {\n    // console.log(data)\n    event.preventDefault();\n    console.log(event.target.parentElement);\n    API.updateETA(id, {\n      time: data.time\n    }).then(socket.emit(\"update\")).then(event.target.parentElement.reset()) // .then(setEta({ pending: false }))\n    .then(loadById(id));\n  } // function initPatientInformation() {\n  //     setPatientInformation({ ...patientInformation, pending: true })\n  // }\n  // function handlePtInformationChange(event) {\n  //     const { name, value } = event.target\n  //     setPatientInformation({ ...patientInformation, [name]: value })\n  // }\n\n\n  function handlePtInformationSubmit(event, data) {\n    event.preventDefault();\n    console.log(event.target.parentElement.parentElement); // API.updatePtInformation(id, data)\n    //     .then(socket.emit(\"update\"))\n    //     .then(event.target.parentElement.parentElement.reset())\n    //     // .then(setPatientInformation({ pending: false }))\n    //     .then(loadById(id))\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    style: {\n      paddingTop: \"2rem\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        className: classes.header,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h2\",\n          style: {\n            color: \"#FFD400\"\n          },\n          children: \"Welcome EMS User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          style: {\n            color: \"#B7D5D4\"\n          },\n          children: \"Enter updates below to keep the hospital informed about your patient\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      className: classes.toolbar,\n      children: /*#__PURE__*/_jsxDEV(EMSToolbar // etaInputChange={handleEtaInput}\n      , {\n        etaSubmit: handleEtaSubmit,\n        criticalSubmit: handleCriticalsSubmit,\n        vitalSubmit: handleVitalsSubmit,\n        ptInfoSubmit: handlePtInformationSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: ptInfo.data ? /*#__PURE__*/_jsxDEV(PatientCard, {\n          patient: ptInfo.data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          children: \"Loading patient information, please wait...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 210,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CurrentPatient, \"ZrhrOrs8Uv7HFG+pvX28nNzcA0A=\", false, function () {\n  return [useStyles, useParams];\n});\n\n_c = CurrentPatient;\nexport default CurrentPatient;\n\nvar _c;\n\n$RefreshReg$(_c, \"CurrentPatient\");","map":{"version":3,"sources":["/Users/allen/GitHub/casrep/client/src/pages/CurrentPatient.js"],"names":["React","useState","useEffect","Typography","Container","Grid","makeStyles","PatientCard","EMSToolbar","useParams","API","io","socket","useStyles","theme","root","flexGrow","header","padding","textAlign","borderBottom","marginBottom","subheader","paddingBottom","toolbar","CurrentPatient","classes","ptInfo","setPtInfo","id","loadById","findById","then","ptData","handleVitalsSubmit","event","data","preventDefault","HR","updateVitals","emit","target","parentElement","reset","handleCriticalsSubmit","updateCriticalWarnings","handleEtaSubmit","console","log","updateETA","time","handlePtInformationSubmit","paddingTop","color"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\"\n// import { Component } from \"react\"\n// import {  Row, Col } from \"react-bootstrap\"\n// import Card from \"react-bootstrap/Card\"\n// import Moment from 'react-moment';\n// import 'moment-timezone';\n\n// import React from 'react';\n// import CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\n\n// import EtaUpdateButton from \"../components/EtaUpdate/##EtaUpdateButton\"\n// import EtaUpdate from \"../components/EtaUpdate/EtaUpdate\"\nimport PatientCard from \"../components/PatientCard/PatientCard\"\n// import VitalsForm from \"../components/Vitals/VitalsForm\"\n// import NewVitals from \"../components/Vitals/NewVitals\"\n// import CriticalWarnings from \"../components/CriticalWarning/CriticalWarnings\"\n// import CriticalWarnSelect from \"../components/CriticalWarning/CritWarnSelect\"\n// import UpdateInformation from \"../components/PatientInformation/UpdateInformation\"\n// import PatientInformationForm from \"../components/PatientInformation/PatientInformationForm\"\nimport EMSToolbar from \"../components/EMSToolbar/EMSToolbar\"\n\nimport { useParams } from \"react-router-dom\"\nimport API from \"../utils/API\"\n\n\nimport io from \"socket.io-client\"\nconst socket = io()\n\n// const dayjs = require(\"dayjs\")\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1\n    },\n    header: {\n        padding: \"2rem 0 4rem 0\",\n        textAlign: \"center\",\n        borderBottom: \"5px solid #FFD400\",\n        marginBottom: \"3rem\"\n    },\n    subheader: {\n        textAlign: \"center\",\n        paddingBottom: \"3rem\"\n    },\n    toolbar:{\n        marginBottom: \"3rem\"\n    }\n}))\n\nfunction CurrentPatient() {\n    const classes = useStyles()\n    // const [entries, setEntries] = useState(1)\n\n    const [ptInfo, setPtInfo] = useState({})\n\n    // const blankVitals = {\n    //     time: \"\",\n    //     HR: \"Not Reported\",\n    //     RR: \"Not Reported\",\n    //     BPs: \"Not Reported\",\n    //     BPd: \"Not Reported\",\n    //     oxygen: \"Not Reported\",\n    // }\n    // const [vitals, setVitals] = useState(blankVitals)\n\n\n    // const criticalsAllFalse = {\n    //     pending: false,\n    //     CPR: false,\n    //     stroke: false,\n    //     trauma1: false,\n    //     trauma2: false,\n    //     intubated: false,\n    //     fallWithThinners: false\n    // }\n    // const [criticalWarnings, setCriticalWarning] = useState(criticalsAllFalse)\n\n    // const [eta, setEta] = useState({\n    //     pending: false,\n    //     time: \"\"\n    // })\n\n    // const [patientInformation, setPatientInformation] = useState({\n    //     pending: false,\n    //     age: \"Not Reported\",\n    //     sex: \"Not Reported\",\n    //     chiefComplaint: \"Not Reported\",\n    //     moiHpi: \"Not Reported\",\n    //     oxygenTx: \"Not Reported\",\n    //     from: \"Not Reported\"\n    // })\n\n    const { id } = useParams()\n    // let idOnly = ({ id }.id).slice(3)\n\n    useEffect(() => {\n\n        // console.log(id)\n        loadById(id)\n        // console.log(ptInfo)\n    }, [])\n\n    function loadById(id) {\n        // console.log(id)\n        API.findById(id)\n            .then((ptData) => {\n                setPtInfo(ptData)\n            })\n    }\n\n    // function handleVitalsInput(event) {\n    //     const { name, value } = event.target;\n    //     setVitals({ ...vitals, [name]: value })\n    // };\n\n    // function initVitals() {\n    //     // console.log(ptInfo)\n    //     setVitals({ ...vitals, time: dayjs().format(\"HH:mm:ss\") })\n    // }\n\n    function handleVitalsSubmit(event, data) {\n        // console.log(event.target.parentElement.parentElement)\n        event.preventDefault();\n        // console.log(data)\n        if (data.HR !== \"Not Reported\") {\n            API.updateVitals(id, data)\n                .then(socket.emit(\"update\"))\n                .then(event.target.parentElement.parentElement.reset())\n                // .then(setVitals(blankVitals))\n                .then(loadById(id))\n        }\n        // .exec(loadById(id))\n        // console.log(vitals)\n        // console.log(\"here\")\n    }\n\n    // function initCriticals() {\n    //     setCriticalWarning({ ...criticalWarnings, pending: true })\n    // }\n\n    // function handleCriticalsInput(event) {\n    //     // console.log(event.target.checked)\n    //     const { name, checked } = event.target\n    //     setCriticalWarning({ ...criticalWarnings, [name]: checked })\n    // }\n\n    function handleCriticalsSubmit(event, data) {\n        event.preventDefault();\n        // console.log(event.target.parentElement.parentElement.parentElement)\n        // console.log(data)\n        // setCriticalWarning({ ...criticalWarnings, pending: false })\n        // // console.log(criticalWarnings)\n        // // const warningsString = JSON.stringify(criticalWarnings)\n        // // console.log(warningsString)\n\n        API.updateCriticalWarnings(id, data)\n            // .then(setCriticalWarning(data))\n            // .then(setCriticalWarning({...criticalWarnings}))\n            .then(socket.emit(\"update\"))\n            .then(event.target.parentElement.parentElement.reset())\n            // .then(event.target.parentElement.parentElement.reset())\n            .then(loadById(id))\n    }\n\n    // function initEtaUpdate() {\n    //     setEta({ ...eta, pending: true })\n    // }\n\n    // function handleEtaInput(event) {\n    //     const { name, value } = event.target\n    //     setEta({ ...eta, [name]: value })\n    //     // console.log(eta.time)\n    // }\n\n    function handleEtaSubmit(event, data) {\n        // console.log(data)\n        event.preventDefault()\n        console.log(event.target.parentElement)\n        API.updateETA(id, { time: data.time })\n            .then(socket.emit(\"update\"))\n            .then(event.target.parentElement.reset())\n            // .then(setEta({ pending: false }))\n            .then(loadById(id))\n    }\n\n    // function initPatientInformation() {\n    //     setPatientInformation({ ...patientInformation, pending: true })\n    // }\n\n    // function handlePtInformationChange(event) {\n    //     const { name, value } = event.target\n    //     setPatientInformation({ ...patientInformation, [name]: value })\n    // }\n\n    function handlePtInformationSubmit(event, data) {\n        event.preventDefault()\n        console.log(event.target.parentElement.parentElement)\n        // API.updatePtInformation(id, data)\n        //     .then(socket.emit(\"update\"))\n        //     .then(event.target.parentElement.parentElement.reset())\n        //     // .then(setPatientInformation({ pending: false }))\n        //     .then(loadById(id))\n    }\n\n    return (\n        <Container style={{ paddingTop: \"2rem\" }}>\n            <Grid container>\n                <Grid item xs={12} className={classes.header}>\n                    <Typography variant=\"h2\" style={{ color: \"#FFD400\" }}>Welcome EMS User</Typography>\n                    <Typography variant=\"h4\" style={{ color: \"#B7D5D4\" }}>Enter updates below to keep the hospital informed about your patient</Typography>\n                </Grid>\n            </Grid>\n            <Grid container\n            className={classes.toolbar}>\n                <EMSToolbar \n                    // etaInputChange={handleEtaInput}\n                    etaSubmit={handleEtaSubmit}\n                    criticalSubmit={handleCriticalsSubmit}\n                    vitalSubmit={handleVitalsSubmit}\n                    ptInfoSubmit ={handlePtInformationSubmit}\n                />\n            </Grid>\n            <Grid container>\n                <Grid item xs = {12}>\n                {ptInfo.data ? (\n                        <PatientCard patient={ptInfo.data} />\n\n                    ) : (\n                    <Typography variant=\"h4\">\n                        Loading patient information, please wait...\n                    </Typography>\n                    )\n                    }\n                </Grid>\n            </Grid>\n\n            {/* <Row>\n                <Col>\n                    <Card >\n                        <Card.Header>ETA:\n                                {/* <span>{ptInfo.data.ETA ? (ptInfo.data.ETA):(\"pending\")}</span> \n                        </Card.Header>\n                        <Card.Body>\n                            {eta.pending ? (\n                                <EtaUpdate\n                                    onChange={handleEtaInput}\n                                    onSubmit={handleEtaSubmit}\n                                ></EtaUpdate>\n                            ) : (\n                                    <EtaUpdateButton onClick={initEtaUpdate} />\n                                )}\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col>\n                    {criticalWarnings.pending ? (\n                        <CriticalWarnSelect\n                            // style={{ width: \"80%\" }}\n                            onChange={handleCriticalsInput}\n                            onSubmit={handleCriticalsSubmit}\n                        />\n                    ) : (\n                            <CriticalWarnings\n                                // style={{ width: \"80%\" }}\n                                onClick={initCriticals}\n                            // loadPtInfo={loadById}\n                            // warnings={ptInfo}\n                            />\n                        )}\n                </Col>\n                <Col>\n                    <Card style={{ marginBottom: \"1rem\" }}>\n                        <Card.Header>New Vitals</Card.Header>\n                        <Card.Body>\n                            {vitals.time ? (\n                                <VitalsForm onChange={handleVitalsInput} onSubmit={handleVitalsSubmit} />\n                            ) : (\n                                    <NewVitals onClick={initVitals} />\n                                )}\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col>\n                    <Card>\n                        <Card.Header>Patient Information</Card.Header>\n                        <Card.Body>\n                            {patientInformation.pending ? (\n                                <PatientInformationForm onChange={handlePtInformationChange} onSubmit={handlePtInformationSubmit} />\n                            ) : (\n                                    <UpdateInformation onClick={initPatientInformation} />\n                                )}\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row> */}\n            {/* <Row className=\"justify-content-center\">\n                <Col>\n                    {ptInfo.data ? (\n                        <PatientCard patient={ptInfo.data} />\n\n                    ) : (<h3>Error</h3>)\n                    }\n                </Col>\n            </Row> */}\n        </Container>\n    )\n}\n\nexport default CurrentPatient"]},"metadata":{},"sourceType":"module"}