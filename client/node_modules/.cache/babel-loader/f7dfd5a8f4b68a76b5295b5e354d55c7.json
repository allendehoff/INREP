{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/allen/GitHub/casrep/client/src/components/NewPatient/PtInitForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport API from \"../../utils/API\";\nimport Form from \"react-bootstrap/Form\"; // import {Form} from \"@material-ui/core\"\n\nimport { useHistory } from \"react-router-dom\";\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid'; // import Paper from '@material-ui/core/Paper';\n\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles'; // import { TextField } from \"@material-ui/core\";\n\nimport io from \"socket.io-client\";\nconst socket = io();\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '25ch'\n    }\n  },\n  formContainer: {\n    backgroundColor: \"lightgray\"\n  },\n  buttonDiv: {\n    alignItems: \"center\"\n  }\n}));\n\nfunction PtInitForm(props) {\n  _s();\n\n  const classes = useStyles();\n  const [ptInit, setPtInit] = useState({\n    respondingUnit: \"\",\n    ETA: \"\" // criticalWarn: \"\"\n\n  });\n  const history = useHistory(); // const [ptId, setPtId] = useState(\"\")\n\n  function handleInputChange(event) {\n    // console.log(event.target.name)\n    const {\n      name,\n      value\n    } = event.target;\n    setPtInit({ ...ptInit,\n      [name]: value\n    });\n  }\n\n  function handleReroute(id) {\n    history.push(\"/patients/\" + id);\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault(); // console.log(ptInit)\n    // if (navigator.onLine){\n\n    API.createPatient(ptInit).then(data => {\n      // console.log(data)\n      handleReroute(data.data._id);\n    }).then(socket.emit(\"update\")); // } else {console.log(\"offlineoffline\")}\n    // .then(API.findMostRecentPatient()\n    //     .then(setPtId()))\n    // .then(console.log(dbModel)))\n  }\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    justify: \"center\",\n    className: classes.formContainer,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: (classes.root, classes.form),\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          required: true,\n          variant: \"outlined\",\n          label: \"Unit Responding\",\n          placeholder: \"MS-21\",\n          helperText: \"Required\",\n          onChange: handleInputChange,\n          type: \"text\",\n          name: \"respondingUnit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          label: \"ETA\",\n          helperText: \"Optional (Can update later)\",\n          type: \"text\",\n          name: \"ETA\",\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.buttonDiv,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          size: \"large\",\n          variant: \"contained\",\n          onClick: handleSubmit,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this) // <Form onSubmit={handleSubmit}>\n  //     <Form.Group>\n  //         <Form.Label >Unit Responding</Form.Label>\n  //         <Form.Control\n  //             onChange={handleInputChange}\n  //             type=\"text\"\n  //             name=\"respondingUnit\"\n  //         />\n  //     </Form.Group>\n  //     {/* <Form.Group>\n  //         <Form.Label>ETA</Form.Label>\n  //         <Form.Control\n  //                 type=\"text\"\n  //                 name=\"ETA\"\n  //                 onChange={handleInputChange}\n  //             />\n  //     </Form.Group>\n  //     <Form.Group>\n  //         <Form.Label>Critical Warnings</Form.Label>\n  //         <Form.Control\n  //                 type=\"text\"\n  //                 name=\"criticalWarn\"\n  //                 onChange={handleInputChange} />\n  //     </Form.Group> */}\n  //     <Form.Control className=\"btn btn-primary\" type=\"submit\" value=\"Initiate Patient Report\"></Form.Control>\n  //     {/* <button \n  //     className=\"btn btn-warning\"\n  //     >\n  //         <h4>Open New Incident\n  //         </h4>\n  //     </button> */}\n  // </Form>\n  ;\n}\n\n_s(PtInitForm, \"aLX21bjNoHfZJ2YhBfS8LJstMl0=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c = PtInitForm;\nexport default PtInitForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PtInitForm\");","map":{"version":3,"sources":["/Users/allen/GitHub/casrep/client/src/components/NewPatient/PtInitForm.js"],"names":["React","useState","API","Form","useHistory","Container","Grid","Button","TextField","makeStyles","io","socket","useStyles","theme","root","margin","spacing","width","formContainer","backgroundColor","buttonDiv","alignItems","PtInitForm","props","classes","ptInit","setPtInit","respondingUnit","ETA","history","handleInputChange","event","name","value","target","handleReroute","id","push","handleSubmit","preventDefault","createPatient","then","data","_id","emit","form"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,OAAOC,IAAP,MAAiB,sBAAjB,C,CACA;;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAGA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,IAAP,MAAiB,wBAAjB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B,C,CACA;;AAEA,OAAOC,EAAP,MAAe,kBAAf;AACA,MAAMC,MAAM,GAAGD,EAAE,EAAjB;AAEA,MAAME,SAAS,GAAGH,UAAU,CAAEI,KAAD,KAAY;AACrCC,EAAAA,IAAI,EAAE;AACF,4BAAwB;AACpBC,MAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADY;AAEpBC,MAAAA,KAAK,EAAE;AAFa;AADtB,GAD+B;AAOrCC,EAAAA,aAAa,EAAE;AACXC,IAAAA,eAAe,EAAC;AADL,GAPsB;AAUrCC,EAAAA,SAAS,EAAE;AACPC,IAAAA,UAAU,EAAC;AADJ;AAV0B,CAAZ,CAAD,CAA5B;;AAeA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AACvB,QAAMC,OAAO,GAAGZ,SAAS,EAAzB;AAEA,QAAM,CAACa,MAAD,EAASC,SAAT,IAAsBzB,QAAQ,CAAC;AACjC0B,IAAAA,cAAc,EAAE,EADiB;AAEjCC,IAAAA,GAAG,EAAE,EAF4B,CAGjC;;AAHiC,GAAD,CAApC;AAKA,QAAMC,OAAO,GAAGzB,UAAU,EAA1B,CARuB,CASvB;;AAEA,WAAS0B,iBAAT,CAA2BC,KAA3B,EAAkC;AAC9B;AACA,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,KAAK,CAACG,MAA9B;AACAR,IAAAA,SAAS,CAAC,EAAE,GAAGD,MAAL;AAAa,OAACO,IAAD,GAAQC;AAArB,KAAD,CAAT;AACH;;AAED,WAASE,aAAT,CAAuBC,EAAvB,EAA2B;AACvBP,IAAAA,OAAO,CAACQ,IAAR,CAAa,eAAeD,EAA5B;AACH;;AAED,WAASE,YAAT,CAAsBP,KAAtB,EAA6B;AACzBA,IAAAA,KAAK,CAACQ,cAAN,GADyB,CAEzB;AAEA;;AAEArC,IAAAA,GAAG,CAACsC,aAAJ,CAAkBf,MAAlB,EAA0BgB,IAA1B,CAAgCC,IAAD,IAAU;AACrC;AACAP,MAAAA,aAAa,CAACO,IAAI,CAACA,IAAL,CAAUC,GAAX,CAAb;AACH,KAHD,EAGGF,IAHH,CAGQ9B,MAAM,CAACiC,IAAP,CAAY,QAAZ,CAHR,EANyB,CAUzB;AAEA;AACA;AACA;AAEH;;AAED,sBACI,QAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAC,QAAxB;AAAiC,IAAA,SAAS,EAAEpB,OAAO,CAACN,aAApD;AAAA,2BACI;AAAM,MAAA,SAAS,GAAEM,OAAO,CAACV,IAAR,EAAcU,OAAO,CAACqB,IAAxB,CAAf;AAA6C,MAAA,QAAQ,EAAEP,YAAvD;AAAA,8BACI;AAAA,gCACI,QAAC,SAAD;AACI,UAAA,QAAQ,MADZ;AAEI,UAAA,OAAO,EAAC,UAFZ;AAGI,UAAA,KAAK,EAAC,iBAHV;AAII,UAAA,WAAW,EAAC,OAJhB;AAKI,UAAA,UAAU,EAAC,UALf;AAMI,UAAA,QAAQ,EAAER,iBANd;AAOI,UAAA,IAAI,EAAC,MAPT;AAQI,UAAA,IAAI,EAAC;AART;AAAA;AAAA;AAAA;AAAA,gBADJ,eAWI,QAAC,SAAD;AACI,UAAA,OAAO,EAAC,UADZ;AAEI,UAAA,KAAK,EAAC,KAFV;AAGI,UAAA,UAAU,EAAC,6BAHf;AAII,UAAA,IAAI,EAAC,MAJT;AAKI,UAAA,IAAI,EAAC,KALT;AAMI,UAAA,QAAQ,EAAEA;AANd;AAAA;AAAA;AAAA;AAAA,gBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAqBI;AAAK,QAAA,SAAS,EAAEN,OAAO,CAACJ,SAAxB;AAAA,+BACI,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,OAAb;AAAqB,UAAA,OAAO,EAAC,WAA7B;AAAyC,UAAA,OAAO,EAAEkB,YAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cArBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ,CA4BI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA3DJ;AA6DH;;GApGQhB,U;UACWV,S,EAOAR,U;;;KARXkB,U;AAsGT,eAAeA,UAAf","sourcesContent":["import React, { useState } from \"react\"\nimport API from \"../../utils/API\"\nimport Form from \"react-bootstrap/Form\"\n// import {Form} from \"@material-ui/core\"\nimport { useHistory } from \"react-router-dom\";\n\n\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\n// import Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\n// import { TextField } from \"@material-ui/core\";\n\nimport io from \"socket.io-client\"\nconst socket = io()\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& .MuiTextField-root': {\n            margin: theme.spacing(1),\n            width: '25ch',\n        },\n    },\n    formContainer: {\n        backgroundColor:\"lightgray\"\n    },\n    buttonDiv: {\n        alignItems:\"center\"\n    }\n}));\n\nfunction PtInitForm(props) {\n    const classes = useStyles()\n\n    const [ptInit, setPtInit] = useState({\n        respondingUnit: \"\",\n        ETA: \"\",\n        // criticalWarn: \"\"\n    })\n    const history = useHistory()\n    // const [ptId, setPtId] = useState(\"\")\n\n    function handleInputChange(event) {\n        // console.log(event.target.name)\n        const { name, value } = event.target\n        setPtInit({ ...ptInit, [name]: value })\n    }\n\n    function handleReroute(id) {\n        history.push(\"/patients/\" + id)\n    }\n\n    function handleSubmit(event) {\n        event.preventDefault()\n        // console.log(ptInit)\n\n        // if (navigator.onLine){\n\n        API.createPatient(ptInit).then((data) => {\n            // console.log(data)\n            handleReroute(data.data._id)\n        }).then(socket.emit(\"update\"))\n        // } else {console.log(\"offlineoffline\")}\n\n        // .then(API.findMostRecentPatient()\n        //     .then(setPtId()))\n        // .then(console.log(dbModel)))\n\n    }\n\n    return (\n        <Grid container justify=\"center\" className={classes.formContainer}>\n            <form className={classes.root, classes.form} onSubmit={handleSubmit}>\n                <div>\n                    <TextField\n                        required\n                        variant=\"outlined\"\n                        label=\"Unit Responding\"\n                        placeholder=\"MS-21\"\n                        helperText=\"Required\"\n                        onChange={handleInputChange}\n                        type=\"text\"\n                        name=\"respondingUnit\"\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        label=\"ETA\"\n                        helperText=\"Optional (Can update later)\"\n                        type=\"text\"\n                        name=\"ETA\"\n                        onChange={handleInputChange}\n                    />\n                </div>\n                <div className={classes.buttonDiv}>\n                    <Button size=\"large\" variant=\"contained\" onClick={handleSubmit}>Submit</Button>\n                </div>\n            </form>\n        </Grid>\n        // <Form onSubmit={handleSubmit}>\n        //     <Form.Group>\n        //         <Form.Label >Unit Responding</Form.Label>\n        //         <Form.Control\n        //             onChange={handleInputChange}\n        //             type=\"text\"\n        //             name=\"respondingUnit\"\n        //         />\n        //     </Form.Group>\n        //     {/* <Form.Group>\n        //         <Form.Label>ETA</Form.Label>\n        //         <Form.Control\n        //                 type=\"text\"\n        //                 name=\"ETA\"\n        //                 onChange={handleInputChange}\n        //             />\n        //     </Form.Group>\n        //     <Form.Group>\n        //         <Form.Label>Critical Warnings</Form.Label>\n        //         <Form.Control\n        //                 type=\"text\"\n        //                 name=\"criticalWarn\"\n        //                 onChange={handleInputChange} />\n        //     </Form.Group> */}\n        //     <Form.Control className=\"btn btn-primary\" type=\"submit\" value=\"Initiate Patient Report\"></Form.Control>\n        //     {/* <button \n        //     className=\"btn btn-warning\"\n        //     >\n        //         <h4>Open New Incident\n        //         </h4>\n        //     </button> */}\n        // </Form>\n    )\n}\n\nexport default PtInitForm"]},"metadata":{},"sourceType":"module"}