{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/allen/GitHub/casrep/client/src/components/Vitals/VitalsForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\n\nconst dayjs = require(\"dayjs\");\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '25ch'\n    }\n  },\n  formgroup: {\n    display: \"block\"\n  },\n  input: {\n    marginBottom: \"0.3rem\"\n  }\n}));\nconst blankVitals = {\n  time: \"\",\n  LOR: \"Not Reported\",\n  HR: \"Not Reported\",\n  RR: \"Not Reported\",\n  BPs: \"Not Reported\",\n  BPd: \"Not Reported\",\n  oxygen: \"Not Reported\"\n}; // setVitals({ ...vitals, time: dayjs().format(\"HH:mm:ss\") })\n\nfunction VitalsForm(props) {\n  _s();\n\n  const classes = useStyles();\n  const [vitals, setVitals] = useState(blankVitals);\n\n  function handleVitalsInput(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setVitals({ ...vitals,\n      [name]: value\n    });\n  }\n\n  ;\n\n  function setTime() {\n    return new Promise(newTime => {\n      setVitals({ ...vitals,\n        time: dayjs().format(\"HH:mm:ss\")\n      });\n    });\n  }\n\n  async function handleSubmit(event, data) {\n    const withTime = await setTime();\n    console.log(withTime); // props.onSubmit(event, data)\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.root,\n    noValidate: true,\n    autoComplete: \"off\",\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      className: classes.formgroup,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        className: classes.input,\n        id: \"outlined-basic\",\n        label: \"LOR\",\n        variant: \"outlined\",\n        name: \"LOR\",\n        onChange: handleVitalsInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        className: classes.input,\n        id: \"outlined-basic\",\n        label: \"Heart Rate\",\n        variant: \"outlined\",\n        name: \"HR\",\n        onChange: handleVitalsInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        className: classes.input,\n        id: \"outlined-basic\",\n        label: \"Repiratory Rate\",\n        variant: \"outlined\",\n        name: \"RR\",\n        onChange: handleVitalsInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        className: classes.input,\n        id: \"outlined-basic\",\n        label: \"BP systolic\",\n        variant: \"outlined\",\n        name: \"BPs\",\n        onChange: handleVitalsInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        className: classes.input,\n        id: \"outlined-basic\",\n        label: \"BP diastolic\",\n        variant: \"outlined\",\n        name: \"BPd\",\n        onChange: handleVitalsInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        className: classes.input,\n        id: \"outlined-basic\",\n        label: \"Oxygen Sat\",\n        variant: \"outlined\",\n        name: \"oygen\",\n        onChange: handleVitalsInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        size: \"large\",\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: event => handleSubmit(event, vitals),\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this); // return (\n  //     <Form onSubmit={props.onSubmit}>\n  //         <Form.Group>\n  //             <Form.Label>Heart Rate</Form.Label>\n  //             <Form.Control\n  //                 name=\"HR\"\n  //                 placeholder=\"Heart Rate\"\n  //                 type=\"number\"\n  //                 onChange={props.onChange}></Form.Control>\n  //         </Form.Group>\n  //         <Form.Group>\n  //             <Form.Label>Respiratory Rate</Form.Label>\n  //             <Form.Control\n  //                 name=\"RR\"\n  //                 placeholder=\"Respiratory Rate\"\n  //                 type=\"number\"\n  //                 onChange={props.onChange}></Form.Control>\n  //         </Form.Group>\n  //         <Form.Group>\n  //             <Form.Label>BP Systolic</Form.Label>\n  //             <Form.Control\n  //                 name=\"BPs\"\n  //                 placeholder=\"Systolic\"\n  //                 type=\"number\"\n  //                 onChange={props.onChange}></Form.Control>\n  //         </Form.Group>\n  //         <Form.Group>\n  //             <Form.Label>BP Diastolic</Form.Label>\n  //             <Form.Control\n  //                 name=\"BPd\"\n  //                 placeholder=\"Diastolic\"\n  //                 type=\"number\"\n  //                 onChange={props.onChange}></Form.Control>\n  //         </Form.Group>\n  //         <Form.Group>\n  //             <Form.Label>Oxygen Saturation</Form.Label>\n  //             <Form.Control\n  //                 name=\"oxygen\"\n  //                 placeholder=\"O2 sat\"\n  //                 type=\"number\"\n  //                 onChange={props.onChange}></Form.Control>\n  //         </Form.Group>\n  //         <Button \n  //         onClick={props.onSubmit}\n  //         variant=\"primary\" \n  //         type=\"submit\">\n  //             Submit\n  //         </Button>\n  //     </Form>\n  // )\n}\n\n_s(VitalsForm, \"hLNKW+tAObIvzh/gjeUY6tfHmgI=\", false, function () {\n  return [useStyles];\n});\n\n_c = VitalsForm;\nexport default VitalsForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"VitalsForm\");","map":{"version":3,"sources":["/Users/allen/GitHub/casrep/client/src/components/Vitals/VitalsForm.js"],"names":["React","useState","Form","Button","makeStyles","TextField","Grid","dayjs","require","useStyles","theme","root","margin","spacing","width","formgroup","display","input","marginBottom","blankVitals","time","LOR","HR","RR","BPs","BPd","oxygen","VitalsForm","props","classes","vitals","setVitals","handleVitalsInput","event","name","value","target","setTime","Promise","newTime","format","handleSubmit","data","withTime","console","log"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,iBAA7B;AAEA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;;AAEA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEA,MAAMC,SAAS,GAAGL,UAAU,CAAEM,KAAD,KAAY;AACrCC,EAAAA,IAAI,EAAE;AACF,aAAS;AACLC,MAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADH;AAELC,MAAAA,KAAK,EAAE;AAFF;AADP,GAD+B;AAOrCC,EAAAA,SAAS,EAAE;AACPC,IAAAA,OAAO,EAAE;AADF,GAP0B;AAUrCC,EAAAA,KAAK,EAAE;AACHC,IAAAA,YAAY,EAAE;AADX;AAV8B,CAAZ,CAAD,CAA5B;AAeA,MAAMC,WAAW,GAAG;AAChBC,EAAAA,IAAI,EAAE,EADU;AAEhBC,EAAAA,GAAG,EAAE,cAFW;AAGhBC,EAAAA,EAAE,EAAE,cAHY;AAIhBC,EAAAA,EAAE,EAAE,cAJY;AAKhBC,EAAAA,GAAG,EAAE,cALW;AAMhBC,EAAAA,GAAG,EAAE,cANW;AAOhBC,EAAAA,MAAM,EAAE;AAPQ,CAApB,C,CAUA;;AAIA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AACvB,QAAMC,OAAO,GAAGpB,SAAS,EAAzB;AAEA,QAAM,CAACqB,MAAD,EAASC,SAAT,IAAsB9B,QAAQ,CAACkB,WAAD,CAApC;;AAEA,WAASa,iBAAT,CAA2BC,KAA3B,EAAkC;AAC9B,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,KAAK,CAACG,MAA9B;AACAL,IAAAA,SAAS,CAAC,EAAE,GAAGD,MAAL;AAAa,OAACI,IAAD,GAAQC;AAArB,KAAD,CAAT;AACH;;AAAA;;AAED,WAASE,OAAT,GAAmB;AACf,WAAO,IAAIC,OAAJ,CAAYC,OAAO,IAAG;AACzBR,MAAAA,SAAS,CAAC,EAAE,GAAGD,MAAL;AAAaV,QAAAA,IAAI,EAAEb,KAAK,GAAGiC,MAAR,CAAe,UAAf;AAAnB,OAAD,CAAT;AACH,KAFM,CAAP;AAGH;;AACD,iBAAeC,YAAf,CAA4BR,KAA5B,EAAmCS,IAAnC,EAAyC;AACrC,UAAMC,QAAQ,GAAG,MAAMN,OAAO,EAA9B;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ,EAFqC,CAGrC;AACH;;AAED,sBACI;AAAM,IAAA,SAAS,EAAEd,OAAO,CAAClB,IAAzB;AAA+B,IAAA,UAAU,MAAzC;AAA0C,IAAA,YAAY,EAAC,KAAvD;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,SAAS,EAAEkB,OAAO,CAACd,SAAnC;AAAA,8BACI,QAAC,SAAD;AACI,QAAA,SAAS,EAAEc,OAAO,CAACZ,KADvB;AAEI,QAAA,EAAE,EAAC,gBAFP;AAGI,QAAA,KAAK,EAAC,KAHV;AAII,QAAA,OAAO,EAAC,UAJZ;AAKI,QAAA,IAAI,EAAC,KALT;AAMI,QAAA,QAAQ,EAAEe;AANd;AAAA;AAAA;AAAA;AAAA,cADJ,eAQI,QAAC,SAAD;AACI,QAAA,SAAS,EAAEH,OAAO,CAACZ,KADvB;AAEI,QAAA,EAAE,EAAC,gBAFP;AAGI,QAAA,KAAK,EAAC,YAHV;AAII,QAAA,OAAO,EAAC,UAJZ;AAKI,QAAA,IAAI,EAAC,IALT;AAMI,QAAA,QAAQ,EAAEe;AANd;AAAA;AAAA;AAAA;AAAA,cARJ,eAeI,QAAC,SAAD;AACI,QAAA,SAAS,EAAEH,OAAO,CAACZ,KADvB;AAEI,QAAA,EAAE,EAAC,gBAFP;AAGI,QAAA,KAAK,EAAC,iBAHV;AAII,QAAA,OAAO,EAAC,UAJZ;AAKI,QAAA,IAAI,EAAC,IALT;AAMI,QAAA,QAAQ,EAAEe;AANd;AAAA;AAAA;AAAA;AAAA,cAfJ,eAsBI,QAAC,SAAD;AACI,QAAA,SAAS,EAAEH,OAAO,CAACZ,KADvB;AAEI,QAAA,EAAE,EAAC,gBAFP;AAGI,QAAA,KAAK,EAAC,aAHV;AAII,QAAA,OAAO,EAAC,UAJZ;AAKI,QAAA,IAAI,EAAC,KALT;AAMI,QAAA,QAAQ,EAAEe;AANd;AAAA;AAAA;AAAA;AAAA,cAtBJ,eA6BI,QAAC,SAAD;AACI,QAAA,SAAS,EAAEH,OAAO,CAACZ,KADvB;AAEI,QAAA,EAAE,EAAC,gBAFP;AAGI,QAAA,KAAK,EAAC,cAHV;AAII,QAAA,OAAO,EAAC,UAJZ;AAKI,QAAA,IAAI,EAAC,KALT;AAMI,QAAA,QAAQ,EAAEe;AANd;AAAA;AAAA;AAAA;AAAA,cA7BJ,eAoCI,QAAC,SAAD;AACI,QAAA,SAAS,EAAEH,OAAO,CAACZ,KADvB;AAEI,QAAA,EAAE,EAAC,gBAFP;AAGI,QAAA,KAAK,EAAC,YAHV;AAII,QAAA,OAAO,EAAC,UAJZ;AAKI,QAAA,IAAI,EAAC,OALT;AAMI,QAAA,QAAQ,EAAEe;AANd;AAAA;AAAA;AAAA;AAAA,cApCJ,eA2CI,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,OAAb;AAAqB,QAAA,OAAO,EAAC,WAA7B;AAAyC,QAAA,KAAK,EAAC,SAA/C;AAAyD,QAAA,OAAO,EAAGC,KAAD,IAAWQ,YAAY,CAACR,KAAD,EAAQH,MAAR,CAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA3CJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ,CArBuB,CAsEvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;;GAxHQH,U;UACWlB,S;;;KADXkB,U;AA0HT,eAAeA,UAAf","sourcesContent":["import React, { useState } from \"react\"\nimport { Form, Button } from \"react-bootstrap\"\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid'\n\nconst dayjs = require(\"dayjs\")\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& > *': {\n            margin: theme.spacing(1),\n            width: '25ch',\n        },\n    },\n    formgroup: {\n        display: \"block\"\n    },\n    input: {\n        marginBottom: \"0.3rem\"\n    }\n}));\n\nconst blankVitals = {\n    time: \"\",\n    LOR: \"Not Reported\",\n    HR: \"Not Reported\",\n    RR: \"Not Reported\",\n    BPs: \"Not Reported\",\n    BPd: \"Not Reported\",\n    oxygen: \"Not Reported\",\n}\n\n// setVitals({ ...vitals, time: dayjs().format(\"HH:mm:ss\") })\n\n\n\nfunction VitalsForm(props) {\n    const classes = useStyles();\n\n    const [vitals, setVitals] = useState(blankVitals)\n\n    function handleVitalsInput(event) {\n        const { name, value } = event.target;\n        setVitals({ ...vitals, [name]: value })\n    };\n\n    function setTime() {\n        return new Promise(newTime =>{\n            setVitals({ ...vitals, time: dayjs().format(\"HH:mm:ss\") })\n        })\n    }\n    async function handleSubmit(event, data) {\n        const withTime = await setTime()\n        console.log(withTime)\n        // props.onSubmit(event, data)\n    }\n\n    return (\n        <form className={classes.root} noValidate autoComplete=\"off\">\n            <Grid container className={classes.formgroup}>\n                <TextField\n                    className={classes.input}\n                    id=\"outlined-basic\"\n                    label=\"LOR\"\n                    variant=\"outlined\"\n                    name=\"LOR\"\n                    onChange={handleVitalsInput} />\n                <TextField\n                    className={classes.input}\n                    id=\"outlined-basic\"\n                    label=\"Heart Rate\"\n                    variant=\"outlined\"\n                    name=\"HR\"\n                    onChange={handleVitalsInput} />\n                <TextField\n                    className={classes.input}\n                    id=\"outlined-basic\"\n                    label=\"Repiratory Rate\"\n                    variant=\"outlined\"\n                    name=\"RR\"\n                    onChange={handleVitalsInput} />\n                <TextField\n                    className={classes.input}\n                    id=\"outlined-basic\"\n                    label=\"BP systolic\"\n                    variant=\"outlined\"\n                    name=\"BPs\"\n                    onChange={handleVitalsInput} />\n                <TextField\n                    className={classes.input}\n                    id=\"outlined-basic\"\n                    label=\"BP diastolic\"\n                    variant=\"outlined\"\n                    name=\"BPd\"\n                    onChange={handleVitalsInput} />\n                <TextField\n                    className={classes.input}\n                    id=\"outlined-basic\"\n                    label=\"Oxygen Sat\"\n                    variant=\"outlined\"\n                    name=\"oygen\"\n                    onChange={handleVitalsInput} />\n                <Button size=\"large\" variant=\"contained\" color=\"primary\" onClick={(event) => handleSubmit(event, vitals)}>Submit</Button>\n            </Grid>\n        </form>\n    );\n    // return (\n    //     <Form onSubmit={props.onSubmit}>\n    //         <Form.Group>\n    //             <Form.Label>Heart Rate</Form.Label>\n    //             <Form.Control\n    //                 name=\"HR\"\n    //                 placeholder=\"Heart Rate\"\n    //                 type=\"number\"\n    //                 onChange={props.onChange}></Form.Control>\n    //         </Form.Group>\n    //         <Form.Group>\n    //             <Form.Label>Respiratory Rate</Form.Label>\n    //             <Form.Control\n    //                 name=\"RR\"\n    //                 placeholder=\"Respiratory Rate\"\n    //                 type=\"number\"\n    //                 onChange={props.onChange}></Form.Control>\n    //         </Form.Group>\n    //         <Form.Group>\n    //             <Form.Label>BP Systolic</Form.Label>\n    //             <Form.Control\n    //                 name=\"BPs\"\n    //                 placeholder=\"Systolic\"\n    //                 type=\"number\"\n    //                 onChange={props.onChange}></Form.Control>\n    //         </Form.Group>\n    //         <Form.Group>\n    //             <Form.Label>BP Diastolic</Form.Label>\n    //             <Form.Control\n    //                 name=\"BPd\"\n    //                 placeholder=\"Diastolic\"\n    //                 type=\"number\"\n    //                 onChange={props.onChange}></Form.Control>\n    //         </Form.Group>\n    //         <Form.Group>\n    //             <Form.Label>Oxygen Saturation</Form.Label>\n    //             <Form.Control\n    //                 name=\"oxygen\"\n    //                 placeholder=\"O2 sat\"\n    //                 type=\"number\"\n    //                 onChange={props.onChange}></Form.Control>\n    //         </Form.Group>\n    //         <Button \n    //         onClick={props.onSubmit}\n    //         variant=\"primary\" \n    //         type=\"submit\">\n    //             Submit\n    //         </Button>\n    //     </Form>\n    // )\n}\n\nexport default VitalsForm"]},"metadata":{},"sourceType":"module"}