{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/allen/GitHub/casrep/client/src/components/PatientInformation/PatientInformationTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\"; // import { useEffect } from \"react\"\n// import { Table } from \"react-bootstrap\"\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 600\n  }\n});\n\nfunction PatientInformationTable(props) {\n  _s();\n\n  const classes = useStyles();\n  let infoArray = []; // let patientInfoObject\n  // if(props.patientObj !== \"undefined\"){\n  //     patientInfoObject = JSON.parse(props.patientObj)\n  // }\n\n  function infoObjToArr(obj) {\n    const parsed = JSON.parse(obj);\n\n    for (const key in parsed) {\n      if (key !== \"pending\") {\n        infoArray.push(parsed[key]);\n      }\n    } // console.log(infoArray)\n\n  } // useEffect(()=> {\n\n\n  if (props.patientObj !== undefined) {\n    infoObjToArr(props.patientObj);\n  } // })\n  // console.log(patientInfoObject)\n\n\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      className: classes.table,\n      \"aria-label\": \"vitals table\",\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Age\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Sex\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Chief Complaint\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"MOI/HPI\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"O2 Treatment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"From\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: infoArray.map(info => /*#__PURE__*/_jsxDEV(TableCell, {\n            children: info\n          }, info, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Table, {\n    striped: true,\n    bordered: true,\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Age\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Sex\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Chief Complaint\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"MOI/HPI\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"O2 Treatment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"From\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: infoArray.map(info => /*#__PURE__*/_jsxDEV(\"td\", {\n          children: info\n        }, info, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PatientInformationTable, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = PatientInformationTable;\nexport default PatientInformationTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"PatientInformationTable\");","map":{"version":3,"sources":["/Users/allen/GitHub/casrep/client/src/components/PatientInformation/PatientInformationTable.js"],"names":["React","useEffect","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","useStyles","table","minWidth","PatientInformationTable","props","classes","infoArray","infoObjToArr","obj","parsed","JSON","parse","key","push","patientObj","undefined","map","info"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\"\n// import { useEffect } from \"react\"\n// import { Table } from \"react-bootstrap\"\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles({\n    table: {\n        minWidth: 600,\n    },\n});\n\nfunction PatientInformationTable(props) {\n    const classes = useStyles()\n    let infoArray = []\n\n    // let patientInfoObject\n    // if(props.patientObj !== \"undefined\"){\n    //     patientInfoObject = JSON.parse(props.patientObj)\n    // }\n    function infoObjToArr(obj) {\n        const parsed = JSON.parse(obj)\n        for (const key in parsed) {\n            if (key !== \"pending\") {\n                infoArray.push(parsed[key])\n            }\n        }\n        // console.log(infoArray)\n    }\n    // useEffect(()=> {\n\n    if (props.patientObj !== undefined) {\n        infoObjToArr(props.patientObj)\n    }\n\n    // })\n\n    // console.log(patientInfoObject)\n\n    return (\n        <TableContainer component={Paper}>\n            <Table className={classes.table} aria-label=\"vitals table\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Age</TableCell>\n                        <TableCell>Sex</TableCell>\n                        <TableCell>Chief Complaint</TableCell>\n                        <TableCell>MOI/HPI</TableCell>\n                        <TableCell>O2 Treatment</TableCell>\n                        <TableCell>From</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    <TableRow>\n                        {infoArray.map(info =>\n                            <TableCell key={info}>{info}</TableCell>\n                        )}\n                    </TableRow>\n                </TableBody>\n            </Table>\n        </TableContainer>\n    )\n    return (\n        <Table striped bordered >\n            <thead>\n                <tr>\n                    <th>Age</th>\n                    <th>Sex</th>\n                    <th>Chief Complaint</th>\n                    <th>MOI/HPI</th>\n                    <th>O2 Treatment</th>\n                    <th>From</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr>\n                    {infoArray.map(info =>\n                        <td key={info}>{info}</td>\n                    )}\n                </tr>\n            </tbody>\n        </Table>\n    )\n}\n\nexport default PatientInformationTable"]},"metadata":{},"sourceType":"module"}