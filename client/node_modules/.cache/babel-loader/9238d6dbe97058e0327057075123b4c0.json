{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/allen/GitHub/casrep/client/src/components/CriticalWarning/CritWarnSelect.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\"; // import { Form, Card, Button } from \"react-bootstrap\"\n\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid'; // import CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\n// import CheckBoxIcon from '@material-ui/icons/CheckBox';\n\nfunction CriticalWarnSelect(props) {\n  _s();\n\n  const [checked, setChecked] = useState({\n    CPR: false,\n    stroke: false,\n    trauma1: false,\n    trauma2: false,\n    intubated: false,\n    fallWithThinners: false\n  });\n\n  const handleChange = event => {\n    setChecked({ ...checked,\n      [event.target.name]: event.target.checked\n    });\n    console.log(checked);\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormGroup, {\n    row: true,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: checked.CPR,\n            onChange: handleChange,\n            name: \"CPR\",\n            color: \"secondary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 29\n          }, this),\n          label: \"CPR IN PROGRESS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: checked.stroke,\n            onChange: handleChange,\n            name: \"stroke\",\n            color: \"secondary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 29\n          }, this),\n          label: \"STROKE ALERT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: checked.trauma1,\n            onChange: handleChange,\n            name: \"trauma1\",\n            color: \"secondary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 29\n          }, this),\n          label: \"Trauma Level 1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: checked.trauma2,\n            onChange: handleChange,\n            name: \"trauma2\",\n            color: \"secondary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 29\n          }, this),\n          label: \"Trauma Level 2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: checked.intubated,\n            onChange: handleChange,\n            name: \"intubated\",\n            color: \"secondary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 29\n          }, this),\n          label: \"Patient Intubated\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: checked.fallWithThinners,\n            onChange: handleChange,\n            name: \"fallWithThinners\",\n            color: \"secondary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 29\n          }, this),\n          label: \"Fall With Blood Thinners\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        size: \"large\",\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: props.onSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CriticalWarnSelect, \"lrC1G1XeZzLkrC5z9SB7I7flXSQ=\");\n\n_c = CriticalWarnSelect;\nexport default CriticalWarnSelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"CriticalWarnSelect\");","map":{"version":3,"sources":["/Users/allen/GitHub/casrep/client/src/components/CriticalWarning/CritWarnSelect.js"],"names":["React","useState","FormGroup","FormControlLabel","Checkbox","Button","Grid","CriticalWarnSelect","props","checked","setChecked","CPR","stroke","trauma1","trauma2","intubated","fallWithThinners","handleChange","event","target","name","console","log","onSubmit"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CACA;;AAEA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB,C,CACA;AACA;;AAEA,SAASC,kBAAT,CAA4BC,KAA5B,EAAmC;AAAA;;AAC/B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC;AACnCU,IAAAA,GAAG,EAAE,KAD8B;AAEnCC,IAAAA,MAAM,EAAE,KAF2B;AAGnCC,IAAAA,OAAO,EAAE,KAH0B;AAInCC,IAAAA,OAAO,EAAE,KAJ0B;AAKnCC,IAAAA,SAAS,EAAE,KALwB;AAMnCC,IAAAA,gBAAgB,EAAE;AANiB,GAAD,CAAtC;;AASA,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC5BR,IAAAA,UAAU,CAAC,EAAE,GAAGD,OAAL;AAAc,OAACS,KAAK,CAACC,MAAN,CAAaC,IAAd,GAAqBF,KAAK,CAACC,MAAN,CAAaV;AAAhD,KAAD,CAAV;AACAY,IAAAA,OAAO,CAACC,GAAR,CAAYb,OAAZ;AACH,GAHD;;AAIA,sBAEI,QAAC,SAAD;AAAW,IAAA,GAAG,MAAd;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAA,8BACI,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAA,gCACI,QAAC,gBAAD;AACI,UAAA,OAAO,eACH,QAAC,QAAD;AACI,YAAA,OAAO,EAAEA,OAAO,CAACE,GADrB;AAEI,YAAA,QAAQ,EAAEM,YAFd;AAGI,YAAA,IAAI,EAAC,KAHT;AAII,YAAA,KAAK,EAAC;AAJV;AAAA;AAAA;AAAA;AAAA,kBAFR;AASI,UAAA,KAAK,EAAC;AATV;AAAA;AAAA;AAAA;AAAA,gBADJ,eAYI,QAAC,gBAAD;AACI,UAAA,OAAO,eACH,QAAC,QAAD;AACI,YAAA,OAAO,EAAER,OAAO,CAACG,MADrB;AAEI,YAAA,QAAQ,EAAEK,YAFd;AAGI,YAAA,IAAI,EAAC,QAHT;AAII,YAAA,KAAK,EAAC;AAJV;AAAA;AAAA;AAAA;AAAA,kBAFR;AASI,UAAA,KAAK,EAAC;AATV;AAAA;AAAA;AAAA;AAAA,gBAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAyBI,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAA,gCACI,QAAC,gBAAD;AACI,UAAA,OAAO,eACH,QAAC,QAAD;AACI,YAAA,OAAO,EAAER,OAAO,CAACI,OADrB;AAEI,YAAA,QAAQ,EAAEI,YAFd;AAGI,YAAA,IAAI,EAAC,SAHT;AAII,YAAA,KAAK,EAAC;AAJV;AAAA;AAAA;AAAA;AAAA,kBAFR;AASI,UAAA,KAAK,EAAC;AATV;AAAA;AAAA;AAAA;AAAA,gBADJ,eAYI,QAAC,gBAAD;AACI,UAAA,OAAO,eACH,QAAC,QAAD;AACI,YAAA,OAAO,EAAER,OAAO,CAACK,OADrB;AAEI,YAAA,QAAQ,EAAEG,YAFd;AAGI,YAAA,IAAI,EAAC,SAHT;AAII,YAAA,KAAK,EAAC;AAJV;AAAA;AAAA;AAAA;AAAA,kBAFR;AASI,UAAA,KAAK,EAAC;AATV;AAAA;AAAA;AAAA;AAAA,gBAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAzBJ,eAiDI,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAA,gCACI,QAAC,gBAAD;AACI,UAAA,OAAO,eACH,QAAC,QAAD;AACI,YAAA,OAAO,EAAER,OAAO,CAACM,SADrB;AAEI,YAAA,QAAQ,EAAEE,YAFd;AAGI,YAAA,IAAI,EAAC,WAHT;AAII,YAAA,KAAK,EAAC;AAJV;AAAA;AAAA;AAAA;AAAA,kBAFR;AASI,UAAA,KAAK,EAAC;AATV;AAAA;AAAA;AAAA;AAAA,gBADJ,eAYI,QAAC,gBAAD;AACI,UAAA,OAAO,eACH,QAAC,QAAD;AACI,YAAA,OAAO,EAAER,OAAO,CAACO,gBADrB;AAEI,YAAA,QAAQ,EAAEC,YAFd;AAGI,YAAA,IAAI,EAAC,kBAHT;AAII,YAAA,KAAK,EAAC;AAJV;AAAA;AAAA;AAAA;AAAA,kBAFR;AASI,UAAA,KAAK,EAAC;AATV;AAAA;AAAA;AAAA;AAAA,gBAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAjDJ,eAyEI,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,OAAb;AAAqB,QAAA,OAAO,EAAC,WAA7B;AAAyC,QAAA,KAAK,EAAC,SAA/C;AAAyD,QAAA,OAAO,EAAET,KAAK,CAACe,QAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAzEJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UAFJ;AAgFH;;GA9FQhB,kB;;KAAAA,kB;AAgGT,eAAeA,kBAAf","sourcesContent":["import React, { useState } from \"react\"\n// import { Form, Card, Button } from \"react-bootstrap\"\n\nimport FormGroup from '@material-ui/core/FormGroup'\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button'\nimport Grid from '@material-ui/core/Grid'\n// import CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\n// import CheckBoxIcon from '@material-ui/icons/CheckBox';\n\nfunction CriticalWarnSelect(props) {\n    const [checked, setChecked] = useState({\n        CPR: false,\n        stroke: false,\n        trauma1: false,\n        trauma2: false,\n        intubated: false,\n        fallWithThinners: false\n    })\n\n    const handleChange = (event) => {\n        setChecked({ ...checked, [event.target.name]: event.target.checked });\n        console.log(checked)\n    };\n    return (\n\n        <FormGroup row >\n            <Grid container>\n                <Grid item xs={12}>\n                    <FormControlLabel\n                        control={\n                            <Checkbox\n                                checked={checked.CPR}\n                                onChange={handleChange}\n                                name=\"CPR\"\n                                color=\"secondary\"\n                            />\n                        }\n                        label=\"CPR IN PROGRESS\"\n                    />\n                    <FormControlLabel\n                        control={\n                            <Checkbox\n                                checked={checked.stroke}\n                                onChange={handleChange}\n                                name=\"stroke\"\n                                color=\"secondary\"\n                            />\n                        }\n                        label=\"STROKE ALERT\"\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <FormControlLabel\n                        control={\n                            <Checkbox\n                                checked={checked.trauma1}\n                                onChange={handleChange}\n                                name=\"trauma1\"\n                                color=\"secondary\"\n                            />\n                        }\n                        label=\"Trauma Level 1\"\n                    />\n                    <FormControlLabel\n                        control={\n                            <Checkbox\n                                checked={checked.trauma2}\n                                onChange={handleChange}\n                                name=\"trauma2\"\n                                color=\"secondary\"\n                            />\n                        }\n                        label=\"Trauma Level 2\"\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <FormControlLabel\n                        control={\n                            <Checkbox\n                                checked={checked.intubated}\n                                onChange={handleChange}\n                                name=\"intubated\"\n                                color=\"secondary\"\n                            />\n                        }\n                        label=\"Patient Intubated\"\n                    />\n                    <FormControlLabel\n                        control={\n                            <Checkbox\n                                checked={checked.fallWithThinners}\n                                onChange={handleChange}\n                                name=\"fallWithThinners\"\n                                color=\"secondary\"\n                            />\n                        }\n                        label=\"Fall With Blood Thinners\"\n                    />\n                </Grid>\n                <Button size=\"large\" variant=\"contained\" color=\"primary\" onClick={props.onSubmit}>Submit</Button>\n            </Grid>\n        </FormGroup>\n    )\n}\n\nexport default CriticalWarnSelect"]},"metadata":{},"sourceType":"module"}